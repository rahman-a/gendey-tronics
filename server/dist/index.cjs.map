{
  "version": 3,
  "sources": ["../index.js", "../src/models/userModal.js", "../src/localization.js", "../src/middlewares/auth.js", "../src/dbConnection.js", "../src/routers/userRouter.js", "../src/models/courseModal.js", "../src/models/productModal.js", "../src/models/instructorModal.js", "../src/models/blogModel.js", "../src/models/enrollmentModal.js", "../src/models/orderModal.js", "../src/controllers/userController.js", "../src/emails/send.js", "../src/emails/template.js", "../src/constants.js", "../src/routers/productRouter.js", "../src/middlewares/upload.js", "../src/controllers/productController.js", "../src/models/wishlistModal.js", "../src/mappingProducts.js", "../src/models/cartModel.js", "../src/controllers/cartController.js", "../src/routers/orderRouter.js", "../src/controllers/orderController.js", "../src/routers/courseRouter.js", "../src/controllers/courseController.js", "../src/models/chapterModal.js", "../src/models/lessonModel.js", "../src/models/reviewsModal.js", "../src/controllers/chapterController.js", "../src/controllers/lessonController.js", "../src/controllers/enrollmentController.js", "../src/models/notesModal.js", "../src/controllers/noteController.js", "../src/controllers/announcementController.js", "../src/models/announcementModel.js", "../src/routers/reviewRouter.js", "../src/controllers/reviewController.js", "../src/routers/instructorRouter.js", "../src/controllers/instructorController.js", "../src/routers/blogRouter.js", "../src/controllers/blogController.js", "../src/routers/wishlistRouter.js", "../src/controllers/wishlistController.js", "../src/routers/callRouter.js", "../src/models/callsModal.js", "../src/controllers/callController.js", "../src/routers/contactRouter.js", "../src/models/contactModal.js", "../src/controllers/contactController.js", "../src/routers/couponRouter.js", "../src/models/couponModal.js", "../src/controllers/couponController.js", "../src/routers/driveRouter.js", "../src/controllers/driveControllers.js", "../src/routers/Dashboard.js", "../src/controllers/Dashboard.js", "../src/routers/sliderRouter.js", "../src/models/sliderModal.js", "../src/controllers/sliderController.js", "../src/routers/supportRouter.js", "../src/controllers/supportControllers.js", "../src/models/supportModel.js", "../src/routers/adminRouter.js", "../src/controllers/adminController.js", "../src/routers/menuRouter.js", "../src/controllers/menuController.js", "../src/models/MenuModel.js", "../src/routers/mediaRouter.js", "../src/models/MediaModel.js", "../src/controllers/mediaController.js", "../src/routers/purchaseRouter.js", "../src/controllers/purchasingController.js", "../src/middlewares/errorHandler.js"],
  "sourcesContent": ["import express from 'express'\nimport cors from 'cors'\nimport dotenv from 'dotenv'\nimport cookieParser from 'cookie-parser'\nimport helmet from 'helmet'\nimport morgan from 'morgan'\nimport compression from 'compression'\nimport path from 'path'\nimport { checkApiKey } from './src/middlewares/auth.js'\nimport databaseConnection from './src/dbConnection.js'\nimport userRouter from './src/routers/userRouter.js'\nimport productRouter from './src/routers/productRouter.js'\nimport orderRouter from './src/routers/orderRouter.js'\nimport courseRouter from './src/routers/courseRouter.js'\nimport reviewRouter from './src/routers/reviewRouter.js'\nimport instructorsRouter from './src/routers/instructorRouter.js'\nimport blogRouter from './src/routers/blogRouter.js'\nimport wishlistRouter from './src/routers/wishlistRouter.js'\nimport callRouter from './src/routers/callRouter.js'\nimport contactRouter from './src/routers/contactRouter.js'\nimport couponRouter from './src/routers/couponRouter.js'\nimport driveRouter from './src/routers/driveRouter.js'\nimport dashboardRouter from './src/routers/Dashboard.js'\nimport sliderRouter from './src/routers/sliderRouter.js'\nimport supportRouter from './src/routers/supportRouter.js'\nimport adminRouter from './src/routers/adminRouter.js'\nimport menuRouter from './src/routers/menuRouter.js'\nimport mediaRouter from './src/routers/mediaRouter.js'\nimport purchaseRouter from './src/routers/purchaseRouter.js'\nimport { incomingEmails } from './src/controllers/supportControllers.js'\nimport { uploadHandler } from './src/middlewares/upload.js'\nimport { notFound, errorHandler } from './src/middlewares/errorHandler.js'\nimport { DIRNAME } from './src/constants.js'\n\n// DATABASE CONNECTION\ndatabaseConnection()\n\n// ENVIRONMENT VARIABLES\ndotenv.config({\n  path: path.join(DIRNAME, '.env'),\n})\n\n// INITIALIZE APP\nconst app = express()\n\n// MIDDLEWARES\napp.use(\n  cors({\n    origin:\n      process.env.NODE_ENV === 'production'\n        ? [\n            'https://www.gendyecu.com',\n            'https://gendyecu.com',\n            'https://admin.gendyecu.com',\n          ]\n        : ['http://localhost:3000', 'http://localhost:5173'],\n    credentials: true,\n  })\n)\napp.use(\n  helmet({\n    contentSecurityPolicy: false,\n  })\n)\napp.use(morgan('dev'))\napp.use(express.json())\napp.use(cookieParser())\napp.use(compression())\napp.use(express.urlencoded({ extended: false }))\n\n// RECEIVING E-MAILS COMING FROM MAILGUN\napp.post(\n  '/api/support/incoming',\n  (req, res, next) => {\n    if (req.body['X-Mailgun-Incoming'] === 'Yes') {\n      next()\n    } else {\n      res.status(400).json({\n        message: 'Invalid request',\n      })\n    }\n  },\n  uploadHandler.any(),\n  incomingEmails\n)\n\n// SERVING IMAGES\napp.use('/api/images', express.static(path.join(DIRNAME, 'src/uploads')))\n// CHECKING API KEY\napp.use('/api/*', checkApiKey)\n\n// ROUTERS\napp.use('/api/users', userRouter)\napp.use('/api/products', productRouter)\napp.use('/api/orders', orderRouter)\napp.use('/api/courses', courseRouter)\napp.use('/api/reviews', reviewRouter)\napp.use('/api/instructors', instructorsRouter)\napp.use('/api/blogs', blogRouter)\napp.use('/api/wishlist', wishlistRouter)\napp.use('/api/calls', callRouter)\napp.use('/api/contacts', contactRouter)\napp.use('/api/coupons', couponRouter)\napp.use('/api/drive', driveRouter)\napp.use('/api/dashboard', dashboardRouter)\napp.use('/api/sliders', sliderRouter)\napp.use('/api/support', supportRouter)\napp.use('/api/admin', adminRouter)\napp.use('/api/menu', menuRouter)\napp.use('/api/media', mediaRouter)\napp.use('/api/purchase', purchaseRouter)\n\napp.use(notFound)\napp.use(errorHandler)\n\nconst port = process.env.PORT || 5000\n\n// RUN SERVER\napp.listen(port, () => {\n  console.log(`Server is running at port ${port}`)\n})\n", "import mongoose from 'mongoose'\nimport bcrypt from 'bcrypt'\nimport jwt from 'jsonwebtoken'\nimport strings from '../localization.js'\n\nconst userSchema = new mongoose.Schema({\n    firstName: {\n        type:String,\n        required:true\n    },\n    lastName: {\n        type:String,\n        required:true\n    },\n    email: {\n        type:String,\n        unique:true,\n        lowerCase:true,\n        required:true,\n        match:/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    },\n    phoneNumber: {\n        type:String\n    },\n    password: {\n        type:String,\n        minlength:[8, 'Password must be at least eight characters'],\n        // Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\n        match:[/^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{8,}$/g, 'Password must be at least eight characters, at least one uppercase letter, one lowercase letter, one number and one special character']\n    },\n    avatar:{\n        type:String\n    }, \n    shippingAddress:{\n        address:{type:String},\n        city:{type:String},\n        postalCode:{type:String},\n        country:{type:String},\n        state:{type:String},\n        mapLink: {type:String}\n    },\n    isEmailVerified:{\n        type:Boolean,\n        default:false\n    },\n    isPhoneVerified: {\n        type:Boolean,\n        default:false\n    },\n    isAdmin: {\n        type:Boolean,\n        default:false\n    },\n    loggedBy:{\n        type:String,\n        default:'local'\n    },\n    AuthString:{\n        type:String\n    }\n}, {\n    timestamps:true\n})\n\nuserSchema.methods.toJSON = function () {\n    const user = this.toObject()\n    delete user.password\n    delete user.isEmailVerified \n    delete user.isPhoneVerified \n    delete user.AuthString \n    if(!(user.isAdmin)) delete user.isAdmin\n    const checkShippingAddress = (address) => {\n        for(let key in address){\n            if(address[key]) return true\n        }\n        return false\n    }\n    \n    if(user.shippingAddress){\n        if(!(checkShippingAddress(user.shippingAddress))) {\n            delete user.shippingAddress\n        }\n    }\n    return user\n}\n\nuserSchema.methods.toAuthJSON = function () {\n    return  {\n        _id:this._id,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        phoneNumber:this.phoneNumber\n    }\n}\n\nuserSchema.statics.AuthUser = async function (email, password, res, lang) {\n    const user = await User.findOne({email})\n    if(!user) {\n        res.status(401)\n        throw new Error(strings.user[lang].wrong_auth)\n    }\n    const isMatch = await bcrypt.compare(password, user.password)\n    if(!isMatch) {\n        res.status(401)\n        throw new Error(strings.user[lang].wrong_auth)\n    }\n    if(!(user.isEmailVerified)) {\n        res.status(401)\n        throw new Error(strings.user[lang].email_not_verify)\n    }\n    return user\n}\n\n\nuserSchema.methods.generateToken = function (days = '7 days') {\n    const token = jwt.sign({_id:this._id.toString(),}, process.env.JWT_TOKEN, {expiresIn:days})\n    return token \n}\n\nuserSchema.pre('save', async function(next){\n    if(this.isModified('password')) {\n        this.password = await bcrypt.hash(this.password, 10)\n    }\n    next()\n})\n\nconst User  = mongoose.model('User', userSchema)\nexport default User\n", "const strings = {\n  user: {\n    en: {\n      require_email: 'Email is Required',\n      require_pass: 'Password is Required',\n      email_exist: 'E-mail already exist, please choose another one',\n      create_account:\n        'Your account has been created, A link has been sent to your E-mail, please click on it to verify your E-mail',\n      email_verify: 'Pleas Verify Your Email first to login',\n      require_data: 'Please Provide The Required Data',\n      account_update: 'Account has been Updated',\n      pass_isValid: 'Please, write a valid Password',\n      old_pass_isValid: \"Old Password isn't correct, please write a valid one\",\n      pass_update: 'Password has been updated',\n      no_user: 'No Users Found',\n      account_delete: 'Account has been Deleted',\n      no_email_account: \"This Email isn't connected to any account\",\n      link_sent: 'The Link has been sent',\n      invalid_link: 'This Link is Invalid',\n      email_verified: 'Congratulation, Your E-mail has been Verified',\n      pass_reset_done: 'Congratulation, Your Password has been Reset',\n      wrong_auth: 'invalid login or password',\n      email_not_verify: 'please verify your E-mail first',\n    },\n    ar: {\n      require_email: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0623\u062F\u062E\u0644 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0623\u0644\u0643\u062A\u0631\u0648\u0646\u0649',\n      require_pass: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0623\u062F\u062E\u0644 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631',\n      email_exist: '\u0647\u0630\u0627 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0623\u0644\u0643\u062A\u0631\u0648\u0646\u0649 \u0645\u0648\u062C\u0648\u062F \u0628\u0627\u0644\u0641\u0639\u0644, \u0645\u0646 \u0641\u0636\u0644 \u0627\u062E\u062A\u0631 \u0628\u0631\u064A\u062F \u0622\u062E\u0631',\n      create_account:\n        '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u062C\u0633\u0627\u0628 \u0628\u0646\u062C\u0627\u062D, \u0644\u0642\u062F \u062A\u0645 \u0627\u0631\u0633\u0627\u0644 \u0631\u0627\u0628\u0637 \u062A\u0641\u0639\u064A\u0644 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0623\u0644\u0643\u062A\u0631\u0648\u0646\u0649 \u0627\u0644\u0649 \u0628\u0631\u064A\u062F\u0643 \u0627\u0644\u0627\u0644\u0643\u062A\u0631\u0648\u0646\u0649, \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u0636\u063A\u0637 \u0639\u0644\u064A\u0647 \u0644\u062A\u0641\u0639\u064A\u0644 \u062D\u0633\u0627\u0628\u0643',\n      email_verify: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0642\u0645 \u0628\u062A\u0641\u0639\u064A\u0644 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0625\u0644\u0643\u062A\u0631\u0648\u0646\u0649 \u0623\u0648\u0644\u0627',\n      require_data: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0623\u062F\u062E\u0644 \u0627\u0644\u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629',\n      account_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u062D\u0633\u0627\u0628 \u0628\u0646\u062C\u0627\u062D',\n      pass_isValid: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0623\u0643\u062A\u0628 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0635\u062D\u064A\u062D\u0629',\n      old_pass_isValid:\n        '\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0642\u062F\u064A\u0645\u0629 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D\u0629, \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u0643\u062A\u0628 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0635\u062D\u064A\u062D\u0629',\n      pass_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631',\n      no_user: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0645\u0633\u062A\u062E\u062F\u0645',\n      account_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062C\u0633\u0627\u0628 \u0628\u0646\u062C\u0627\u062D',\n      no_email_account: '\u0647\u0630\u0627 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0625\u0644\u0643\u062A\u0631\u0648\u0646\u0649 \u063A\u064A\u0631 \u0645\u0631\u062A\u0628\u0637 \u0628\u0627\u0649 \u062D\u0633\u0627\u0628',\n      link_sent: '\u062A\u0645 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0631\u0627\u0628\u0637 \u0628\u0646\u062C\u0627\u062D',\n      invalid_link: '\u0627\u0644\u0631\u0627\u0628\u0637 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D',\n      email_verified: '\u062A\u0647\u0627\u0646\u064A\u0646\u0627 \u062A\u0645 \u062A\u0641\u0639\u064A\u0644 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0625\u0644\u0643\u062A\u0631\u0648\u0646\u0649 \u0628\u0646\u062C\u0627\u062D',\n      pass_reset_done: '\u062A\u0647\u0627\u0646\u064A\u0646\u0627 \u062A\u0645 \u0625\u0639\u0627\u062F\u0629 \u0636\u0628\u0637 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631',\n      wrong_auth: '\u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0627\u0644\u062F\u062E\u0648\u0644 \u062E\u0627\u0637\u0626\u0629, \u0645\u0646 \u0641\u0636\u0644\u0643 \u062D\u0627\u0648\u0644 \u0645\u0631\u0629 \u0622\u062E\u0631\u0649',\n      email_not_verify: '\u064A\u0631\u062C\u0649 \u062A\u0641\u0639\u064A\u0644 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0625\u0644\u0643\u062A\u0631\u0648\u0646\u0649 \u0623\u0648\u0644\u0627',\n    },\n  },\n  product: {\n    en: {\n      product_exist:\n        'A Product with that name already exist, please choose another one',\n      create_product: 'The Product has created',\n      no_product: 'No Product Found',\n      product_update: 'Product has been updated',\n      image_upload_require: 'Please upload the image',\n      image_upload: 'The Image has uploaded successfully',\n      no_image: 'No Image Found',\n      image_upload_formats:\n        'please upload image with following extension png or jpg',\n      product_delete: 'has deleted',\n      product_require_image: 'Product require at least one image',\n      image_delete: 'image has deleted successfully',\n      item_add: 'Item has been added to the cart',\n      no_item: 'No Item Found',\n      item_delete: 'Item has been removed to the cart',\n      cart_empty: 'No Items Found in the Cart',\n      cart_clear: 'Cart has been cleared',\n      no_order: 'No Orders History to Display',\n      order_update: 'The Order has been updated',\n      already_wishlist: 'You Already Add this Item to Wishlist',\n      wishlist_add: 'The Item has been added to Wishlist',\n    },\n    ar: {\n      product_exist: '\u0625\u0633\u0645 \u0627\u0644\u0645\u0646\u062A\u062C \u0645\u0648\u062C\u0648\u062F \u0628\u0627\u0644\u0641\u0639\u0644, \u0645\u0646 \u0641\u0636\u0644\u0643 \u0625\u062E\u062A\u0631 \u0627\u0633\u0645 \u0622\u062E\u0631',\n      create_product: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u0646\u062A\u062C \u0628\u0646\u062C\u0627\u062D',\n      no_product: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0623\u0649 \u0645\u0646\u062A\u062C',\n      product_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0645\u0646\u062A\u062C \u0628\u0646\u062C\u0627\u062D',\n      image_upload_require: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0642\u0645 \u0628\u0631\u0641\u0639 \u0627\u0644\u0635\u0648\u0631\u0629',\n      image_upload: '\u062A\u0645 \u0631\u0641\u0639 \u0627\u0644\u0635\u0648\u0631\u0629 \u0628\u0646\u062C\u0627\u062D',\n      no_image: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0623\u0649 \u0635\u0648\u0631\u0629',\n      image_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0635\u0648\u0631\u0629 \u0628\u0646\u062C\u0627\u062D',\n      product_require_image: '\u0627\u0644\u0645\u0646\u062A\u062C \u064A\u062C\u0628 \u0623\u0646 \u064A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 \u0635\u0648\u0631\u0629 \u0648\u0627\u062D\u062F\u0629 \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644',\n      image_upload_formats: 'png \u0627\u0648 jpg \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u0631\u0641\u0639 \u0627\u0644\u0635\u0648\u0631 \u0628\u0627\u0645\u062A\u062F\u0627\u062F',\n      product_delete: '\u062A\u0645 \u062D\u0630\u0641\u0647 \u0628\u0646\u062C\u0627\u062D',\n      item_add: '\u062A\u0645 \u0623\u0636\u0627\u0641\u0629 \u0627\u0644\u0645\u0646\u062A\u062C \u0641\u0649 \u0639\u0631\u0628\u0629 \u0627\u0644\u062A\u0633\u0648\u0642',\n      no_item: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0645\u0646\u062A\u062C',\n      item_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0645\u0646\u062A\u062C \u0645\u0646 \u0639\u0631\u0628\u0629 \u0627\u0644\u062A\u0633\u0648\u0642',\n      cart_empty: '\u0639\u0631\u0628\u0629 \u0627\u0644\u062A\u0633\u0648\u0642 \u062E\u0627\u0644\u064A\u0629',\n      cart_clear: '\u062A\u0645 \u0625\u062E\u0644\u0627\u0621 \u0639\u0631\u0628\u0629 \u0627\u0644\u062A\u0633\u0648\u0642',\n      no_order: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0623\u0649 \u0637\u0644\u0628\u0627\u062A \u0633\u0627\u0628\u0642\u0629',\n      order_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0637\u0644\u0628',\n      already_wishlist: '\u0627\u0644\u0645\u0646\u062A\u062C \u0645\u0648\u062C\u0648\u062F \u0628\u0627\u0644\u0641\u0639\u0644 \u0641\u0649 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062A\u0641\u0636\u064A\u0644\u0627\u062A',\n      wishlist_add: '\u062A\u0645 \u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0645\u0646\u062A\u062C \u0641\u0649 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062A\u0641\u0636\u064A\u0644\u0627\u062A',\n    },\n  },\n  course: {\n    en: {\n      course_create: 'The Course has been Created',\n      no_course: 'No Course Found',\n      not_enrolled: 'Not Enrolled in Any Course Yet',\n      course_update: 'Course has been Updated',\n      course_delete: 'The Course has been Deleted',\n      ann_create: 'The Announcement has been created',\n      no_ann: 'No Announcements Found',\n      ann_update: 'Announcement has been Updated',\n      ann_delete: 'The Announcement has been deleted',\n      no_ann_comment: \"Comment can't be added because No Announcement Found\",\n      already_ann_comment: 'You Already commented on this Announcement',\n      add_ann_comment: 'The Comment has been added',\n      no_ann_comments_add: 'No Comments have been added yet',\n      end_ann_comments: 'End of Comments',\n      no_comments: 'No Comments Found',\n      comment_delete: 'Comment has been Deleted',\n      chapter_title_exist:\n        'Chapter Title already exist, please choose another title',\n      chapter_create: 'The Chapter has been created',\n      no_chapters: 'No Chapters Found',\n      no_course_chapters: 'No Chapters Found for this course',\n      chapter_update: 'Chapter has been updated',\n      chapter_delete: 'Chapter has been deleted',\n      lesson_title_exist:\n        'Lesson title already exist, please choose another title',\n      lesson_create: 'The Lesson has been created',\n      no_lesson: 'No Lesson Found',\n      lesson_update: 'Lesson has been updated',\n      lesson_delete: 'The Lesson has been deleted',\n      already_enrolled: 'You already Enrolled in this Course',\n      new_enroll: 'Congratulation for Enrolling in this Course',\n      no_enroll: 'No Enrollment Found',\n      no_course_enroll: 'You not Enrolled in this course',\n      lesson_complete: 'The Lesson Already Completed',\n      instructor_exist: 'This instructor already exist',\n      instructor_add: 'The Instructor has been added',\n      no_instructor: 'No Instructor Found',\n      instructor_update: 'Instructor has been Updated',\n      instructor_delete: 'The Instructor has been Deleted',\n      review_no_instructor: \"Review can't be added because No instructor Found\",\n      already_review: 'You Already reviewed the instructor',\n      review_add: 'The Review has been added',\n      end_reviews: 'End of Reviews',\n      delete_review: 'Review has been Deleted',\n      note_choose_lesson: 'Please Choose a lesson before creating a note',\n      note_create: 'Note has been created',\n      no_note: 'No Note Found',\n      note_update: 'The Note has been updated',\n      no_notes: 'No Notes Found',\n      note_delete: 'The Note has been removed',\n      already_reviewed: 'You already reviewed this course',\n      no_reviews: 'No Reviews has been Added yet',\n      review_update: 'Review has been Updated',\n      review_delete: 'Review has been Deleted',\n      coupon_exist: 'You already Created a Coupon with that code',\n      coupon_create: 'The Coupon has been created',\n      coupon_not_valid: 'Coupon Not Valid',\n      coupon_expired: 'Coupon Expired',\n      no_coupon: 'No Coupon Found',\n      coupon_update: 'Coupon has been Updated',\n      coupon_delete: 'Coupon has been Deleted',\n      valid_coupon: 'Coupon has Marked as Valid',\n      not_valid_coupon: 'Coupon has Marked as Invalid',\n    },\n    ar: {\n      course_create: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u062F\u0648\u0631\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629 \u0628\u0646\u062C\u0627\u062D',\n      no_course: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0623\u0649 \u062F\u0648\u0631\u0627\u062A \u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      not_enrolled: '\u063A\u064A\u0631 \u0645\u0633\u062C\u0644 \u0641\u0649 \u0627\u0649 \u062F\u0648\u0631\u0629 \u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      course_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u062F\u0648\u0631\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      course_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062F\u0648\u0631\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629 \u0628\u0646\u062C\u0627\u062D',\n      ann_create: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0625\u0634\u0639\u0627\u0631 \u0628\u0646\u062C\u0627\u062D',\n      no_ann: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0627\u0634\u0639\u0627\u0631\u0627\u062A',\n      ann_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0625\u0634\u0639\u0627\u0631',\n      ann_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0625\u0634\u0639\u0627\u0631 \u0628\u0646\u062C\u0627\u062D',\n      no_ann_comment: '\u0644\u0627 \u064A\u0645\u0643\u0646 \u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u062A\u0639\u0644\u064A\u0642 \u0639\u0644\u0649 \u0625\u0634\u0639\u0627\u0631 \u063A\u064A\u0631 \u0645\u0648\u062C\u0648\u062F',\n      already_ann_comment: '\u0644\u0642\u062F \u0623\u0636\u0641\u062A \u062A\u0639\u0644\u064A\u0642 \u0628\u0627\u0644\u0641\u0639\u0644 \u0639\u0644\u0649 \u0647\u0630\u0627 \u0627\u0644\u0625\u0634\u0639\u0627\u0631',\n      add_ann_comment: '\u062A\u0645 \u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u062A\u0639\u0644\u064A\u0642',\n      no_ann_comments_add: '\u0644\u0645 \u064A\u062A\u0645 \u0625\u0636\u0627\u0641\u0629 \u0627\u0649 \u062A\u0639\u0644\u064A\u0642\u0627\u062A',\n      end_ann_comments: '\u0646\u0647\u0627\u064A\u0629 \u0627\u0644\u062A\u0639\u0644\u064A\u0642\u0627\u062A',\n      no_comments: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u062A\u0639\u0644\u064A\u0642\u0627\u062A',\n      comment_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062A\u0639\u0644\u064A\u0642 \u0628\u0646\u062C\u0627\u062D',\n      chapter_title_exist: '\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0641\u0635\u0644 \u0645\u0648\u062C\u0648\u062F \u0628\u0627\u0644\u0641\u0639\u0644, \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u062E\u062A\u0631 \u0639\u0646\u0648\u0627\u0646 \u0622\u062E\u0631',\n      chapter_create: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0641\u0635\u0644 \u0628\u0646\u062C\u0627\u062D',\n      no_chapters: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0641\u0635\u0648\u0644',\n      no_course_chapters: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0641\u0635\u0648\u0644 \u0644\u0644\u062F\u0631\u0648\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      chapter_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0641\u0635\u0644 \u0628\u0646\u062C\u0627\u062D',\n      chapter_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0641\u0635\u0644 \u0628\u0646\u062C\u0627\u062D',\n      lesson_title_exist: '\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u062F\u0631\u0633 \u0645\u0648\u062C\u0648\u062F \u0628\u0627\u0644\u0641\u0639\u0644, \u0645\u0646 \u0641\u0636\u0644\u0643 \u0625\u062E\u062A\u0631 \u0639\u0646\u0648\u0627\u0646 \u0622\u062E\u0631',\n      lesson_create: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u062F\u0631\u0633 \u0628\u0646\u062C\u0627\u062D',\n      no_lesson: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u062F\u0631\u0648\u0633',\n      lesson_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u062F\u0631\u0633',\n      lesson_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062F\u0631\u0633 \u0628\u0646\u062C\u0627\u062D',\n      already_enrolled: '\u0623\u0646\u062A \u0645\u0633\u062C\u0644 \u0628\u0627\u0644\u0641\u0639\u0644 \u0641\u0649 \u0647\u0630\u0629 \u0627\u0644\u062F\u0648\u0631\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      new_enroll: '\u062A\u0647\u0627\u0646\u064A\u0646\u0627, \u0627\u0646\u062A \u0627\u0644\u0622\u0646 \u0645\u0633\u062C\u0644 \u0641\u0649 \u0627\u0644\u062F\u0648\u0631\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      no_enroll: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u062A\u0633\u062C\u064A\u0644 \u0641\u0649 \u0627\u0649 \u062F\u0648\u0631\u0629 \u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      no_course_enroll: '\u0644\u0633\u062A \u0645\u0633\u062C\u0644 \u0641\u0649 \u0647\u0630\u0629 \u0627\u0644\u062F\u0648\u0631\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629',\n      lesson_complete: '\u0627\u0644\u0641\u0635\u0644 \u0628\u0627\u0644\u0641\u0639\u0644 \u0645\u0643\u062A\u0645\u0644',\n      instructor_exist: '\u0627\u0644\u0645\u062F\u0631\u0628 \u0628\u0627\u0644\u0641\u0639\u0644 \u0645\u0648\u062C\u0648\u062F',\n      instructor_add: '\u062A\u0645 \u0623\u0636\u0627\u0641\u0629 \u0627\u0644\u0645\u062F\u0631\u0628 \u0628\u0646\u062C\u0627\u062D',\n      no_instructor: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0645\u062F\u0631\u0628',\n      instructor_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0645\u062F\u0631\u0628',\n      instructor_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0645\u062F\u0631\u0628 \u0628\u0646\u062C\u0627\u062D',\n      review_no_instructor: '\u0644\u0627 \u064A\u0645\u0643\u0646 \u0627\u0636\u0627\u0641\u0629 \u062A\u0642\u064A\u064A\u0645 \u0644\u0645\u062F\u0631\u0628 \u063A\u064A\u0631 \u0645\u0648\u062C\u0648\u062F',\n      already_review: '\u0628\u0627\u0644\u0641\u0639\u0644 \u0627\u0636\u0641\u062A \u062A\u0642\u064A\u064A\u0645 \u0644\u0647\u0630\u0627 \u0627\u0644\u0645\u062F\u0631\u0628',\n      end_reviews: '\u0646\u0647\u0627\u064A\u0629 \u0627\u0644\u062A\u0642\u064A\u064A\u0645\u0627\u062A',\n      delete_review: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062A\u0642\u064A\u064A\u0645 \u0628\u0646\u062C\u0627\u062D',\n      note_choose_lesson: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0623\u062E\u062A\u0631 \u0627\u0644\u0641\u0635\u0644 \u0642\u0628\u0644 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u0644\u0627\u062D\u0638\u0629',\n      note_create: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u0644\u0627\u062D\u0638\u0629 \u0628\u0646\u062C\u0627\u062D',\n      no_note: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0645\u0644\u0627\u062D\u0638\u0629',\n      note_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0627\u0644\u0645\u0644\u0627\u062D\u0638\u0629 \u0628\u0646\u062C\u0627\u062D',\n      no_notes: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0645\u0644\u0627\u062D\u0638\u0627\u062A',\n      note_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0645\u0644\u0627\u062D\u0638\u0629 \u0628\u0646\u062C\u0627\u062D',\n      already_reviewed: '\u0644\u0642\u062F \u0642\u064A\u0645\u062A \u0647\u0630\u0647 \u0627\u0644\u062F\u0648\u0631\u0629 \u0627\u0644\u062A\u062F\u0631\u064A\u0628\u064A\u0629 \u0628\u0627\u0644\u0641\u0639\u0644',\n      review_add: '\u062A\u0645 \u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u062A\u0642\u064A\u064A\u0645 \u0628\u0646\u062C\u0627\u062D',\n      no_reviews: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u062A\u0642\u064A\u064A\u0645\u0627\u062A',\n      review_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0627\u0644\u062A\u0642\u064A\u064A\u0645 \u0628\u0646\u062C\u0627\u062D',\n      review_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062A\u0642\u064A\u064A\u0645 \u0628\u0646\u062C\u0627\u062D',\n      coupon_exist: '\u0647\u0630\u0627 \u0627\u0644\u0643\u0648\u062F \u0645\u0648\u062C\u0648\u062F \u0628\u0627\u0644\u0641\u0639\u0644, \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u062E\u062A\u0631 \u0643\u0648\u062F \u0622\u062E\u0631',\n      coupon_create: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0643\u0648\u0628\u0648\u0646 \u0628\u0646\u062C\u0627\u062D',\n      no_coupon: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0643\u0648\u0628\u0648\u0646',\n      coupon_not_valid: '\u0627\u0644\u0643\u0648\u0628\u0648\u0646 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D',\n      coupon_expired: '\u0627\u0646\u062A\u0647\u062A \u0635\u0644\u0627\u062D\u064A\u0629 \u0627\u0644\u0643\u0648\u0628\u0648\u0646',\n      coupon_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0628\u064A\u0627\u0646\u0627\u062A \u0627\u0644\u0643\u0648\u0628\u0648\u0646',\n      coupon_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0643\u0648\u0628\u0648\u0646 \u0628\u0646\u062C\u0627\u062D',\n      valid_coupon: '\u0627\u0644\u0643\u0648\u0628\u0648\u0646 \u0627\u0635\u0628\u062D \u0635\u0627\u0644\u062D \u0644\u0644\u0625\u0633\u062A\u062E\u062F\u0627\u0645',\n      not_valid_coupon: '\u0627\u0644\u0643\u0648\u0628\u0648\u0646 \u0627\u0635\u0628\u062D \u063A\u064A\u0631 \u0635\u0627\u0644\u062D \u0644\u0644\u0625\u0633\u062A\u062E\u062F\u0627\u0645',\n    },\n  },\n  blog: {\n    en: {\n      blog_exist:\n        'A Blog with that name already exist, please choose another one',\n      blog_create: 'The Blog has been created',\n      no_blogs: 'No Blogs Found',\n      no_blog: 'No Blog Found',\n      blog_update: 'Blog has been updated',\n      blog_delete: 'Blog has been deleted',\n      comment_no_blog: \"Comment can't be added because No blog Found\",\n      already_comment_blog: 'You Already commented on this Blog',\n      blog_comment_add: 'The Comment has been added',\n      blog_no_comments: 'No Comments have been added yet',\n      blog_end_comments: 'End if comments',\n      blog_comment_delete: 'Comment has been Deleted',\n    },\n    ar: {\n      blog_exist: '\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u062F\u0648\u0646\u0629 \u0645\u0648\u062C\u0648\u062F, \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u062E\u062A\u0631 \u0639\u0646\u0648\u0627\u0646 \u0622\u062E\u0631',\n      blog_create: '\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062F\u0648\u0646\u0629 \u0628\u0646\u062C\u0627\u062D',\n      no_blogs: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0645\u062F\u0648\u0646\u0627\u062A',\n      no_blog: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u062F\u0648\u0646\u0629',\n      blog_update: '\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0627\u0644\u0645\u062F\u0648\u0646\u0629 \u0628\u0646\u062C\u0627\u062D',\n      blog_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0645\u062F\u0648\u0646\u0629 \u0628\u0646\u062C\u0627\u062D',\n      comment_no_blog: '\u0644\u0627 \u064A\u0645\u0643\u0646 \u0627\u0636\u0627\u0641\u0629 \u062A\u0639\u0644\u064A\u0642 \u0644\u0645\u062F\u0648\u0646\u0629 \u063A\u064A\u0631 \u0645\u0648\u062C\u0648\u062F\u0629',\n      already_comment_blog: '\u0644\u0642\u062F \u0639\u0644\u0642\u062A \u0639\u0644\u0649 \u0647\u0630\u0629 \u0627\u0644\u0645\u062F\u0648\u0646\u0629 \u0628\u0627\u0644\u0641\u0639\u0644',\n      blog_comment_add: '\u062A\u0645 \u0627\u0636\u0627\u0641\u0629 \u0627\u0644\u062A\u0639\u0644\u064A\u0642 \u0628\u0646\u062C\u0627\u062D',\n      blog_no_comments: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0636\u0627\u0641\u0629 \u062A\u0639\u0644\u064A\u0642\u0627\u062A',\n      blog_end_comments: '\u0646\u0647\u0627\u064A\u0629 \u0627\u0644\u062A\u0639\u0644\u064A\u0642\u0627\u062A',\n      blog_comment_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062A\u0639\u0644\u064A\u0642 \u0628\u0646\u062C\u0627\u062D',\n    },\n  },\n  contact: {\n    en: {\n      contact_sent: 'Your Message has been sent',\n      no_contacts: 'No Contacts Found',\n      no_contact: 'No Contact Found',\n      read_contact: 'Contact has Marked as Read',\n      no_read_contact: 'contact has Marked as Not Read',\n      contact_delete: 'The Contact has been Deleted',\n      already_booked: 'You already Booked a Call',\n      booked_call: 'The Call has been Booked, wait for response',\n      no_calls_booked: 'No Calls has been Booked yet',\n      no_call: 'No Call Found',\n      done_call: 'Call has Marked as Done',\n      active_call: 'Call has Marked as Active',\n      call_delete: 'The Call has been Deleted',\n    },\n    ar: {\n      contact_sent: '\u062A\u0645 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0628\u0646\u062C\u0627\u062D',\n      no_contacts: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0631\u0633\u0627\u0644\u0629',\n      no_contact: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0631\u0633\u0627\u0644\u0629',\n      read_contact: '\u062A\u0645 \u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0631\u0633\u0627\u0644\u0629',\n      no_read_contact: '\u0631\u0633\u0627\u0644\u0629 \u063A\u064A\u0631 \u0645\u0642\u0631\u0648\u0621\u0629',\n      contact_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0628\u0646\u062C\u0627\u062D',\n      already_booked: '\u0644\u0642\u062F \u062D\u062C\u0632\u062A \u0627\u0644\u0645\u0643\u0627\u0644\u0645\u0629 \u0645\u0646 \u0642\u0628\u0644',\n      booked_call: '\u062A\u0645 \u062D\u062C\u0632 \u0627\u0644\u0645\u0643\u0627\u0644\u0645\u0629 \u0628\u0646\u062C\u0627\u062D, \u0646\u0631\u062C\u0648 \u0627\u0644\u0627\u0646\u062A\u0638\u0627\u0631',\n      no_calls_booked: '\u0644\u0645 \u064A\u062A\u0645 \u062D\u062C\u0632 \u0645\u0643\u0627\u0644\u0645\u0627\u062A \u0628\u0639\u062F',\n      no_call: '\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0649 \u0645\u0643\u0627\u0644\u0645\u0627\u062A',\n      done_call: '\u062A\u0645 \u0627\u0644\u0627\u0646\u062A\u0647\u0627\u0621 \u0645\u0646 \u0627\u0644\u062D\u062C\u0632',\n      active_call: '\u062A\u0645 \u062A\u0641\u0639\u064A\u0644 \u0627\u0644\u062D\u062C\u0632',\n      call_delete: '\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u062D\u062C\u0632 \u0628\u0646\u062C\u0627\u062D',\n    },\n  },\n  auth: {\n    en: {\n      log_first: 'Please Login First',\n      not_auth: 'Not Authorized',\n      valid_api_key: 'Please Provide A valid Api Key',\n      not_auth_api: 'NOT Authorized to Access the API',\n    },\n    ar: {\n      log_first: '\u0645\u0646 \u0641\u0636\u0644\u0643 \u0633\u062C\u0644 \u062F\u062E\u0648\u0644 \u0627\u0648\u0644\u0627\u064B',\n      not_auth: '\u063A\u064A\u0631 \u0645\u0633\u0645\u0648\u062D',\n      valid_api_key: '\u0643\u0648\u062F API \u063A\u064A\u0631 \u0635\u0627\u0644\u062D',\n      not_auth_api: '\u063A\u064A\u0631 \u0645\u0635\u0631\u062D \u0644\u0625\u0633\u062A\u062E\u062F\u0627\u0645 API',\n    },\n  },\n}\n\nexport default strings\n", "import User from '../models/userModal.js'\nimport jwt from 'jsonwebtoken'\nimport strings from '../localization.js'\n\nexport const isAuth = async (req, res, next) => {\n  const { lang } = req.headers\n  try {\n    if (req.cookies['token'] || req.cookies['tokenAd']) {\n      const token = req.cookies['token'] || req.cookies['tokenAd']\n      const decode = jwt.verify(token, process.env.JWT_TOKEN, (err, decode) => {\n        if (err) {\n          throw new Error(strings.auth[lang].log_first)\n        }\n        return decode\n      })\n\n      const user = await User.findOne({ _id: decode._id })\n      if (!user) {\n        res.status(401)\n        throw new Error(strings.auth[lang].log_first)\n      }\n      req.user = user\n      req.token = token\n      next()\n    } else {\n      res.status(401)\n      throw new Error(strings.auth[lang].log_first)\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const isAdmin = (req, res, next) => {\n  const { lang } = req.headers\n  if (req.user.isAdmin) {\n    next()\n    return\n  }\n\n  throw new Error(strings.auth[lang].not_auth)\n}\n\nexport const checkApiKey = (req, res, next) => {\n  const { lang } = req.headers\n  if (req.headers.apikey) {\n    try {\n      if (req.headers.apikey === process.env.APIKEY) next()\n      else {\n        res.status(401)\n        throw new Error(strings.auth[lang].valid_api_key)\n      }\n    } catch (error) {\n      next(error)\n    }\n  } else {\n    res.status(401)\n    strings?.auth[lang]\n      ? next(new Error(strings.auth[lang].not_auth_api))\n      : res.status(403).send(`\n        <h1> Forbidden </h1>\n        <script> setTimeout(() => window.location.href = 'https://www.gendyecu.com' ,1000) </script>\n      `)\n  }\n}\n", "// @ts-nocheck\nimport mongoose, { Mongoose } from 'mongoose'\nimport chalk from 'chalk'\n\nconst databaseConnection = async (_) => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGODB_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    })\n    console.log(chalk.greenBright('Mongodb connected', conn.connection.host))\n  } catch (error) {\n    console.log(chalk.redBright('failed to connect to database', error.message))\n  }\n}\n\nmongoose.set('strictQuery', false)\nexport default databaseConnection\n", "import express from 'express'\nconst router = express.Router()\n\nimport { isAuth, isAdmin } from '../middlewares/auth.js'\n\nimport {\n  createNewUser,\n  userAuthentication,\n  userLogout,\n  updateUserData,\n  updatePassword,\n  deleteUserAccount,\n  getUserData,\n  getUserDataById,\n  listAllUsers,\n  googleSignIn,\n  facebookSignIn,\n  sendEmailActivationLink,\n  sendRestPasswordLink,\n  verifyAuthLink,\n  adminLogin,\n  adminLogout,\n  deleteUserById,\n  getCourseAndProductDownloadLink,\n  generalSearchHandler,\n} from '../controllers/userController.js'\n\nrouter.post('/new', createNewUser)\nrouter.post('/login', userAuthentication)\nrouter.post('/login/google', googleSignIn)\nrouter.post('/login/facebook', facebookSignIn)\nrouter.post('/login/admin', adminLogin)\nrouter.post('/logout', isAuth, userLogout)\nrouter.post('/logout/admin', isAuth, isAdmin, adminLogout)\nrouter.patch('/', isAuth, updateUserData)\nrouter.patch('/credential', isAuth, updatePassword)\nrouter.delete('/', isAuth, deleteUserAccount)\nrouter.delete('/:id', isAuth, isAdmin, deleteUserById)\nrouter.get('/search', generalSearchHandler)\nrouter.get('/me', isAuth, getUserData)\nrouter.get('/links', isAuth, getCourseAndProductDownloadLink)\nrouter.get('/:id', isAuth, isAdmin, getUserDataById)\nrouter.get('/', isAuth, isAdmin, listAllUsers)\nrouter.post('/email-link-activation', sendEmailActivationLink)\nrouter.post('/reset-password-link', sendRestPasswordLink)\nrouter.patch('/verify-auth-link', verifyAuthLink)\n\nexport default router\n", "import mongoose from 'mongoose'\n\nconst courseSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, 'Course Name is Required'],\n    },\n    description: {\n      type: String,\n      required: [true, 'Course Description is Required'],\n    },\n    language: {\n      type: String,\n      default: 'arabic',\n    },\n    price: {\n      type: Number,\n    },\n    instructor: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Instructor',\n    },\n    points: [\n      {\n        point: {\n          type: String,\n        },\n        order: {\n          type: Number,\n        },\n      },\n    ],\n    requirements: [\n      {\n        type: String,\n      },\n    ],\n    image: {\n      type: String,\n    },\n    targets: [\n      {\n        type: String,\n      },\n    ],\n    isPaid: {\n      type: Boolean,\n      default: false,\n    },\n    discount: {\n      type: Number,\n      default: 0,\n    },\n    driveFile: [\n      {\n        link: String,\n        part: Number,\n      },\n    ],\n    isPublished: {\n      type: Boolean,\n      default: false,\n    },\n    trailer: String,\n  },\n  { timestamps: true }\n)\n\nexport default mongoose.model('Course', courseSchema)\n", "import mongoose from 'mongoose'\n\nconst productSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, 'Product Name is Required'],\n    },\n    short: {\n      type: String,\n    },\n    description: {\n      type: String,\n      required: [true, 'Product Description is Required'],\n    },\n    price: {\n      type: Number,\n      required: [true, 'Product Price is Required'],\n    },\n    type: {\n      type: String,\n      required: [true, 'Product Type is Required'],\n    },\n    images: [\n      {\n        src: String,\n      },\n    ],\n    video: {\n      type: String,\n    },\n    image: String,\n    quantity: {\n      type: Number,\n      required: [true, 'Product Quantity is Required'],\n    },\n    isListed: {\n      type: Boolean,\n      default: false,\n    },\n    driveFile: [\n      {\n        link: String,\n        part: Number,\n      },\n    ],\n    options: [\n      {\n        question: String,\n        elements: Array,\n      },\n    ],\n  },\n  {\n    timestamps: true,\n  }\n)\n\nexport default mongoose.model('Product', productSchema)\n", "import mongoose from 'mongoose'\n\nconst reviewSchema = new mongoose.Schema(\n  {\n    user: {\n      type: mongoose.Schema.Types.ObjectId,\n      required: true,\n      ref: 'User',\n    },\n    body: {\n      type: String,\n      required: [true, \"Review can't be empty\"],\n    },\n    rating: {\n      type: Number,\n      required: [true, 'Rating is Required'],\n    },\n  },\n  { timestamps: true }\n)\n\nconst instructorSchema = new mongoose.Schema(\n  {\n    info: {\n      type: mongoose.Schema.Types.ObjectId,\n      required: true,\n      ref: 'User',\n    },\n    role: {\n      type: String,\n    },\n    about: {\n      type: String,\n    },\n    avatar: {\n      type: String,\n    },\n    reviews: [reviewSchema],\n  },\n  { timestamps: true }\n)\n\ninstructorSchema.post('save', (doc, next) => {\n  doc\n    .populate('info', 'firstName lastName')\n    .then((info) =>\n      info.populate('reviews.user', 'firstName lastName').then((_) => next())\n    )\n})\n\nexport default mongoose.model('Instructor', instructorSchema)\n", "import mongoose from 'mongoose'\n\nconst commentSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true,\n        ref:'User'\n    },\n    comment: {\n        type:String,\n        required:[true,'Comment can\\'t be Empty'] \n    }\n}, {timestamps:true})\n\nconst blogSchema = new mongoose.Schema({\n    title: {\n        type:String,\n        required:[true,'Blog title is Required'] \n    },\n    body:{\n        type:String,\n        required:[true,'Blog Body is Required']  \n    },\n    author: {\n        type:mongoose.Schema.Types.ObjectId,\n        required:true,\n        ref:'User'\n    },\n    image: {\n        type:String\n    },\n    seen:{\n        type:Number,\n        default:0\n    },\n    comments:[commentSchema]\n}, {timestamps:true})\n\nexport default mongoose.model('Blog', blogSchema)\n", "import mongoose from 'mongoose'\n\nconst enrollmentSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'User',\n        required:true,\n    },\n    course:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'Course',\n        required:true\n    },\n    completedLesson:[\n        {\n            type:mongoose.Schema.Types.ObjectId,\n            ref:'Lesson'\n        }\n    ],\n    completedChapters:[\n        {\n            type:mongoose.Schema.Types.ObjectId,\n            ref:'Chapter'\n        }\n    ],\n    isCourseCompleted: {\n        type:Boolean,\n        default:false\n    },\n    currentLesson:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'Lesson'\n    },\n    progress:{\n        type:Number,\n        default:0\n    },\n    payment:{\n        type:Number,\n        default:0\n    }\n}, {timestamps:true})\n\nexport default mongoose.model('Enrollment', enrollmentSchema)", "import mongoose from 'mongoose'\n\nconst orderSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true,\n        ref:'User'\n    },\n    orderItems:[\n        {\n            quantity:{type:Number, required:true},\n            options:Array,\n            product:{\n                type:mongoose.Schema.Types.ObjectId,\n                required:true,\n                ref:'Product'\n            }\n        }\n    ],\n    shippingAddress:{\n        address:{type:String},\n        city:{type:String},\n        postalCode:{type:String},\n        country:{type:String},\n    },\n    paymentMethod:{\n        type:String,\n        default:'paypal'\n    },\n    paymentResult:{\n        id:{type:String},\n        status:{type:String},\n        update_time:{type:String},\n    },\n    totalPrice:{\n        type:Number,\n        required:true,\n        default:0.0\n    },\n    isPaid:{\n        type:Boolean,\n        default:true\n    },\n    paidAt:{\n        type:Date,\n        default:new Date().toISOString()\n    },\n    isDelivered:{\n        type:Boolean,\n        required:true,\n        default:false\n    },\n    deliveredAt:{\n        type:Date\n    },\n},{\n    timestamps:true\n})\n\n\nexport default mongoose.model('Order', orderSchema)", "import User from '../models/userModal.js'\nimport Course from '../models/courseModal.js'\nimport Product from '../models/productModal.js'\nimport Instructor from '../models/instructorModal.js'\nimport Blog from '../models/blogModel.js'\nimport Enrollment from '../models/enrollmentModal.js'\nimport Order from '../models/orderModal.js'\nimport randomstring from 'randomstring'\nimport sendEmail from '../emails/send.js'\nimport jwt from 'jsonwebtoken'\nimport bcrypt from 'bcrypt'\nimport { OAuth2Client } from 'google-auth-library'\nimport fetch from 'node-fetch'\nimport crypto from 'crypto'\nconst CLIENT_ID = process.env.GOOGLE_CLIENT_ID\nimport strings from '../localization.js'\n\nexport const createNewUser = async (req, res, next) => {\n  const { email } = req.body\n  const newUser = new User(req.body)\n  const { lang } = req.headers\n  try {\n    if (!email) {\n      res.status(401)\n      throw new Error(strings.user[lang].require_email)\n    }\n    const isFound = await User.findOne({ email })\n    if (isFound) {\n      res.status(401)\n      throw new Error(strings.user[lang].email_exist)\n    }\n    const user = await newUser.save()\n    await sendAuthLinkToUser(user, req, 'activate')\n    res.status(201).send({\n      success: true,\n      code: 201,\n      user: user._id,\n      message: strings.user[lang].create_account,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const userAuthentication = async (req, res, next) => {\n  const { email, password } = req.body\n  const { lang } = req.headers\n\n  try {\n    if (!email) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_email)\n    }\n    if (!password) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_pass)\n    }\n    const user = await User.AuthUser(email, password, res, lang)\n    const token = user.generateToken()\n    res.cookie('token', token, {\n      httpOnly: true,\n      maxAge: 1000 * 60 * 60 * 24 * 7,\n    })\n    res.json({\n      success: true,\n      code: 200,\n      user: user,\n      expiryAt: expireAt(7),\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const adminLogin = async (req, res, next) => {\n  const { email, password } = req.body\n  try {\n    if (!email) {\n      res.status(400)\n      throw new Error('Please, Provide Your E-mail Address')\n    }\n    if (!password) {\n      res.status(400)\n      throw new Error('Please, Provide Your Password')\n    }\n    const user = await User.AuthUser(email, password, res, 'en')\n    if (!user.isAdmin) {\n      res.status(401)\n      throw new Error('invalid login or password')\n    }\n    const token = user.generateToken('1d')\n    res.cookie('tokenAd', token, {\n      httpOnly: true,\n      maxAge: 1000 * 60 * 60 * 24 * 1,\n      secure: process.env.NODE_ENV !== 'development',\n    })\n    res.json({\n      success: true,\n      code: 200,\n      id: user._id,\n      expiryAt: expireAt(1),\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const adminLogout = async (req, res, next) => {\n  try {\n    res.clearCookie('tokenAd')\n    res.json({\n      success: true,\n      code: 200,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const userLogout = async (req, res, next) => {\n  try {\n    res.clearCookie('token')\n    res.json({\n      success: true,\n      code: 200,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateUserData = async (req, res, next) => {\n  const updatedData = req.body\n  const user = req.user\n  const { lang } = req.headers\n\n  try {\n    const allowedKeys = [\n      'firstName',\n      'lastName',\n      'email',\n      'phoneNumber',\n      'isEmailVerified',\n      'isPhoneVerified',\n      'shippingAddress',\n    ]\n    if (Object.keys(updatedData).length < 1) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_data)\n    }\n    for (let key in updatedData) {\n      if (allowedKeys.includes(key)) {\n        if (key === 'shippingAddress') {\n          const address = updatedData['shippingAddress']\n          for (let key in address) {\n            user['shippingAddress'][key] = address[key]\n          }\n        } else if (updatedData[key]) {\n          user[key] = updatedData[key]\n        } else {\n          res.status(400)\n          throw new Error(`please provide a value for ${key}`)\n        }\n      } else {\n        res.status(400)\n        throw new Error(`${key} is Unknown, please choose a verified key`)\n      }\n    }\n    await user.save()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.user[lang].account_update,\n      user,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updatePassword = async (req, res, next) => {\n  const { oldPass, newPass } = req.body\n  const { lang } = req.headers\n\n  try {\n    const user = await User.findOne({ email: req.user.email })\n    if (user.password && !oldPass) {\n      res.status(400)\n      throw new Error(strings.user[lang].old_pass_isValid)\n    }\n    if (!newPass) {\n      res.status(400)\n      throw new Error(strings.user[lang].pass_isValid)\n    }\n    if (user.password) {\n      const isMatch = await bcrypt.compare(oldPass, user.password)\n      if (!isMatch) {\n        res.status(400)\n        throw new Error(strings.user[lang].old_pass_isValid)\n      }\n      user.password = newPass\n    } else {\n      user.password = newPass\n    }\n    await user.save()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.user[lang].pass_update,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getUserData = async (req, res, next) => {\n  try {\n    res.json({\n      success: true,\n      code: 200,\n      user: req.user,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getUserDataById = async (req, res, next) => {\n  const { id } = req.params\n  const { lang } = req.headers\n\n  try {\n    const user = await User.findById(id)\n    if (!user) {\n      res.status(404)\n      throw new Error(strings.user[lang].no_user)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      user: user,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllUsers = async (req, res, next) => {\n  const { name, page, skip } = req.query\n  const { lang } = req.headers\n\n  let searchFilter = { isAdmin: { $ne: true } }\n\n  try {\n    if (name) {\n      searchFilter = {\n        ...searchFilter,\n        firstName: {\n          $regex: name,\n          $options: 'i',\n        },\n      }\n    }\n    const count = await User.count({ ...searchFilter })\n    const users = await User.find({ ...searchFilter })\n      .limit(parseInt(page) || 10)\n      .skip(parseInt(skip) || 0)\n\n    if (!users || users.length < 1) {\n      res.status(404)\n      throw new Error(strings.user[lang].no_user)\n    }\n\n    res.json({\n      success: true,\n      code: 200,\n      users,\n      count,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const googleSignIn = async (req, res, next) => {\n  try {\n    let user = null\n    const googleToken = req.body.token\n    const userObj = await verifyGoogleToken(googleToken)\n    const isExist = await User.findOne({ email: userObj.email })\n    if (!isExist) {\n      const newUser = new User(userObj)\n      user = await newUser.save()\n    } else {\n      user = isExist\n    }\n    const token = user.generateToken()\n    res.cookie('token', token, {\n      httpOnly: true,\n      maxAge: 1000 * 60 * 60 * 24 * 7,\n    })\n    res.json({\n      success: true,\n      code: 200,\n      expiryAt: expireAt(7),\n      user,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const facebookSignIn = async (req, res, next) => {\n  const { token } = req.body\n  try {\n    let user = null\n    const fetchedUser = await verifyFacebookToken(token)\n    const isExist = await User.findOne({ email: fetchedUser.email })\n    if (!isExist) {\n      const newUser = new User(fetchedUser)\n      user = await newUser.save()\n    } else {\n      user = isExist\n    }\n    const generatedToken = user.generateToken()\n    res.cookie('token', generatedToken, {\n      httpOnly: true,\n      maxAge: 1000 * 60 * 60 * 24 * 7,\n    })\n    res.json({\n      success: true,\n      code: 200,\n      expiryAt: expireAt(7),\n      user,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteUserAccount = async (req, res, next) => {\n  const { lang } = req.headers\n  try {\n    await req.user.remove()\n    const instructor = await Instructor.findById(req.user._id)\n    if (instructor) {\n      await instructor.remove()\n      const courses = await Course.find({ instructor: instructor._id })\n      if (courses.length) {\n        for (const course of courses) {\n          course.instructor = null\n          await course.save()\n        }\n      }\n    }\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.user[lang].account_delete,\n      user: req.user._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteUserById = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const user = await User.findById(id)\n\n    if (!user) {\n      res.status(404)\n      throw new Error('No User Found')\n    }\n    await user.remove()\n    const instructor = await Instructor.findById(user._id)\n    if (instructor) {\n      await instructor.remove()\n      const courses = await Course.find({ instructor: instructor._id })\n      if (courses.length) {\n        for (const course of courses) {\n          course.instructor = null\n          await course.save()\n        }\n      }\n    }\n    res.json({\n      success: true,\n      code: 200,\n      message: 'user has been removed',\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const sendEmailActivationLink = async (req, res, next) => {\n  const { lang } = req.headers\n\n  // destructure email from req.body\n  const { email } = req.body\n  try {\n    // check if email exist or not\n    const user = await User.findOne({ email })\n\n    // if not send error\n    if (!user) throw new Error(strings.user[lang].no_email_account)\n\n    await sendAuthLinkToUser(user, req, 'activate')\n    res.send({\n      success: true,\n      code: 200,\n      message: strings.user[lang].link_sent,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const sendRestPasswordLink = async (req, res, next) => {\n  const { email } = req.body\n  const { lang } = req.headers\n\n  try {\n    // check if email exist or not\n    const user = await User.findOne({ email })\n\n    // if not send error\n    if (!user) throw new Error(strings.user[lang].no_email_account)\n\n    await sendAuthLinkToUser(user, req, 'reset')\n    res.send({\n      success: true,\n      code: 200,\n      message: strings.user[lang].link_sent,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const verifyAuthLink = async (req, res, next) => {\n  const { token, type, password } = req.body\n  const { lang } = req.headers\n\n  try {\n    // decode the token to extract user id\n    const decode = jwt.verify(token, process.env.RESET_TOKEN, (err, decode) => {\n      if (err) {\n        throw new Error(strings.user[lang].invalid_link)\n      }\n      return decode\n    })\n    // find the user using id from token\n    const user = await User.findOne({ _id: decode.id })\n\n    // if not user send error\n    if (!user) throw new Error(strings.user[lang].no_email_account)\n    // check if reset code == the user reset code\n    const isResetCodeMatch = await bcrypt.compare(decode.code, user.AuthString)\n\n    // if not send error\n    if (!isResetCodeMatch) throw new Error(strings.user[lang].invalid_link)\n\n    if (type === 'activate') {\n      user.isEmailVerified = true\n      await user.save()\n      res.json({\n        success: true,\n        code: 200,\n        message: strings.user[lang].email_verified,\n      })\n    } else if (type === 'reset') {\n      user.password = password\n      await user.save()\n      // send success from server\n      res.json({\n        success: true,\n        code: 200,\n        message: strings.user[lang].pass_reset_done,\n      })\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getCourseAndProductDownloadLink = async (req, res, next) => {\n  try {\n    const enrollments = await Enrollment.find(\n      { user: req.user._id },\n      { course: 1 }\n    ).populate('course', 'name driveFile')\n    const orders = await Order.find(\n      { user: req.user._id },\n      { orderItems: 1 }\n    ).populate({\n      path: 'orderItems',\n      populate: {\n        path: 'product',\n        select: 'name driveFile',\n      },\n    })\n\n    const courseLinks = []\n\n    for (const enrollment of enrollments) {\n      if (enrollment.course.driveFile.length) {\n        courseLinks.push({\n          _id: enrollment.course._id,\n          name: enrollment.course.name,\n          links: enrollment.course.driveFile,\n          type: 'course',\n        })\n      }\n    }\n\n    const productLinks = []\n\n    for (const order of orders) {\n      for (const item of order.orderItems) {\n        if (item.product.driveFile.length) {\n          productLinks.push({\n            _id: crypto.randomBytes(16).toString('hex'),\n            name: item.product.name,\n            links: item.product.driveFile,\n            type: 'product',\n          })\n        }\n      }\n    }\n\n    res.send({\n      code: 200,\n      success: true,\n      links: [...courseLinks, ...productLinks],\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const generalSearchHandler = async (req, res, next) => {\n  const { keyword } = req.query\n\n  try {\n    const result = []\n\n    const courses = await Course.find(\n      {\n        isPublished: true,\n        $or: [\n          { name: new RegExp(keyword, 'i') },\n          { description: new RegExp(keyword, 'i') },\n        ],\n      },\n      { name: 1, description: 1, _id: 1 }\n    )\n\n    for (const course of courses) {\n      result.push({\n        _id: course._id,\n        title: course.name,\n        description: course.description,\n        type: 'course',\n      })\n    }\n\n    const products = await Product.find(\n      {\n        isListed: true,\n        $or: [\n          { name: new RegExp(keyword, 'i') },\n          { description: new RegExp(keyword, 'i') },\n        ],\n      },\n      { name: 1, description: 1, _id: 1 }\n    )\n\n    for (const product of products) {\n      result.push({\n        _id: product._id,\n        title: product.name,\n        description: product.description,\n        type: 'product',\n      })\n    }\n\n    const blogs = await Blog.find(\n      {\n        $or: [\n          { title: new RegExp(keyword, 'i') },\n          { body: new RegExp(keyword, 'i') },\n        ],\n      },\n      { title: 1, body: 1, _id: 1 }\n    )\n\n    for (const blog of blogs) {\n      result.push({\n        _id: blog._id,\n        title: blog.title,\n        description: blog.body,\n        type: 'blog',\n      })\n    }\n\n    res.send({\n      code: 200,\n      success: true,\n      result,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nconst sendAuthLinkToUser = async (user, req, type) => {\n  try {\n    // create randomstring\n    const resetCode = randomstring.generate()\n\n    // create token\n    const token = jwt.sign(\n      { id: user._id.toString(), code: resetCode },\n      process.env.RESET_TOKEN,\n      { expiresIn: '1 day' }\n    )\n\n    // crypt this random string\n    const cryptResetCode = await bcrypt.hash(resetCode, 10)\n\n    // store in db\n    user.AuthString = cryptResetCode\n    await user.save()\n\n    // compose the url\n    const resetUrl = `${process.env.APP_URL}/${type}?TOKEN=${token}`\n    // const resetUrl = `${req.protocol}://172.21.80.180:3000/${type}?TOKEN=${token}`\n    const info = {\n      link: resetUrl,\n      name: user.firstName,\n      email: user.email,\n    }\n    const emailData = {\n      to: [user.email],\n      from: 'noreplay@gendyecu.com',\n      subject:\n        type === 'reset' ? 'Reset your password' : 'Activate your account',\n      info,\n    }\n    await sendEmail(emailData, type)\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nasync function verifyFacebookToken(token) {\n  const response = await fetch(\n    `https://graph.facebook.com/me?fields=id,first_name,last_name,email,picture&access_token=${token}`\n  )\n  const userObj = await response.json()\n  return {\n    firstName: userObj.first_name,\n    lastName: userObj.last_name,\n    email: userObj.email,\n    avatar: userObj.picture.data.url,\n    loggedBy: 'facebook',\n  }\n}\n\nasync function verifyGoogleToken(token) {\n  const client = new OAuth2Client(CLIENT_ID)\n  const ticket = await client.verifyIdToken({\n    idToken: token,\n    audience: CLIENT_ID,\n  })\n  const payload = ticket.getPayload()\n  return {\n    email: payload.email,\n    firstName: payload.given_name,\n    lastName: payload.family_name,\n    avatar: payload.picture,\n    isEmailVerified: true,\n    loggedBy: 'google',\n  }\n}\n\nfunction expireAt(day) {\n  const today = new Date()\n  const expiry = new Date(today)\n  return expiry.setDate(today.getDate() + day)\n}\n", "import { Resend } from 'resend'\nimport template from './template.js'\nimport dotenv from 'dotenv'\nimport path from 'path'\nimport { DIRNAME } from '../constants.js'\ndotenv.config({\n  path: path.join(DIRNAME, '.env'),\n})\n\nconst resend = new Resend(process.env.RESEND_API_KEY)\n\nconst sendEmail = async (data, type) => {\n  const html = data.html ? data.html : template[type](data.info)\n  data.html = html\n  delete data.info\n  const { data: sendData, error } = await resend.emails.send(data)\n  if (error) {\n    console.log(error)\n  } else {\n    console.log('Email Send =>', sendData)\n  }\n}\n\nexport default sendEmail\n\n/**\n * const data = {\n    from: 'noreplay@Gendytronics.com',\n    to: info.email,\n    subject: type === 'activate' \n    ?'Email Verification'\n    :'Reset Account Password',\n    html\n  };\n */\n", "const template = {\n  activate(info) {\n    return `\n        <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">\n<head>\n\t<!--[if gte mso 9]>\n\t<xml>\n\t\t<o:OfficeDocumentSettings>\n\t\t<o:AllowPNG/>\n\t\t<o:PixelsPerInch>96</o:PixelsPerInch>\n\t\t</o:OfficeDocumentSettings>\n\t</xml>\n\t<![endif]-->\n\t<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n\t<meta name=\"format-detection\" content=\"date=no\" />\n\t<meta name=\"format-detection\" content=\"address=no\" />\n\t<meta name=\"format-detection\" content=\"telephone=no\" />\n\t<meta name=\"x-apple-disable-message-reformatting\" />\n    <!--[if !mso]><!-->\n\t<link href=\"https://fonts.googleapis.com/css?family=Noto+Sans:400,400i,700,700i\" rel=\"stylesheet\" />\n    <!--<![endif]-->\n\t<title>Email Template</title>\n\t<!--[if gte mso 9]>\n\t<style type=\"text/css\" media=\"all\">\n\t\tsup { font-size: 100% !important; }\n\t</style>\n\t<![endif]-->\n\t\n\n\t<style type=\"text/css\" media=\"screen\">\n\t\t/* Linked Styles */\n\t\tbody { padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#f4f4f4; -webkit-text-size-adjust:none }\n\t\ta { color:#66c7ff; text-decoration:none }\n\t\tp { padding:0 !important; margin:0 !important } \n\t\timg { -ms-interpolation-mode: bicubic; /* Allow smoother rendering of resized image in Internet Explorer */ }\n\t\t.mcnPreviewText { display: none !important; }\n\t\t.hero_bg {\n\t\t\tbackground-image: url('https://i.ibb.co/HCbMmHJ/img-3.png');\n\t\t\tmargin:0;\n\t\t\tpadding: 0;\n\t\t}\n\t\t\t\t\n\t\t/* Mobile styles */\n\t\t@media only screen and (max-device-width: 480px), only screen and (max-width: 480px) {\n\t\t\t.mobile-shell { width: 100% !important; min-width: 100% !important; }\n\t\t\t.bg { background-size: 100% auto !important; -webkit-background-size: 100% auto !important; }\n\t\t\t\n\t\t\t.text-header,\n\t\t\t.m-center { text-align: center !important; }\n\t\t\t\n\t\t\t.center { margin: 0 auto !important; }\n\t\t\t.container { padding: 20px 10px !important }\n\t\t\t\n\t\t\t.td { width: 100% !important; min-width: 100% !important; }\n\n\t\t\t.m-br-15 { height: 15px !important; }\n\t\t\t.p30-15 { padding: 30px 15px !important; }\n\t\t\t.p40 { padding: 20px !important; }\n\n\t\t\t.m-td,\n\t\t\t.m-hide { display: none !important; width: 0 !important; height: 0 !important; font-size: 0 !important; line-height: 0 !important; min-height: 0 !important; }\n\n\t\t\t.m-block { display: block !important; }\n\n\t\t\t.fluid-img img { width: 100% !important; max-width: 100% !important; height: auto !important; }\n\n\t\t\t.column,\n\t\t\t.column-top,\n\t\t\t.column-empty,\n\t\t\t.column-empty2,\n\t\t\t.column-dir-top { float: left !important; width: 100% !important; display: block !important; }\n\t\t\t.column-empty { padding-bottom: 10px !important; }\n\t\t\t.column-empty2 { padding-bottom: 20px !important; }\n\t\t\t.content-spacing { width: 15px !important; }\n\t\t}\n\t</style>\n</head>\n<body class=\"body\" style=\"padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#f4f4f4; -webkit-text-size-adjust:none;\">\n\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#f4f4f4\">\n\t\t<tr>\n\t\t\t<td align=\"center\" valign=\"top\">\n\t\t\t\t<table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"mobile-shell\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"td container\" style=\"width:650px; min-width:650px; font-size:0pt; line-height:0pt; margin:0; font-weight:normal; padding:55px 0px;\">\n\t\t\t\t\t\t\t<!-- Header -->\n\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td style=\"padding-bottom: 20px;\">\n\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 25px 30px 25px 30px;\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column-top\" width=\"145\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"img m-center\" style=\"font-size:0pt; line-height:0pt; text-align:left;\"><img src=\"https://i.ibb.co/gFfjfPy/gendy-logo.png\" width=\"167\" height=\"75\" editable=\"true\" border=\"0\" alt=\"\" /></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column-empty\" width=\"1\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-header\" style=\"color:#000; font-family:'Noto Sans', Arial,sans-serif; font-size:20px; line-height:16px; text-align:right; text-transform:uppercase;\"><multiline><webversion class=\"link2\" style=\"color:#000; font-weight: 900; text-decoration:none;\">Account Activation</webversion></multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<!-- END Header -->\n\n\t\t\t\t\t\t\t<repeater>\n\t\t\t\t\t\t\t\t<!-- Article / Title + Copy + Button -->\n\t\t\t\t\t\t\t\t<layout label='Article / Title + Copy + Button'>\n\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"padding-bottom: 20px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 50px 30px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- <tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"h3 pb20\" style=\"color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:24px; line-height:32px; text-align:left; padding-bottom:20px;\"><multiline>Lorem ipsum dolor sit amet consecteur</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text pb20\" style=\"color:#777777; font-family:'Noto Sans', Arial,sans-serif; font-size:14px; line-height:26px; text-align:left; padding-bottom:20px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<multiline>\t\n                                                                            <p>Hi ${info.name}</p>\n                                                                            <p>We Are so happy to have you on board</p> \n                                                                            <p>A new account with your credential has created recently</p>\n                                                                            <p>To confirm your account click the button below</p>\n                                                                            <p>If you're having trouble clicking the button, copy and paste the URL below into your web browser:</p>\n                                                                            <p>Thanks,</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</multiline>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- Button -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin-bottom:1rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-button\" style=\"background:#ffeb3b; color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:14px; line-height:18px; padding:12px 20px; text-align:center; border-radius:6px;\"><multiline><a href=\"${info.link}\" target=\"_blank\" class=\"link-white\" style=\"color:#363636; text-decoration:none;\"><span class=\"link-white\" style=\"color:#363636; text-decoration:none;\">Confirm Account</span></a></multiline></td>\n                                                                            </tr>\n                                                                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n                                                                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                                                            <tr>\n                                                                                <td class=\"text-button\" style=\"display: block; margin-bottom: 2rem; color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; text-align:left; line-height:1.5\">${info.link}</td>\n                                                                            </tr>\n                                                                        </table>\n                                                                    </td>\n                                                                </tr>\n                                                                \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- END Button -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</layout>\t\n\t\t\t\t\t\t\t\t<!-- END Article / Title + Copy + Button -->\n\n\t\t\t\t\t\t\t<!-- Footer -->\n\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 50px 30px;\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\" style=\"padding-bottom: 30px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"img\" width=\"55\" style=\"font-size:0pt; line-height:0pt; text-align:left;\"><a href=\"https://www.facebook.com/aljazriacademy/\" target=\"_blank\"><img src=\"https://i.ibb.co/JdNYZVR/t8-ico-facebook.jpg\" width=\"38\" height=\"38\" editable=\"true\" border=\"0\" alt=\"\" /></a></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer1 pb10\" style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:16px; line-height:20px; text-align:center; padding-bottom:10px;\"><multiline>Elgendy Autotronics Center</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer2 pb30\" style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\"><multiline>Al Haram, Al Omraneyah Ash Sharqeyah, El Omraniya, Giza Governorate 11511</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer2 pb30\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a style=\"color:#999999;\" href=\"https://www.gendyecu.com\" target=\"__blank\">visit website</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<!-- END Footer -->\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n    `\n  },\n  reset(info) {\n    return `\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">\n<head>\n\t<!--[if gte mso 9]>\n\t<xml>\n\t\t<o:OfficeDocumentSettings>\n\t\t<o:AllowPNG/>\n\t\t<o:PixelsPerInch>96</o:PixelsPerInch>\n\t\t</o:OfficeDocumentSettings>\n\t</xml>\n\t<![endif]-->\n\t<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n\t<meta name=\"format-detection\" content=\"date=no\" />\n\t<meta name=\"format-detection\" content=\"address=no\" />\n\t<meta name=\"format-detection\" content=\"telephone=no\" />\n\t<meta name=\"x-apple-disable-message-reformatting\" />\n    <!--[if !mso]><!-->\n\t<link href=\"https://fonts.googleapis.com/css?family=Noto+Sans:400,400i,700,700i\" rel=\"stylesheet\" />\n    <!--<![endif]-->\n\t<title>Email Template</title>\n\t<!--[if gte mso 9]>\n\t<style type=\"text/css\" media=\"all\">\n\t\tsup { font-size: 100% !important; }\n\t</style>\n\t<![endif]-->\n\t\n\n\t<style type=\"text/css\" media=\"screen\">\n\t\t/* Linked Styles */\n\t\tbody { padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#f4f4f4; -webkit-text-size-adjust:none }\n\t\ta { color:#66c7ff; text-decoration:none }\n\t\tp { padding:0 !important; margin:0 !important } \n\t\timg { -ms-interpolation-mode: bicubic; /* Allow smoother rendering of resized image in Internet Explorer */ }\n\t\t.mcnPreviewText { display: none !important; }\n\t\t.hero_bg {\n\t\t\tbackground-image: url('https://i.ibb.co/HCbMmHJ/img-3.png');\n\t\t\tmargin:0;\n\t\t\tpadding: 0;\n\t\t}\n\t\t\t\t\n\t\t/* Mobile styles */\n\t\t@media only screen and (max-device-width: 480px), only screen and (max-width: 480px) {\n\t\t\t.mobile-shell { width: 100% !important; min-width: 100% !important; }\n\t\t\t.bg { background-size: 100% auto !important; -webkit-background-size: 100% auto !important; }\n\t\t\t\n\t\t\t.text-header,\n\t\t\t.m-center { text-align: center !important; }\n\t\t\t\n\t\t\t.center { margin: 0 auto !important; }\n\t\t\t.container { padding: 20px 10px !important }\n\t\t\t\n\t\t\t.td { width: 100% !important; min-width: 100% !important; }\n\n\t\t\t.m-br-15 { height: 15px !important; }\n\t\t\t.p30-15 { padding: 30px 15px !important; }\n\t\t\t.p40 { padding: 20px !important; }\n\n\t\t\t.m-td,\n\t\t\t.m-hide { display: none !important; width: 0 !important; height: 0 !important; font-size: 0 !important; line-height: 0 !important; min-height: 0 !important; }\n\n\t\t\t.m-block { display: block !important; }\n\n\t\t\t.fluid-img img { width: 100% !important; max-width: 100% !important; height: auto !important; }\n\n\t\t\t.column,\n\t\t\t.column-top,\n\t\t\t.column-empty,\n\t\t\t.column-empty2,\n\t\t\t.column-dir-top { float: left !important; width: 100% !important; display: block !important; }\n\t\t\t.column-empty { padding-bottom: 10px !important; }\n\t\t\t.column-empty2 { padding-bottom: 20px !important; }\n\t\t\t.content-spacing { width: 15px !important; }\n\t\t}\n\t</style>\n</head>\n<body class=\"body\" style=\"padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#f4f4f4; -webkit-text-size-adjust:none;\">\n\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#f4f4f4\">\n\t\t<tr>\n\t\t\t<td align=\"center\" valign=\"top\">\n\t\t\t\t<table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"mobile-shell\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"td container\" style=\"width:650px; min-width:650px; font-size:0pt; line-height:0pt; margin:0; font-weight:normal; padding:55px 0px;\">\n\t\t\t\t\t\t\t<!-- Header -->\n\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td style=\"padding-bottom: 20px;\">\n\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 25px 30px 25px 30px;\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column-top\" width=\"145\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"img m-center\" style=\"font-size:0pt; line-height:0pt; text-align:left;\"><img src=\"https://i.ibb.co/gFfjfPy/gendy-logo.png\" width=\"167\" height=\"75\" editable=\"true\" border=\"0\" alt=\"\" /></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column-empty\" width=\"1\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-header\" style=\"color:#000; font-family:'Noto Sans', Arial,sans-serif; font-size:20px; line-height:16px; text-align:right; text-transform:uppercase;\"><multiline><webversion class=\"link2\" style=\"color:#000; font-weight: 900; text-decoration:none;\">RESET PASSWORD</webversion></multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<!-- END Header -->\n\n\t\t\t\t\t\t\t<repeater>\n\t\t\t\t\t\t\t\t<!-- Article / Title + Copy + Button -->\n\t\t\t\t\t\t\t\t<layout label='Article / Title + Copy + Button'>\n\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"padding-bottom: 20px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 50px 30px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- <tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"h3 pb20\" style=\"color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:24px; line-height:32px; text-align:left; padding-bottom:20px;\"><multiline>Lorem ipsum dolor sit amet consecteur</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text pb20\" style=\"color:#777777; font-family:'Noto Sans', Arial,sans-serif; font-size:14px; line-height:26px; text-align:left; padding-bottom:20px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<multiline>\t\n                                                                            <p>Hi ${info.name}</p>\n                                                                            <p>You recently requested to reset your password for your Gendytronics account.</p> \n                                                                            <p> Please click the button below to reset your password.</p>\n                                                                            <p>If you did not request a password reset, please ignore this email</p>\n                                                                            <p>If you're having trouble clicking the button, copy and paste the URL below into your web browser:</p>\n                                                                            <p>Thanks,</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</multiline>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- Button -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin-bottom:1rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-button\" style=\"background:#ffeb3b; color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:14px; line-height:18px; padding:12px 20px; text-align:center; border-radius:6px;\"><multiline><a href=\"${info.link}\" target=\"_blank\" class=\"link-white\" style=\"color:#363636; text-decoration:none;\"><span class=\"link-white\" style=\"color:#363636; text-decoration:none;\">Reset Password</span></a></multiline></td>\n                                                                            </tr>\n                                                                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n                                                                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                                                            <tr>\n                                                                                <td class=\"text-button\" style=\"display: block; margin-bottom: 2rem; color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; text-align:left; line-height:1.5\">${info.link}</td>\n                                                                            </tr>\n                                                                        </table>\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        <table>\n                                                                            <tr>\n                                                                                <td style=\"color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:10px;\">NOTE: the link will expire within 24hrs</td>\n                                                                            </tr>\n                                                                        </table>\n                                                                    </td>\n                                                                </tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- END Button -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</layout>\t\n\t\t\t\t\t\t\t\t<!-- END Article / Title + Copy + Button -->\n\n\t\t\t\t\t\t\t<!-- Footer -->\n\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 50px 30px;\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\" style=\"padding-bottom: 30px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"img\" width=\"55\" style=\"font-size:0pt; line-height:0pt; text-align:left;\"><a href=\"https://www.facebook.com/aljazriacademy/\" target=\"_blank\"><img src=\"https://i.ibb.co/JdNYZVR/t8-ico-facebook.jpg\" width=\"38\" height=\"38\" editable=\"true\" border=\"0\" alt=\"\" /></a></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer1 pb10\" style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:16px; line-height:20px; text-align:center; padding-bottom:10px;\"><multiline>Elgendy Autotronics Center</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer2 pb30\" style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\"><multiline>Al Haram, Al Omraneyah Ash Sharqeyah, El Omraniya, Giza Governorate 11511</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer2 pb30\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a style=\"color:#999999;\" href=\"https://www.gendyecu.com\" target=\"__blank\">visit website</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<!-- END Footer -->\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n`\n  },\n  support(info) {\n    return `\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">\n<head>\n\t<!--[if gte mso 9]>\n\t<xml>\n\t\t<o:OfficeDocumentSettings>\n\t\t<o:AllowPNG/>\n\t\t<o:PixelsPerInch>96</o:PixelsPerInch>\n\t\t</o:OfficeDocumentSettings>\n\t</xml>\n\t<![endif]-->\n\t<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n\t<meta name=\"format-detection\" content=\"date=no\" />\n\t<meta name=\"format-detection\" content=\"address=no\" />\n\t<meta name=\"format-detection\" content=\"telephone=no\" />\n\t<meta name=\"x-apple-disable-message-reformatting\" />\n    <!--[if !mso]><!-->\n\t<link href=\"https://fonts.googleapis.com/css?family=Noto+Sans:400,400i,700,700i\" rel=\"stylesheet\" />\n    <!--<![endif]-->\n\t<title>Email Template</title>\n\t<!--[if gte mso 9]>\n\t<style type=\"text/css\" media=\"all\">\n\t\tsup { font-size: 100% !important; }\n\t</style>\n\t<![endif]-->\n\t\n\n\t<style type=\"text/css\" media=\"screen\">\n\t\t/* Linked Styles */\n\t\tbody { padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#f4f4f4; -webkit-text-size-adjust:none }\n\t\ta { color:#66c7ff; text-decoration:none }\n\t\tp { padding:0 !important; margin:0 !important } \n\t\timg { -ms-interpolation-mode: bicubic; /* Allow smoother rendering of resized image in Internet Explorer */ }\n\t\t.mcnPreviewText { display: none !important; }\n\t\t.hero_bg {\n\t\t\tbackground-image: url('https://i.ibb.co/HCbMmHJ/img-3.png');\n\t\t\tmargin:0;\n\t\t\tpadding: 0;\n\t\t}\n\t\t\t\t\n\t\t/* Mobile styles */\n\t\t@media only screen and (max-device-width: 480px), only screen and (max-width: 480px) {\n\t\t\t.mobile-shell { width: 100% !important; min-width: 100% !important; }\n\t\t\t.bg { background-size: 100% auto !important; -webkit-background-size: 100% auto !important; }\n\t\t\t\n\t\t\t.text-header,\n\t\t\t.m-center { text-align: center !important; }\n\t\t\t\n\t\t\t.center { margin: 0 auto !important; }\n\t\t\t.container { padding: 20px 10px !important }\n\t\t\t\n\t\t\t.td { width: 100% !important; min-width: 100% !important; }\n\n\t\t\t.m-br-15 { height: 15px !important; }\n\t\t\t.p30-15 { padding: 30px 15px !important; }\n\t\t\t.p40 { padding: 20px !important; }\n\n\t\t\t.m-td,\n\t\t\t.m-hide { display: none !important; width: 0 !important; height: 0 !important; font-size: 0 !important; line-height: 0 !important; min-height: 0 !important; }\n\n\t\t\t.m-block { display: block !important; }\n\n\t\t\t.fluid-img img { width: 100% !important; max-width: 100% !important; height: auto !important; }\n\n\t\t\t.column,\n\t\t\t.column-top,\n\t\t\t.column-empty,\n\t\t\t.column-empty2,\n\t\t\t.column-dir-top { float: left !important; width: 100% !important; display: block !important; }\n\t\t\t.column-empty { padding-bottom: 10px !important; }\n\t\t\t.column-empty2 { padding-bottom: 20px !important; }\n\t\t\t.content-spacing { width: 15px !important; }\n\t\t}\n\t</style>\n</head>\n<body class=\"body\" style=\"padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#f4f4f4; -webkit-text-size-adjust:none;\">\n\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#f4f4f4\">\n\t\t<tr>\n\t\t\t<td align=\"center\" valign=\"top\">\n\t\t\t\t<table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"mobile-shell\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"td container\" style=\"width:650px; min-width:650px; font-size:0pt; line-height:0pt; margin:0; font-weight:normal; padding:55px 0px;\">\n\t\t\t\t\t\t\t<!-- Header -->\n\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td style=\"padding-bottom: 20px;\">\n\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 25px 30px 25px 30px;\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column-top\" width=\"145\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"img m-center\" style=\"font-size:0pt; line-height:0pt; text-align:left;\"><img src=\"https://i.ibb.co/gFfjfPy/gendy-logo.png\" width=\"167\" height=\"75\" editable=\"true\" border=\"0\" alt=\"\" /></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column-empty\" width=\"1\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\"></th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class=\"column\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-header\" style=\"color:#000; font-family:'Noto Sans', Arial,sans-serif; font-size:20px; line-height:16px; text-align:right; text-transform:uppercase;\"><multiline><webversion class=\"link2\" style=\"color:#000; font-weight: 900; text-decoration:none;\">SUPPORT</webversion></multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<!-- END Header -->\n\n\t\t\t\t\t\t\t<repeater>\n\t\t\t\t\t\t\t\t<!-- Article / Title + Copy + Button -->\n\t\t\t\t\t\t\t\t<layout label='Article / Title + Copy + Button'>\n\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"padding-bottom: 20px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 50px 30px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- <tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"h3 pb20\" style=\"color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:24px; line-height:32px; text-align:left; padding-bottom:20px;\"><multiline></multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text pb20\" style=\"color:#777777; font-family:'Noto Sans', Arial,sans-serif; font-size:14px; line-height:26px; text-align:left; padding-bottom:20px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<multiline>\t\n                                                                           ${\n                                                                             info.name\n                                                                               ? `<p>Hi ${info.name}</p>`\n                                                                               : ''\n                                                                           }\n                                                                            ${\n                                                                              info.html\n                                                                            }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</multiline>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- Button -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- <tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin-bottom:1rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-button\" style=\"background:#ffeb3b; color:#363636; font-family:'Noto Sans', Arial,sans-serif; font-size:14px; line-height:18px; padding:12px 20px; text-align:center; border-radius:6px;\"><multiline><a href=\"#\" target=\"_blank\" class=\"link-white\" style=\"color:#363636; text-decoration:none;\"><span class=\"link-white\" style=\"color:#363636; text-decoration:none;\">Support</span></a></multiline></td>\n                                                                            </tr>\n                                                                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n                                                                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> -->\n                                                                \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- END Button -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</layout>\t\n\t\t\t\t\t\t\t\t<!-- END Article / Title + Copy + Button -->\n\n\t\t\t\t\t\t\t<!-- Footer -->\n\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"p30-15\" style=\"padding: 50px 30px;\" bgcolor=\"#ffffff\">\n\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\" style=\"padding-bottom: 30px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"img\" width=\"55\" style=\"font-size:0pt; line-height:0pt; text-align:left;\"><a href=\"https://www.facebook.com/aljazriacademy/\" target=\"_blank\"><img src=\"https://i.ibb.co/JdNYZVR/t8-ico-facebook.jpg\" width=\"38\" height=\"38\" editable=\"true\" border=\"0\" alt=\"\" /></a></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer1 pb10\" style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:16px; line-height:20px; text-align:center; padding-bottom:10px;\"><multiline>Elgendy Autotronics Center</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer2 pb30\" style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\"><multiline>Al Haram, Al Omraneyah Ash Sharqeyah, El Omraniya, Giza Governorate 11511</multiline></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-footer2 pb30\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a style=\"color:#999999;\" href=\"https://www.gendyecu.com\" target=\"__blank\">visit website</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<!-- END Footer -->\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n    `\n  },\n  // totalPrice - orderId - items [name, price, quantity]\n  receipt(info) {\n    return `\n    <!DOCTYPE html\n    PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\"\n    xmlns:o=\"urn:schemas-microsoft-com:office:office\">\n\n<head>\n    <!--[if gte mso 9]>\n\t<xml>\n\t\t<o:OfficeDocumentSettings>\n\t\t<o:AllowPNG/>\n\t\t<o:PixelsPerInch>96</o:PixelsPerInch>\n\t\t</o:OfficeDocumentSettings>\n\t</xml>\n\t<![endif]-->\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"format-detection\" content=\"date=no\" />\n    <meta name=\"format-detection\" content=\"address=no\" />\n    <meta name=\"format-detection\" content=\"telephone=no\" />\n    <meta name=\"x-apple-disable-message-reformatting\" />\n    <!--[if !mso]><!-->\n    <link href=\"https://fonts.googleapis.com/css?family=Noto+Sans:400,400i,700,700i\" rel=\"stylesheet\" />\n    <!--<![endif]-->\n    <title>Email Template</title>\n    <!--[if gte mso 9]>\n\t<style type=\"text/css\" media=\"all\">\n\t\tsup { font-size: 100% !important; }\n\t</style>\n\t<![endif]-->\n\n\n    <style type=\"text/css\" media=\"screen\">\n        /* Linked Styles */\n        body {\n            padding: 0 !important;\n            margin: 0 !important;\n            display: block !important;\n            min-width: 100% !important;\n            width: 100% !important;\n            background: #f4f4f4;\n            -webkit-text-size-adjust: none;\n            -webkit-font-smoothing: antialiased;\n            -webkit-text-size-adjust: none;\n            width: 100% !important;\n            height: 100%;\n            line-height: 1.6em;\n        }\n\n        a {\n            color: #66c7ff;\n            text-decoration: none\n        }\n\n        p {\n            padding: 0 !important;\n            margin: 0 !important\n        }\n\n        img {\n            -ms-interpolation-mode: bicubic;\n            /* Allow smoother rendering of resized image in Internet Explorer */\n        }\n\n        .mcnPreviewText {\n            display: none !important;\n        }\n\n        .hero_bg {\n            background-image: url('https://i.ibb.co/HCbMmHJ/img-3.png');\n            margin: 0;\n            padding: 0;\n        }\n        \n\n        @media only screen and (max-width: 640px) {\n            body {\n                padding: 0 !important;\n            }\n\n            h1 {\n                font-weight: 800 !important;\n                margin: 20px 0 5px !important;\n            }\n\n            h2 {\n                font-weight: 800 !important;\n                margin: 20px 0 5px !important;\n            }\n\n            h3 {\n                font-weight: 800 !important;\n                margin: 20px 0 5px !important;\n            }\n\n            h4 {\n                font-weight: 800 !important;\n                margin: 20px 0 5px !important;\n            }\n\n            h1 {\n                font-size: 22px !important;\n            }\n\n            h2 {\n                font-size: 18px !important;\n            }\n\n            h3 {\n                font-size: 16px !important;\n            }\n\n            .container {\n                padding: 0 !important;\n                width: 100% !important;\n            }\n\n            .content {\n                padding: 0 !important;\n            }\n\n            .content-wrap {\n                padding: 10px !important;\n            }\n\n            .invoice {\n                width: 100% !important;\n            }\n        }\n\n\n        /* Mobile styles */\n        @media only screen and (max-device-width: 480px),\n        only screen and (max-width: 480px) {\n            .mobile-shell {\n                width: 100% !important;\n                min-width: 100% !important;\n            }\n\n            .bg {\n                background-size: 100% auto !important;\n                -webkit-background-size: 100% auto !important;\n            }\n\n            .text-header,\n            .m-center {\n                text-align: center !important;\n            }\n\n            .center {\n                margin: 0 auto !important;\n            }\n\n            .container {\n                padding: 20px 10px !important\n            }\n\n            .td {\n                width: 100% !important;\n                min-width: 100% !important;\n            }\n\n            .m-br-15 {\n                height: 15px !important;\n            }\n\n            .p30-15 {\n                padding: 30px 15px !important;\n            }\n\n            .p40 {\n                padding: 20px !important;\n            }\n\n            .m-td,\n            .m-hide {\n                display: none !important;\n                width: 0 !important;\n                height: 0 !important;\n                font-size: 0 !important;\n                line-height: 0 !important;\n                min-height: 0 !important;\n            }\n\n            .m-block {\n                display: block !important;\n            }\n\n            .fluid-img img {\n                width: 100% !important;\n                max-width: 100% !important;\n                height: auto !important;\n            }\n\n            .column,\n            .column-top,\n            .column-empty,\n            .column-empty2,\n            .column-dir-top {\n                float: left !important;\n                width: 100% !important;\n                display: block !important;\n            }\n\n            .column-empty {\n                padding-bottom: 10px !important;\n            }\n\n            .column-empty2 {\n                padding-bottom: 20px !important;\n            }\n\n            .content-spacing {\n                width: 15px !important;\n            }\n        }\n    </style>\n</head>\n\n<body class=\"body\"\n    style=\"padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#f4f4f4; -webkit-text-size-adjust:none;\">\n    <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#f4f4f4\">\n        <tr>\n            <td align=\"center\" valign=\"top\">\n                <table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"mobile-shell\">\n                    <tr>\n                        <td class=\"td container\"\n                            style=\"width:650px; min-width:650px; font-size:0pt; line-height:0pt; margin:0; font-weight:normal; padding:55px 0px;\">\n                            <!-- Header -->\n                            <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                <tr>\n                                    <td style=\"padding-bottom: 20px;\">\n                                        <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                            <tr>\n                                                <td class=\"p30-15\" style=\"padding: 25px 30px 25px 30px;\"\n                                                    bgcolor=\"#ffffff\">\n                                                    <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                                        <tr>\n                                                            <th class=\"column-top\" width=\"145\"\n                                                                style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n                                                                <table width=\"100%\" border=\"0\" cellspacing=\"0\"\n                                                                    cellpadding=\"0\">\n                                                                    <tr>\n                                                                        <td class=\"img m-center\"\n                                                                            style=\"font-size:0pt; line-height:0pt; text-align:left;\">\n                                                                            <img src=\"https://i.ibb.co/gFfjfPy/gendy-logo.png\" width=\"167\"\n                                                                                height=\"75\" editable=\"true\" border=\"0\"\n                                                                                alt=\"\" /></td>\n                                                                    </tr>\n                                                                </table>\n                                                            </th>\n                                                            <th class=\"column-empty\" width=\"1\"\n                                                                style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n                                                            </th>\n                                                            <th class=\"column\"\n                                                                style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal;\">\n                                                                <table width=\"100%\" border=\"0\" cellspacing=\"0\"\n                                                                    cellpadding=\"0\">\n                                                                    <tr>\n                                                                        <td class=\"text-header\"\n                                                                            style=\"color:#000; font-family:'Noto Sans', Arial,sans-serif; font-size:20px; line-height:16px; text-align:right; text-transform:uppercase;\">\n                                                                            <multiline>\n                                                                                <webversion class=\"link2\"\n                                                                                    style=\"color:#000; font-weight: 900; text-decoration:none;\">\n                                                                                    ORDER RECEIPT</webversion>\n                                                                            </multiline>\n                                                                        </td>\n                                                                    </tr>\n                                                                </table>\n                                                            </th>\n                                                        </tr>\n                                                    </table>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n                            </table>\n                            <!-- END Header -->\n\n                            <repeater>\n                                <!-- Article / Title + Copy + Button -->\n                                <layout label='Article / Title + Copy + Button'>\n                                    <table class=\"body-wrap\"\n                                        style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; width: 100%; background-color: #f6f6f6; margin: 0;\"\n                                        bgcolor=\"#f6f6f6\">\n                                        <tr\n                                            style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                            <td style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0;\"\n                                                valign=\"top\"></td>\n                                            <td class=\"container\" width=\"600\"\n                                                style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; display: block !important; max-width: 600px !important; clear: both !important; margin: 0 auto;\"\n                                                valign=\"top\">\n                                                <div class=\"content\"\n                                                    style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; max-width: 600px; display: block; margin: 0 auto; padding: 20px;\">\n                                                    <table class=\"main\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"\n                                                        style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; border-radius: 3px; background-color: #fff; margin: 0; border: 1px solid #e9e9e9;\"\n                                                        bgcolor=\"#fff\">\n                                                        <tr\n                                                            style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                            <td class=\"content-wrap aligncenter\"\n                                                                style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; text-align: center; margin: 0; padding: 20px;\"\n                                                                align=\"center\" valign=\"top\">\n                                                                <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"\n                                                                    style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                                    <tr\n                                                                        style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                                        <td class=\"content-block\"\n                                                                            style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;\"\n                                                                            valign=\"top\">\n                                                                            <h1 class=\"aligncenter\"\n                                                                                style=\"font-family: 'Helvetica Neue',Helvetica,Arial,'Lucida Grande',sans-serif; box-sizing: border-box; font-size: 32px; color: #000; line-height: 1.2em; font-weight: 500; text-align: center; margin: 40px 0 0;\"\n                                                                                align=\"center\">$${\n                                                                                  info.totalPrice\n                                                                                } Paid</h1>\n                                                                        </td>\n                                                                    </tr>\n                                                                    <tr\n                                                                        style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                                        <td class=\"content-block\"\n                                                                            style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;\"\n                                                                            valign=\"top\">\n                                                                            <h2 class=\"aligncenter\"\n                                                                                style=\"font-family: 'Helvetica Neue',Helvetica,Arial,'Lucida Grande',sans-serif; box-sizing: border-box; font-size: 24px; color: #000; line-height: 1.2em; font-weight: 400; text-align: center; margin: 40px 0 0;\"\n                                                                                align=\"center\">Thanks for using El Gendy\n                                                                                Autotronices Center</h2>\n                                                                        </td>\n                                                                    </tr>\n                                                                    <tr\n                                                                        style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                                        <td class=\"content-block aligncenter\"\n                                                                            style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; text-align: center; margin: 0; padding: 0 0 20px;\"\n                                                                            align=\"center\" valign=\"top\">\n                                                                            <table class=\"invoice\"\n                                                                                style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; text-align: left; width: 80%; margin: 40px auto;\">\n                                                                                <tr\n                                                                                    style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                                                    <td style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 15px 0;\"\n                                                                                        valign=\"top\">ORDER NO: ${\n                                                                                          info.orderId\n                                                                                        }</td>\n                                                                                    </td> \n                                                                                </tr>\n                                                                                <tr\n                                                                                    style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                                                    <td style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 10px 0;\"\n                                                                                        valign=\"top\">\n                                                                                        <table class=\"invoice-items\"\n                                                                                            cellpadding=\"0\"\n                                                                                            cellspacing=\"0\"\n                                                                                            style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; width: 100%; margin: 0;\">\n                                                                                            \n                                                                                            ${info.items.map(\n                                                                                              (\n                                                                                                item\n                                                                                              ) =>\n                                                                                                `<tr style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 1rem 0;\">\n                                                                                                        <td style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; border-top-width: 1px; border-top-color: #eee; border-top-style: solid; padding: 15px 0;\"\n                                                                                                            valign=\"top\">${item.name}\n                                                                                                        </td>\n                                                                                                        <td class=\"alignright\"\n                                                                                                            style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; text-align: right; border-top-width: 1px; border-top-color: #eee; border-top-style: solid; margin: 0; padding: 15px 0;\"\n                                                                                                            align=\"right\"\n                                                                                                            valign=\"top\">$ ${item.price}\n                                                                                                        </td>\n                                                                                                    </tr>`\n                                                                                            )}\n                                                                                            \n                                                                                            \n\n                                                                                            <tr class=\"total\"\n                                                                                                style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;\">\n                                                                                                <td class=\"alignright\"\n                                                                                                    width=\"80%\"\n                                                                                                    style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; text-align: right; border-top-width: 2px; border-top-color: #333; border-top-style: solid; border-bottom-color: #333; border-bottom-width: 2px; border-bottom-style: solid; font-weight: 700; margin: 0; padding: 10px 0;\"\n                                                                                                    align=\"right\"\n                                                                                                    valign=\"top\">Total\n                                                                                                </td>\n                                                                                                <td class=\"alignright\"\n                                                                                                    style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; text-align: right; border-top-width: 2px; border-top-color: #333; border-top-style: solid; border-bottom-color: #333; border-bottom-width: 2px; border-bottom-style: solid; font-weight: 700; margin: 0; padding: 10px 0;\"\n                                                                                                    align=\"right\"\n                                                                                                    valign=\"top\">$ ${\n                                                                                                      info.totalPrice\n                                                                                                    }\n                                                                                                </td>\n                                                                                            </tr>\n                                                                                        </table>\n                                                                                    </td>\n                                                                                </tr>\n                                                                            </table>\n                                                                        </td>\n                                                                    </tr>\n                                                                </table>\n                                                            </td>\n                                                        </tr>\n                                                    </table>\n                                                </div>\n                                            </td>\n                                            <td style=\"font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0;\"\n                                                valign=\"top\"></td>\n                                        </tr>\n                                    </table>\n                                </layout>\n                                <!-- END Article / Title + Copy + Button -->\n\n                                <!-- Footer -->\n                                <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                    <tr>\n                                        <td class=\"p30-15\" style=\"padding: 50px 30px;\" bgcolor=\"#ffffff\">\n                                            <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                                <tr>\n                                                    <td align=\"center\" style=\"padding-bottom: 30px;\">\n                                                        <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                                                            <tr>\n                                                                <td class=\"img\" width=\"55\"\n                                                                    style=\"font-size:0pt; line-height:0pt; text-align:left;\">\n                                                                    <a href=\"https://www.facebook.com/aljazriacademy/\"\n                                                                        target=\"_blank\"><img\n                                                                            src=\"https://i.ibb.co/JdNYZVR/t8-ico-facebook.jpg\" width=\"38\"\n                                                                            height=\"38\" editable=\"true\" border=\"0\"\n                                                                            alt=\"\" /></a></td>\n                                                            </tr>\n                                                        </table>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td class=\"text-footer1 pb10\"\n                                                        style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:16px; line-height:20px; text-align:center; padding-bottom:10px;\">\n                                                        <multiline>Elgendy Autotronics Center</multiline>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td class=\"text-footer2 pb30\"\n                                                        style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\">\n                                                        <multiline>Al Haram, Al Omraneyah Ash Sharqeyah, El Omraniya,\n                                                            Giza Governorate 11511</multiline>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td class=\"text-footer2 pb30\"\n                                                        style=\"color:#999999; font-family:'Noto Sans', Arial,sans-serif; font-size:12px; line-height:26px; text-align:center; padding-bottom:10px;\">\n                                                        <a style=\"color:#999999;\" href=\"https://www.gendyecu.com\" target=\"__blank\">visit website</a>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <!-- END Footer -->\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n</body>\n\n</html>\n    `\n  },\n}\n\nexport default template\n", "export const DIRNAME = process.cwd()\n// process.env.NODE_ENV === 'development'\n//   ? `${process.cwd()}/server`\n//   : process.cwd()\n", "import express from 'express'\nconst router = new express.Router()\n\nimport { isAuth, isAdmin } from '../middlewares/auth.js'\nimport { uploadHandler } from '../middlewares/upload.js'\nimport {\n  createNewProduct,\n  listAllProduct,\n  getOneProduct,\n  deleteProduct,\n  updateProduct,\n  updateProductImage,\n  deleteProductImage,\n  toggleProductListing,\n  deleteProductLink,\n} from '../controllers/productController.js'\n\nimport {\n  addItemToCart,\n  removeItemFromCart,\n  listCartItems,\n  deleteAllCartItems,\n} from '../controllers/cartController.js'\n\n// Cart Endpoints\nrouter.get('/cart', isAuth, listCartItems)\nrouter.post('/cart/new', isAuth, addItemToCart)\nrouter.delete('/cart/:id', isAuth, removeItemFromCart)\nrouter.delete('/cart', isAuth, deleteAllCartItems)\n\nrouter.post(\n  '/new',\n  isAuth,\n  isAdmin,\n  uploadHandler.array('images', 12),\n  createNewProduct\n)\nrouter.get('/:id/public', getOneProduct)\nrouter.get('/:id', isAuth, getOneProduct)\nrouter.get('/', listAllProduct)\nrouter.patch('/:id', isAuth, isAdmin, updateProduct)\nrouter.patch('/:id/listing', isAuth, isAdmin, toggleProductListing)\nrouter.patch(\n  '/image/:id',\n  isAuth,\n  isAdmin,\n  uploadHandler.single('image'),\n  updateProductImage\n)\nrouter.patch('/image/:id/:imageId', isAuth, isAdmin, deleteProductImage)\nrouter.delete('/:id', isAuth, isAdmin, deleteProduct)\nrouter.delete('/:id/link/:link', isAuth, isAdmin, deleteProductLink)\n\nexport default router\n", "import multer from 'multer'\nimport path from 'path'\nimport strings from '../localization.js'\nimport { DIRNAME } from '../constants.js'\nconst uploadsDirectory = path.join(DIRNAME, 'src/uploads')\n\nconst storage = multer.diskStorage({\n  destination(req, file, cb) {\n    cb(null, uploadsDirectory)\n  },\n  filename(req, file, cb) {\n    const fileName = `${file.fieldname}-${Date.now()}-${path.extname(\n      file.originalname\n    )}`\n    req.fileName = fileName\n    cb(null, fileName)\n  },\n})\n\nexport const uploadHandler = multer({\n  storage,\n  limits: {\n    fileSize: 5000000,\n  },\n  fileFilter(req, file, cb) {\n    if (\n      !file.originalname.match(\n        /\\.(png|jpg|jpeg|PNG|JPG|JPEG|webp|WEBP|pdf|PDF)$/\n      )\n    ) {\n      cb(new Error(strings.product[req.headers.lang].image_upload_formats))\n    }\n    cb(undefined, true)\n  },\n})\n\nexport const uploadSliderImageHandler = multer({\n  storage,\n  limits: {\n    fileSize: 10000000,\n  },\n  fileFilter(req, file, cb) {\n    if (!file.originalname.match(/\\.(png|jpg|jpeg|PNG|JPG|JPEG)$/)) {\n      cb(new Error(strings.product[req.headers.lang].image_upload_formats))\n    }\n    cb(undefined, true)\n  },\n})\n\nexport const ChunkUploadHandler = multer({\n  limits: {\n    fileSize: 3 * 1024 * 1024,\n  },\n  fileFilter(req, file, cb) {\n    if (!file.originalname.match(/\\.(rar|RAR|zip|ZIP|tar|TAR|gz|GZ|7z|7Z)$/)) {\n      cb(\n        new Error(\n          'please upload the following extension (RAR | ZIP | TAR | GZ | 7Z)'\n        )\n      )\n    }\n    cb(undefined, true)\n  },\n})\n", "import fs from 'fs'\nimport path from 'path'\nimport Product from '../models/productModal.js'\nimport Wishlist from '../models/wishlistModal.js'\nimport strings from '../localization.js'\nimport mappingProducts from '../mappingProducts.js'\nimport crypto from 'crypto'\n\nexport const createNewProduct = async (req, res, next) => {\n  const { lang } = req.headers\n  const { options } = req.body\n  const newProduct = new Product({\n    ...req.body,\n    options: JSON.parse(options),\n  })\n\n  if (req.files) {\n    newProduct.images = req.files.map((file) => ({ src: file.filename }))\n  }\n  try {\n    const isFound = await Product.findOne({ name: req.body.name })\n    if (isFound) {\n      res.status(400)\n      throw new Error(strings.product[lang].product_exist)\n    }\n    const product = await newProduct.save()\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: strings.product[lang].create_product,\n      product,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllProduct = async (req, res, next) => {\n  const { name, type, price, quantity, page, skip, isPublic, isMainPage } =\n    req.query\n  const { lang } = req.headers\n  let searchFilter = {}\n  try {\n    if (type) {\n      searchFilter = {\n        ...searchFilter,\n        type: {\n          $regex: type.split('-').join(' '),\n          $options: 'i',\n        },\n      }\n    }\n    if (name) {\n      searchFilter = {\n        ...searchFilter,\n        name: {\n          $regex: name,\n          $options: 'i',\n        },\n      }\n    }\n    if (price) {\n      const priceRange = price.split('-')\n      if (priceRange.length > 1) {\n        const firstRange = parseInt(priceRange[0])\n        const secondRange = parseInt(priceRange[1])\n\n        searchFilter = {\n          ...searchFilter,\n          price: {\n            $gte: firstRange,\n            $lte: secondRange,\n          },\n        }\n      } else {\n        searchFilter = {\n          ...searchFilter,\n          price: parseInt(priceRange[0]),\n        }\n      }\n    }\n    if (quantity) {\n      const quantityRange = quantity.split('-')\n      if (quantityRange.length > 1) {\n        const firstRange = parseInt(quantityRange[0])\n        const secondRange = parseInt(quantityRange[1])\n\n        searchFilter = {\n          ...searchFilter,\n          quantity: {\n            $gte: firstRange,\n            $lte: secondRange,\n          },\n        }\n      } else {\n        searchFilter = {\n          ...searchFilter,\n          quantity: parseInt(quantityRange[0]),\n        }\n      }\n    }\n\n    if (isPublic) {\n      const value = isPublic === 'true'\n      searchFilter = {\n        ...searchFilter,\n        isListed: value,\n      }\n    }\n\n    const count = await Product.count({ ...searchFilter })\n\n    const products = await Product.find({ ...searchFilter })\n      .limit(parseInt(page) || 0)\n      .skip(parseInt(skip) || 0)\n      .sort({ createdAt: -1 })\n\n    if (!products || products.length < 1) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_product)\n    }\n    const mappedProducts = isMainPage ? mappingProducts(products) : products\n    res.json({\n      success: true,\n      code: 200,\n      count,\n      products: mappedProducts,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getOneProduct = async (req, res, next) => {\n  const { id } = req.params\n  const { lang } = req.headers\n\n  try {\n    const product = await Product.findById(id)\n    if (!product) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_product)\n    }\n    const isFav = req.user\n      ? await Wishlist.findOne({ item: id, user: req.user._id })\n      : null\n    const targetedProduct = { ...product._doc, isFav: isFav ? true : false }\n    res.json({\n      success: true,\n      code: 200,\n      product: targetedProduct,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateProduct = async (req, res, next) => {\n  const updatedData = req.body\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const product = await Product.findById(id)\n\n    if (!product) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_product)\n    }\n\n    const allowedKeys = [\n      'name',\n      'description',\n      'price',\n      'quantity',\n      'type',\n      'video',\n      'short',\n      'options',\n      'link',\n    ]\n\n    if (Object.keys(updatedData).length < 1) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_data)\n    }\n\n    for (let key in updatedData) {\n      if (allowedKeys.includes(key)) {\n        if (updatedData[key]) {\n          if (key === 'link') {\n            product.driveFile = product.driveFile.concat(updatedData[key])\n          } else {\n            product[key] = updatedData[key]\n          }\n        } else {\n          res.status(400)\n          throw new Error(`please provide a value for ${key}`)\n        }\n      } else {\n        res.status(400)\n        throw new Error(`${key} is Unknown, please choose a verified key`)\n      }\n    }\n\n    const newProduct = await product.save()\n\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.product[lang].product_update,\n      product: newProduct,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateProductImage = async (req, res, next) => {\n  const { id } = req.params\n  const { lang } = req.headers\n\n  try {\n    if (!req.fileName) {\n      res.status(400)\n      throw new Error(strings.product[lang].image_upload_require)\n    }\n    const product = await Product.findById(id)\n    if (!product) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_product)\n    }\n    if (product.image) {\n      product.images = product.images.concat({ src: product.image })\n      product.image = undefined\n    }\n    product.images = product.images.concat({ src: req.fileName })\n    const savedProduct = await product.save()\n    const savedImage = savedProduct.images.find(\n      (image) => image.src === req.fileName\n    )\n    res.json({\n      success: true,\n      code: 200,\n      id: product._id,\n      image: savedImage,\n      message: strings.product[lang].image_upload,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteProductImage = async (req, res, next) => {\n  const { id, imageId } = req.params\n  const { lang } = req.headers\n  try {\n    const product = await Product.findById(id)\n    if (!product) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_product)\n    }\n    if (product.images.length < 2) {\n      res.status(400)\n      throw new Error(strings.product[lang].product_require_image)\n    }\n    const image = product.images.find(\n      (image) => image._id.toString() === imageId\n    )\n    if (!image) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_image)\n    }\n    fs.unlink(path.resolve(`server/uploads/${image.image}`), async () => {\n      product.images = product.images.filter(\n        (image) => image._id.toString() !== imageId\n      )\n      await product.save()\n      res.json({\n        success: true,\n        code: 200,\n        message: strings.product[lang].image_delete,\n      })\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteProductLink = async (req, res, next) => {\n  const { id, link } = req.params\n\n  try {\n    const product = await Product.findById(id)\n    if (!product) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_product)\n    }\n    product.driveFile = product.driveFile.filter(\n      (lk) => lk._id.toString() !== link\n    )\n    await product.save()\n    res.send({\n      success: true,\n      code: 200,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteProduct = async (req, res, next) => {\n  const { id } = req.params\n  const { lang } = req.headers\n\n  try {\n    const product = await Product.findById(id)\n    if (!product) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_product)\n    }\n    await product.remove()\n    res.json({\n      success: true,\n      code: 200,\n      message: `${product.name} ${strings.product[lang].product_delete}`,\n      product: product._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const toggleProductListing = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const product = await Product.findById(id)\n    product.isListed = !product.isListed\n\n    const updatedProduct = await product.save()\n\n    res.send({\n      success: true,\n      code: 200,\n      isListed: updatedProduct.isListed,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import mongoose from 'mongoose'\n\nconst wishlistSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true \n    },\n    itemType:{\n        type:String,\n        required:[true, 'Please Provide the item type']\n    },\n    item:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true\n    }\n}, {timestamps:true})\n\nexport default mongoose.model('Wishlist', wishlistSchema)", "import { v4 as uuidv4 } from 'uuid'\n\nconst mappingProducts = (products) => {\n  const allProducts = []\n  const types = new Set()\n\n  products.forEach((product) => types.add(product.type.toLocaleLowerCase()))\n\n  for (let key of types) {\n    const productsOfType = products.filter(\n      (product) => product.type.toLocaleLowerCase() === key\n    )\n    allProducts.push({\n      _id: uuidv4(),\n      title: key,\n      cards: productsOfType,\n    })\n  }\n\n  return allProducts\n}\n\nexport default mappingProducts\n", "import mongoose from 'mongoose'\n\nconst cartSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true,\n        ref:'User'\n    },\n    item:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true,\n        ref:'Product'\n    },\n    quantity:{\n        type:Number,\n        default:1\n    },\n    options:[{\n        question:String,\n        option:String\n    }]\n},{timestamps:true})\n\nexport default mongoose.model('Cart', cartSchema)", "import Cart from '../models/cartModel.js'\nimport strings from '../localization.js'\n\nexport const addItemToCart = async (req, res, next) => {\n    const {lang} = req.headers\n\n    const newCartItem = new Cart({\n        user:req.user._id,\n        ...req.body\n    })\n\n    try {\n        const item = await newCartItem.save()\n        const populatedItem = await Cart.findById(item._id).populate('item', 'name price')\n        res.status(201).json({\n            success:true,\n            code:201,\n            message:strings.product[lang].item_add,\n            item:populatedItem\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const removeItemFromCart = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params \n    try {\n        const item = await Cart.findById(id)\n        if(!item) {\n            res.status(400)\n            throw new Error(strings.product[lang].no_item)\n        }\n        await item.remove()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.product[lang].item_delete,\n            item:item._id\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const listCartItems = async (req, res, next) => {\n    const {lang} = req.headers\n\n    try {\n        const items = await Cart.find({user:req.user._id}).populate('item', 'name price')\n        if(!items || items.length === 0) {\n            res.status(400)\n            throw new Error(strings.product[lang].cart_empty)\n        }\n        res.json({\n            success:true,\n            code:200,\n            items\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\n\nexport const deleteAllCartItems = async (req, res, next) => {\n    const {lang} = req.headers\n\n    try {\n        await Cart.deleteMany({user:req.user._id})\n        res.json({\n            success:true,\n            code:200,\n            message:strings.product[lang].cart_clear\n        })\n    } catch (error) {\n        next(error)\n    }\n}", "import express from 'express'\n\nconst router = new express.Router()\n\nimport {\n    isAuth,\n    isAdmin\n} from '../middlewares/auth.js'\n\nimport {\n    createOrder,\n    getAllOrders,\n    getAllUserOrders,\n    getOrderById,\n    updateOrder,\n} from '../controllers/orderController.js'\n\n\nrouter.post('/new', isAuth, createOrder)\nrouter.get('/all', isAuth, isAdmin, getAllOrders)\nrouter.get('/:id', isAuth, getOrderById)\nrouter.get('/', isAuth, getAllUserOrders)\nrouter.patch('/:id', isAuth, updateOrder)\n\nexport default router", "import Order from '../models/orderModal.js'\nimport strings from '../localization.js'\nimport { ObjectId } from 'mongoose/lib/types/index.js'\n\nexport const createOrder = async (req, res, next) => {\n  const order = new Order({\n    user: req.user._id,\n    shippingAddress: req.user.shippingAddress || {},\n    ...req.body,\n  })\n  try {\n    const newOrder = await order.save()\n    const populatedOrder = await Order.findById(newOrder._id).populate({\n      path: 'orderItems',\n      populate: {\n        path: 'product',\n        select: 'name price driveFile',\n      },\n    })\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: 'New Order has Created Successfully',\n      order: populatedOrder,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getOrderById = async (req, res, next) => {\n  const { lang } = req.headers\n\n  try {\n    let order = null\n    if (req.user.isAdmin) {\n      order = await Order.findById(req.params.id).populate(\n        'user',\n        'firstName lastName email'\n      )\n    } else {\n      order = await Order.findOne({\n        _id: req.params.id,\n        user: req.user._id,\n      }).populate('user', 'firstName lastName email')\n    }\n    if (!order) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_order)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      order,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getAllUserOrders = async (req, res, next) => {\n  const { lang } = req.headers\n\n  try {\n    const orders = await Order.find({ user: req.user._id }).populate({\n      path: 'orderItems',\n      populate: {\n        path: 'product',\n        select: 'name price images',\n      },\n    })\n    if (!orders || orders.length === 0) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_order)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      orders,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getAllOrders = async (req, res, next) => {\n  const { lang } = req.headers\n  const { firstName, _id, createdAt, totalPrice, skip } = req.query\n  try {\n    let searchFilter = {}\n    if (firstName) {\n      searchFilter = {\n        ...searchFilter,\n        'user.firstName': {\n          $regex: firstName,\n          $options: 'i',\n        },\n      }\n    }\n    if (_id) {\n      searchFilter = {\n        ...searchFilter,\n        _id: ObjectId(_id),\n      }\n    }\n    if (createdAt) {\n      const date = new Date(createdAt)\n      date.setDate(date.getDate() + 1)\n      searchFilter = {\n        ...searchFilter,\n        createdAt: {\n          $gte: new Date(createdAt),\n          $lt: new Date(date),\n        },\n      }\n    }\n    if (totalPrice) {\n      const priceRange = totalPrice.split('-')\n      if (priceRange.length > 1) {\n        const firstRange = parseInt(priceRange[0])\n        const secondRange = parseInt(priceRange[1])\n\n        searchFilter = {\n          ...searchFilter,\n          totalPrice: {\n            $gte: firstRange,\n            $lte: secondRange,\n          },\n        }\n      } else {\n        searchFilter = {\n          ...searchFilter,\n          totalPrice: parseInt(priceRange[0]),\n        }\n      }\n    }\n\n    const aggregateOption = [\n      {\n        $lookup: {\n          from: 'users',\n          let: { userId: '$user' },\n          pipeline: [\n            {\n              $match: {\n                $expr: {\n                  $eq: ['$_id', '$$userId'],\n                },\n              },\n            },\n            {\n              $project: {\n                firstName: 1,\n                lastName: 1,\n                phoneNumber: 1,\n                email: 1,\n              },\n            },\n          ],\n          as: 'user',\n        },\n      },\n      {\n        $unwind: '$user',\n      },\n      {\n        $unwind: '$orderItems',\n      },\n      {\n        $lookup: {\n          from: 'products',\n          let: { productId: '$orderItems.product' },\n          pipeline: [\n            {\n              $match: {\n                $expr: {\n                  $eq: ['$_id', '$$productId'],\n                },\n              },\n            },\n            {\n              $project: {\n                name: 1,\n                price: 1,\n                type: 1,\n                images: 1,\n              },\n            },\n          ],\n          as: 'product',\n        },\n      },\n      {\n        $set: { 'orderItems.product': '$product' },\n      },\n      {\n        $unwind: '$orderItems.product',\n      },\n      {\n        $group: {\n          _id: '$_id',\n          user: { $first: '$user' },\n          orderItems: { $push: '$orderItems' },\n          shippingAddress: { $first: '$shippingAddress' },\n          paymentMethod: { $first: '$paymentMethod' },\n          paymentResult: { $first: '$paymentResult' },\n          totalPrice: { $first: '$totalPrice' },\n          isPaid: { $first: '$isPaid' },\n          isDelivered: { $first: '$isDelivered' },\n          createdAt: { $first: '$createdAt' },\n          paidAt: { $first: '$paidAt' },\n          deliveredAt: { $first: '$deliveredAt' },\n        },\n      },\n      {\n        $match: { ...searchFilter },\n      },\n    ]\n\n    const orders = await Order.aggregate([\n      ...aggregateOption,\n      { $sort: { createdAt: -1 } },\n      { $skip: skip || 0 },\n      { $limit: 10 },\n    ])\n\n    if (!orders || orders.length === 0) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_order)\n    }\n\n    const documentCount = await Order.aggregate([\n      ...aggregateOption,\n      { $count: 'document_count' },\n    ])\n\n    let count = 0\n\n    if (documentCount[0]) {\n      count = documentCount[0]['document_count']\n    }\n\n    res.json({\n      success: true,\n      code: 200,\n      orders,\n      count,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateOrder = async (req, res, next) => {\n  const updatedData = req.body\n  const { lang } = req.headers\n\n  try {\n    const order = await Order.findById(req.params.id)\n    if (!order) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_order)\n    }\n    const allowedKeys = [\n      'shippingAddress',\n      'paymentResult',\n      'isPaid',\n      'isDelivery',\n    ]\n    if (Object.keys(updatedData).length < 1) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_data)\n    }\n    for (let key in updatedData) {\n      if (allowedKeys.includes(key)) {\n        if (key === 'isPaid') {\n          order[key] = updatedData[key]\n          if (order.isPaid) order.paidAt = new Date()\n        } else if (key === 'isDelivery') {\n          order[key] = updatedData[key]\n          if (order.isDelivery) order.deliveryAt = new Date()\n        } else if (updatedData[key]) {\n          order[key] = updatedData[key]\n        } else {\n          res.status(400)\n          throw new Error(`please provide a value for ${key}`)\n        }\n      } else {\n        res.status(400)\n        throw new Error(`${key} is Unknown, please choose a verified key`)\n      }\n    }\n    await order.save()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.product[lang].order_update,\n      order: order._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = new express.Router()\n\nimport { isAuth, isAdmin } from '../middlewares/auth.js'\nimport { uploadHandler } from '../middlewares/upload.js'\n\nimport {\n  createNewCourse,\n  getTheCourseData,\n  updateCourseData,\n  updateCourseImage,\n  listAllCourses,\n  deleteCourse,\n  listPurchasedCourses,\n  toggleCoursePublish,\n  deleteLink,\n} from '../controllers/courseController.js'\n\nimport {\n  createNewChapter,\n  updateChapter,\n  listAllChapter,\n  getOneChapter,\n  deleteOneChapter,\n} from '../controllers/chapterController.js'\n\nimport {\n  createNewLesson,\n  updateLesson,\n  deleteLesson,\n} from '../controllers/lessonController.js'\n\nimport {\n  createEnrollment,\n  getEnrollmentData,\n  increaseEnrollmentProgress,\n  decreaseEnrollmentProgress,\n  listCourseEnrollments,\n} from '../controllers/enrollmentController.js'\n\nimport {\n  createNote,\n  updateNote,\n  listAllNotes,\n  deleteNote,\n} from '../controllers/noteController.js'\n\nimport {\n  createNewAnnouncement,\n  updateAnnouncement,\n  getOneAnnouncement,\n  listAllAnnouncement,\n  updateAnnouncementImage,\n  deleteAnnouncement,\n  addAnnouncementComment,\n  listAllAnnouncementComments,\n  deleteAnnouncementsComment,\n} from '../controllers/announcementController.js'\n\n// Courses Routers\nrouter.post(\n  '/new',\n  isAuth,\n  isAdmin,\n  uploadHandler.single('image'),\n  createNewCourse\n)\nrouter.delete('/:id', isAuth, isAdmin, deleteCourse)\nrouter.patch('/:id', isAuth, isAdmin, updateCourseData)\nrouter.patch('/:id/publish', isAuth, isAdmin, toggleCoursePublish)\nrouter.patch(\n  '/:id/image',\n  isAuth,\n  isAdmin,\n  uploadHandler.single('image'),\n  updateCourseImage\n)\nrouter.get('/purchased', isAuth, listPurchasedCourses)\nrouter.get('/', isAuth, listAllCourses)\nrouter.get('/public', listAllCourses)\nrouter.get('/:id', isAuth, getTheCourseData)\nrouter.get('/:id/public', getTheCourseData)\nrouter.delete('/:id/link/:link', isAuth, isAdmin, deleteLink)\n\n// Chapters Routers\nrouter.post('/:id/chapters/new', isAuth, isAdmin, createNewChapter)\nrouter.patch('/chapters/:id', isAuth, isAdmin, updateChapter)\nrouter.get('/chapters/:id', isAuth, isAdmin, getOneChapter)\nrouter.get('/:id/chapters', listAllChapter)\nrouter.delete('/chapters/:id', isAuth, isAdmin, deleteOneChapter)\n\n// Lessons Routers\nrouter.post('/chapters/:id/lessons/new', isAuth, isAdmin, createNewLesson)\nrouter.patch('/chapters/lessons/:id', isAuth, isAdmin, updateLesson)\nrouter.delete('/chapters/lessons/:id', isAuth, isAdmin, deleteLesson)\n\n// Enrollment Router\nrouter.post('/:id/enrollment/new', isAuth, createEnrollment)\nrouter.get('/:id/enrollment/:enroll', isAuth, getEnrollmentData)\nrouter.get('/:id/enrollments', isAuth, isAdmin, listCourseEnrollments)\nrouter.patch(\n  '/:id/enrollment/:enroll/chapters/:chapter/lessons/:lesson/add',\n  isAuth,\n  increaseEnrollmentProgress\n)\nrouter.patch(\n  '/:id/enrollment/:enroll/chapters/:chapter/lessons/:lesson/sub',\n  isAuth,\n  decreaseEnrollmentProgress\n)\n\n// Notes Router\nrouter.post('/:id/notes/new', isAuth, createNote)\nrouter.get('/:id/notes', isAuth, listAllNotes)\nrouter.patch('/:course/notes/:id', isAuth, updateNote)\nrouter.delete('/:course/notes/:id', isAuth, deleteNote)\n\n// Announcement Router\nrouter.post(\n  '/:id/announcements/new',\n  isAuth,\n  isAdmin,\n  uploadHandler.single('image'),\n  createNewAnnouncement\n)\nrouter.get(\n  '/:id/announcements/:announcement',\n  isAuth,\n  isAdmin,\n  getOneAnnouncement\n)\nrouter.get('/:id/announcements', isAuth, listAllAnnouncement)\nrouter.patch('/:course/announcements/:id', isAuth, isAdmin, updateAnnouncement)\nrouter.patch(\n  '/:id/announcements/:announcement/image',\n  isAuth,\n  isAdmin,\n  uploadHandler.single('image'),\n  updateAnnouncementImage\n)\nrouter.delete(\n  '/:id/announcements/:announcement',\n  isAuth,\n  isAdmin,\n  deleteAnnouncement\n)\nrouter.patch(\n  '/:id/announcements/:announcement/comments/add',\n  isAuth,\n  addAnnouncementComment\n)\nrouter.get(\n  '/:id/announcements/:announcement/comments',\n  isAuth,\n  listAllAnnouncementComments\n)\nrouter.patch(\n  '/:id/announcements/:announcement/comments/delete',\n  isAuth,\n  deleteAnnouncementsComment\n)\n\nexport default router\n", "import fs from 'fs'\nimport path from 'path'\nimport Course from '../models/courseModal.js'\nimport Chapter from '../models/chapterModal.js'\nimport Lesson from '../models/lessonModel.js'\nimport Review from '../models/reviewsModal.js'\nimport Instructor from '../models/instructorModal.js'\nimport Enrollment from '../models/enrollmentModal.js'\nimport Wishlist from '../models/wishlistModal.js'\n// import Product from '../models/productModal.js'\n// import Order from '../models/orderModal.js'\nimport strings from '../localization.js'\n\nexport const createNewCourse = async (req, res, next) => {\n  const { lang } = req.headers\n\n  try {\n    const course = JSON.parse(req.body.course)\n    const chapters = JSON.parse(req.body.chapters)\n    const lessons = JSON.parse(req.body.lessons)\n\n    const newCourse = new Course({ ...course, image: req.fileName })\n\n    const savedCourse = await newCourse.save()\n\n    await Chapter.insertMany(chapters)\n\n    await Lesson.insertMany(lessons)\n\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: strings.course[lang].course_create,\n      course: savedCourse._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getTheCourseData = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  const { type } = req.query\n  try {\n    const course = await Course.findById(id)\n    if (!course) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_course)\n    }\n    course.original_Price = course.price\n    if (course.discount) {\n      course.price = course.price - (course.price * course.discount) / 100\n    }\n    // Instructor Data\n    const instructor = await Instructor.findById(course.instructor)\n      .populate('info', 'firstName lastName')\n      .populate({\n        path: 'reviews',\n        populate: {\n          path: 'user',\n          select: 'firstName lastName',\n        },\n      })\n    const instructorData = await calculateInstructorData(instructor)\n    // Get All Chapter and Lessons\n    const chapters = await Chapter.find({ course: id })\n    if (!chapters || chapters.length < 1) {\n      res.status(400)\n      throw new Error(strings.course[lang].no_course_chapters)\n    }\n    const allChapters = await getChaptersAndLessons(chapters)\n    let courseDuration = 0\n    allChapters.forEach((chapter) => (courseDuration += chapter.duration))\n    // Get Course Review Data\n    const reviews = await Review.find({ course: id }).populate(\n      'user',\n      'firstName lastName'\n    )\n    const reviewsData = calculateReviewData(reviews)\n\n    // Get Number of Enrollment\n    const enrollments = await Enrollment.count({ course: id })\n    const enrollment = req.user\n      ? await Enrollment.findOne({ course: id, user: req.user._id })\n      : null\n\n    // check if course in wishlist list or not\n    const isFav = req.user\n      ? await Wishlist.findOne({ itemType: 'course', item: id })\n      : null\n    if (type === 'preview') {\n      res.json({\n        success: true,\n        code: 200,\n        course: {\n          _id: course._id,\n          name: course.name,\n          description: course.description,\n          price: course.price,\n          original_Price: course.original_Price,\n          image: course.image,\n          isFav: isFav ? true : false,\n          discount: course.discount || 0,\n        },\n      })\n    } else {\n      res.json({\n        success: true,\n        code: 200,\n        course: {\n          ...course._doc,\n          updatedAt: course.updatedAt,\n          duration: courseDuration,\n          students: enrollments,\n          instructor: instructorData,\n          chapters: allChapters,\n          original_Price: course.original_Price,\n          isFav: isFav ? true : false,\n          enrollment: {\n            _id: enrollment ? enrollment._id : null,\n            isEnrolled: enrollment ? true : false,\n            enrollmentDate: enrollment ? enrollment.createdAt : null,\n          },\n          reviewsData,\n        },\n      })\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllCourses = async (req, res, next) => {\n  const { lang } = req.headers\n  console.log('list all courses')\n  const {\n    name,\n    price,\n    rating,\n    students,\n    isPaid,\n    page,\n    skip,\n    isPublished,\n    isPublic,\n  } = req.query\n  let searchFilter = {}\n  try {\n    if (name) {\n      searchFilter = {\n        name: {\n          $regex: name,\n          $options: 'i',\n        },\n      }\n    }\n\n    if (price) {\n      const priceRange = price.split(':')\n      if (priceRange.length > 1) {\n        const firstRange = parseInt(priceRange[0])\n        const secondRange = parseInt(priceRange[1])\n\n        searchFilter = {\n          ...searchFilter,\n          price: {\n            $gte: firstRange,\n            $lte: secondRange,\n          },\n        }\n      } else {\n        searchFilter = {\n          ...searchFilter,\n          price: parseInt(priceRange[0]),\n        }\n      }\n    }\n\n    if (rating) {\n      searchFilter = {\n        ...searchFilter,\n        rating: {\n          $lte: parseFloat(rating),\n          $gte: parseFloat(rating) - 0.25,\n        },\n      }\n    }\n\n    if (students) {\n      const studentRange = students.split(':')\n      if (studentRange.length > 1) {\n        const firstRange = parseInt(studentRange[0])\n        const secondRange = parseInt(studentRange[1])\n\n        searchFilter = {\n          ...searchFilter,\n          students: {\n            $gte: firstRange,\n            $lte: secondRange,\n          },\n        }\n      } else {\n        searchFilter = {\n          ...searchFilter,\n          students: parseInt(studentRange[0]),\n        }\n      }\n    }\n\n    if (isPaid) {\n      const condition = isPaid === 'true'\n      searchFilter = {\n        ...searchFilter,\n        isPaid: condition,\n      }\n    }\n\n    if (isPublished || isPublic) {\n      const value = (isPublished || isPublic) === 'true'\n      searchFilter = {\n        ...searchFilter,\n        isPublished: value,\n      }\n    }\n\n    const aggregationOptions = [\n      {\n        $lookup: {\n          from: 'reviews',\n          let: { courseId: '$_id' },\n          pipeline: [\n            {\n              $match: {\n                $expr: { $eq: ['$course', '$$courseId'] },\n              },\n            },\n            {\n              $project: {\n                rating: 1,\n                comment: 1,\n                user: 1,\n              },\n            },\n          ],\n          as: 'reviews',\n        },\n      },\n      {\n        $lookup: {\n          from: 'enrollments',\n          let: { courseId: '$_id' },\n          pipeline: [\n            {\n              $match: {\n                $expr: { $eq: ['$course', '$$courseId'] },\n              },\n            },\n            {\n              $project: {\n                progress: 1,\n              },\n            },\n          ],\n          as: 'students',\n        },\n      },\n      {\n        $group: {\n          _id: '$_id',\n          name: { $first: '$name' },\n          image: { $first: '$image' },\n          description: { $first: '$description' },\n          price: { $first: '$price' },\n          discount: { $first: '$discount' },\n          students: { $first: '$students' },\n          isPaid: { $first: '$isPaid' },\n          createdAt: { $first: '$createdAt' },\n          updatedAt: { $first: '$updatedAt' },\n          isPublished: { $first: '$isPublished' },\n          numReviews: {\n            $last: {\n              $map: {\n                input: '$reviews',\n                as: 'r',\n                in: '$$r.rating',\n              },\n            },\n          },\n        },\n      },\n      {\n        $project: {\n          name: 1,\n          image: 1,\n          description: 1,\n          price: 1,\n          isPaid: 1,\n          discount: 1,\n          createdAt: 1,\n          updatedAt: 1,\n          isPublished: 1,\n          rating: { $ifNull: [{ $avg: '$numReviews' }, 0] },\n          students: { $size: '$students' },\n        },\n      },\n      {\n        $match: searchFilter,\n      },\n    ]\n\n    const courses = await Course.aggregate([\n      ...aggregationOptions,\n      { $sort: { createdAt: -1 } },\n      { $skip: parseInt(skip) || 0 },\n      { $limit: parseInt(page) || 10 },\n    ])\n\n    if (!courses || courses.length < 1) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_course)\n    }\n\n    const courseCount = await Course.aggregate([\n      ...aggregationOptions,\n      { $count: 'course_count' },\n    ])\n\n    let count = 0\n\n    if (courseCount) {\n      count = courseCount[0]['course_count']\n    }\n\n    for (const course of courses) {\n      let courseDuration = 0\n      const chapters = await Chapter.find({ course: course._id })\n      const allChapters = await getChaptersAndLessons(chapters)\n      allChapters.forEach((chapter) => (courseDuration += chapter.duration))\n      course.time = courseDuration\n\n      const isFavourite = await Wishlist.findOne({\n        user: req.user?._id,\n        item: course._id,\n      })\n      isFavourite ? (course.isFav = true) : (course.isFav = false)\n    }\n\n    res.json({\n      success: true,\n      code: 200,\n      courses,\n      count,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listPurchasedCourses = async (req, res, next) => {\n  const { lang } = req.headers\n\n  try {\n    const enrollments = await Enrollment.find({ user: req.user._id })\n    if (!enrollments || !enrollments.length) {\n      res.status(400)\n      throw new Error(strings.course[lang].not_enrolled)\n    }\n    const courses = []\n    for (const enrollment of enrollments) {\n      const course = await Course.findById(enrollment.course)\n      const chapters = await Chapter.find({ course: course._id })\n      const allChapters = await getChaptersAndLessons(chapters)\n      let courseDuration = 0\n      allChapters.forEach((chapter) => (courseDuration += chapter.duration))\n      courses.push({\n        _id: course._id,\n        enroll: enrollment._id,\n        name: course.name,\n        image: course.image,\n        time: courseDuration,\n        isPaid: course.isPaid,\n      })\n    }\n\n    res.json({\n      success: true,\n      code: 200,\n      courses,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateCourseData = async (req, res, next) => {\n  const { lang } = req.headers\n  const updatedData = req.body\n  const { id } = req.params\n  try {\n    const course = await Course.findById(id)\n    if (!course) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_course)\n    }\n    const allowedKeys = [\n      'name',\n      'description',\n      'price',\n      'language',\n      'instructor',\n      'points',\n      'requirements',\n      'targets',\n      'isPaid',\n      'trailer',\n      'discount',\n      'link',\n    ]\n    if (Object.keys(updatedData).length < 1) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_data)\n    }\n    for (let key in updatedData) {\n      if (allowedKeys.includes(key)) {\n        if (key === 'isPaid') {\n          course.isPaid = updatedData.isPaid\n        } else if (key === 'price') {\n          course.price = updatedData.price\n        } else if (key === 'link') {\n          course.driveFile = course.driveFile.concat(updatedData[key])\n        } else {\n          if (updatedData[key]) {\n            course[key] = updatedData[key]\n          } else {\n            res.status(400)\n            throw new Error(`please provide a value for ${key}`)\n          }\n        }\n      } else {\n        res.status(400)\n        throw new Error(`${key} is Unknown, please choose a verified key`)\n      }\n    }\n    const updatedCourse = await course.save()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.course[lang].course_update,\n      course: updatedCourse,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateCourseImage = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    if (!req.fileName) {\n      res.status(400)\n      throw new Error(strings.product[lang].image_upload_require)\n    }\n    const course = await Course.findById(id)\n    if (!course) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_course)\n    }\n    fs.unlink(path.resolve(`server/uploads/${course.image}`), async () => {\n      course.image = req.fileName\n      await course.save()\n      res.json({\n        success: true,\n        code: 200,\n        image: req.fileName,\n        message: strings.product[lang].image_upload,\n      })\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteCourse = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const course = await Course.findById(id)\n    if (!course) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_course)\n    }\n    const chapters = await Chapter.find({ course: course._id })\n    if (chapters.length > 0) {\n      for (const chapter of chapters) {\n        await Lesson.deleteMany({ chapter: chapter._id })\n      }\n      await Chapter.deleteMany({ course: course._id })\n    }\n    await course.remove()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.course[lang].course_delete,\n      course: course._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const toggleCoursePublish = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const course = await Course.findById(id)\n    course.isPublished = !course.isPublished\n    const updatedCourse = await course.save()\n    res.send({\n      success: true,\n      isPublished: updatedCourse.isPublished,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteLink = async (req, res, next) => {\n  const { id, link } = req.params\n\n  try {\n    const course = await Course.findById(id)\n    if (!course) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_course)\n    }\n    course.driveFile = course.driveFile.filter(\n      (lk) => lk._id.toString() !== link\n    )\n    await course.save()\n    res.send({\n      success: true,\n      code: 200,\n      message: 'Link has Removed',\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nasync function calculateInstructorData(instructor) {\n  // Count the number of courses and students\n  const allCourses = await Course.find({ instructor: instructor._id })\n  let studentsNumber = 0\n  for (const course of allCourses) {\n    const enrollments = await Enrollment.count({ course: course._id })\n    studentsNumber += enrollments\n  }\n  // get the reviews data\n  const overAllReviews = instructor.reviews.length\n  let allRating = 0\n  instructor.reviews.forEach((review) => (allRating += review.rating))\n  const averageNumericRating = allRating / overAllReviews\n  const allReviews = instructor.reviews.map((review) => {\n    return {\n      _id: review._id,\n      name: `${review.user.firstName} ${review.user.lastName}`,\n      comment: review.body,\n      rating: review.rating,\n      createdAt: review.createdAt,\n    }\n  })\n  // Gather all information\n  return {\n    _id: instructor._id,\n    name: `${instructor.info.firstName} ${instructor.info.lastName}`,\n    role: instructor.role,\n    about: instructor.about,\n    avatar: instructor.avatar,\n    coursesNumber: allCourses.length,\n    studentsNumber,\n    reviewsNumber: overAllReviews,\n    averageRating: averageNumericRating,\n    reviews: allReviews,\n  }\n}\n\nasync function getChaptersAndLessons(chapters) {\n  const allChapters = []\n  for (const chapter of chapters) {\n    const lessons = await Lesson.find({ chapter })\n    let duration = 0\n    lessons.forEach((lesson) => (duration += lesson.duration))\n    const allLessons = lessons.map((lesson) => {\n      return {\n        _id: lesson._id,\n        title: lesson.title,\n        description: lesson.description,\n        video: lesson.video,\n        isPaid: lesson.isPaid,\n        duration: lesson.duration,\n        order: lesson.order,\n      }\n    })\n    allChapters.push({\n      _id: chapter._id,\n      title: chapter.title,\n      order: chapter.order,\n      isPaid: chapter.isPaid,\n      lessonCount: lessons.length,\n      duration,\n      lessons: allLessons,\n    })\n  }\n\n  return allChapters\n}\n\nfunction calculateReviewData(reviews) {\n  const allReviews = reviews.map((review) => {\n    return {\n      _id: review._id,\n      title: review.title,\n      rating: review.rating,\n      comment: review.comment,\n      name: `${review.user.firstName} ${review.user.lastName}`,\n      createdAt: review.createdAt,\n    }\n  })\n  const numberOfReview = reviews.length\n  let overAllRating = 0\n  let numberOfRating1 = 0\n  let numberOfRating2 = 0\n  let numberOfRating3 = 0\n  let numberOfRating4 = 0\n  let numberOfRating5 = 0\n  reviews.forEach((r) => {\n    overAllRating += r.rating\n    if (r.rating <= 1) numberOfRating1 += 1\n    if (r.rating > 1 && r.rating <= 2) numberOfRating2 += 1\n    if (r.rating > 2 && r.rating <= 3) numberOfRating3 += 1\n    if (r.rating > 3 && r.rating <= 4) numberOfRating4 += 1\n    if (r.rating > 4 && r.rating <= 5) numberOfRating5 += 1\n  })\n  const averageNumericRating = isNaN(overAllRating / numberOfReview)\n    ? '0.0'\n    : (overAllRating / numberOfReview).toFixed(1)\n  const rating1Percentage =\n    Math.floor((numberOfRating1 * 100) / numberOfReview) || 0\n  const rating2Percentage =\n    Math.floor((numberOfRating2 * 100) / numberOfReview) || 0\n  const rating3Percentage =\n    Math.floor((numberOfRating3 * 100) / numberOfReview) || 0\n  const rating4Percentage =\n    Math.floor((numberOfRating4 * 100) / numberOfReview) || 0\n  const rating5Percentage =\n    Math.floor((numberOfRating5 * 100) / numberOfReview) || 0\n\n  return {\n    numberOfReview,\n    averageNumericRating,\n    ratingValues: [\n      rating5Percentage,\n      rating4Percentage,\n      rating3Percentage,\n      rating2Percentage,\n      rating1Percentage,\n    ],\n    reviews: allReviews.filter((r) => Boolean(r.comment)),\n  }\n}\n", "import mongoose from 'mongoose'\n\nconst chapterSchema = new mongoose.Schema({\n    course: {\n        type:mongoose.Schema.Types.ObjectId,\n        required:true \n    },\n    title: {\n        type:String,\n        required:[true, 'Chapter title is Required']\n    },\n    order: {\n        type:Number,\n        required:true\n    },\n    isPaid: {\n        type:Boolean,\n        default:false\n    }\n}, {timestamps:true})\n\nexport default mongoose.model('Chapter', chapterSchema)\n", "import mongoose from 'mongoose'\n\nconst lessonSchema = new mongoose.Schema({\n    chapter: {\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'Chapter',\n        required:true\n    },\n    title:{\n        type:String,\n        required:[true, 'Lesson title is required']\n    },\n    description: {\n        type:String\n    },\n    video:{\n        type:String\n    },\n    duration:{\n        type:Number\n    },\n    document:{\n        type:String\n    },\n    isPaid:{\n        type:Boolean,\n        default:false\n    },\n    order:{\n        type:Number,\n        required:true\n    }\n}, {timestamps:true})\n\nexport default mongoose.model('Lesson', lessonSchema)\n", "import mongoose from 'mongoose'\n\nconst reviewSchema = new mongoose.Schema({\n    rating:{\n        type:Number,\n        required:true,\n        default:0\n    },\n    comment:{\n        type:String\n    },\n    course: {\n        type:mongoose.Schema.Types.ObjectId,\n        required:true,\n        ref:'Course'\n    },\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true,\n        ref:'User'\n    }\n},{timestamps:true})\n\nexport default mongoose.model('Review', reviewSchema)\n", "import Chapter from '../models/chapterModal.js'\nimport Lesson from '../models/lessonModel.js'\nimport strings from '../localization.js'\n\nexport const createNewChapter = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params\n    const {title} = req.body\n    const newChapter = new Chapter({...req.body, course:id}) \n    try {\n        const isExist = await Chapter.findOne({course:id, title})\n        if(isExist) {\n            res.status(400)\n            throw new Error(strings.course[lang].chapter_title_exist)\n        } \n        const chapter = await newChapter.save()\n        res.status(201).json({\n            success:true,\n            code:201,\n            chapter,\n            message:strings.course[lang].chapter_create\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const getOneChapter = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params \n    try {\n        const getChapter = await Chapter.findById(id)\n        if(!getChapter) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_chapters)\n        }\n        const lessons = await Lesson.find({chapter:getChapter._id})\n        const chapter = {...getChapter._doc, lessons}\n        res.json({\n            success:true,\n            code:200,\n            chapter\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const listAllChapter = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params\n    try {\n        const allChapters = await Chapter.find({course:id})\n        if(!allChapters || allChapters.length < 1) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_course_chapters)\n        }\n        const chapters = await Promise.all(allChapters.map(async chapter => {\n            const lessons = await Lesson.find({chapter: chapter._id})\n            return {...chapter._doc, lessons}\n        }))\n        res.json({\n            success:true,\n            code:200,\n            chapters\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const updateChapter = async (req, res, next) => {\n    const {lang} = req.headers\n    const updatedData = req.body\n    const {id} = req.params\n    try {\n        const chapter = await Chapter.findById(id) \n        if(!chapter) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_chapters)\n        }\n        const allowedKeys = ['title','isPaid']\n        if(Object.keys(updatedData).length < 1) {\n            res.status(400)\n            throw new Error(strings.user[lang].require_data)\n        }\n        for(let key in updatedData) {\n            if(allowedKeys.includes(key)) {\n                if(key === 'isPaid') {\n                    chapter.isPaid = updatedData.isPaid\n                }else {\n                    if(updatedData[key] ) {\n                        chapter[key] = updatedData[key]\n                    }else {\n                        res.status(400)\n                        throw new Error (`please provide a value for ${key}`)\n                    }\n                }\n            } else {\n                res.status(400)\n                throw new Error (`${key} is Unknown, please choose a verified key`) \n            }\n        }\n        const updatedChapter = await chapter.save()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].chapter_update,\n            chapter: {title:updatedChapter.title, isPaid:updatedChapter.isPaid}\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const deleteOneChapter = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params \n    try {\n        const chapter = await Chapter.findById(id)\n        if(!chapter) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_chapters)\n        }\n        await Lesson.deleteMany({chapter:id})\n        await chapter.remove()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].chapter_delete,\n            chapter:chapter._id\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\n", "import Lesson from \"../models/lessonModel.js\";\nimport strings from \"../localization.js\";\n\nexport const createNewLesson = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params\n    const {title} = req.body\n    const newLesson = new Lesson({...req.body, chapter:id}) \n    try {\n        const isExist = await Lesson.findOne({chapter:id, title})\n        if(isExist) {\n            res.status(400)\n            throw new Error(strings.course[lang].lesson_title_exist)\n        } \n        const lesson = await newLesson.save()\n        res.status(201).json({\n            success:true,\n            code:201,\n            lesson,\n            message:strings.course[lang].lesson_create\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const updateLesson = async (req, res, next) => {\n    const {lang} = req.headers\n    const updatedData = req.body\n    const {id} = req.params\n    try {\n        \n        \n        const lesson = await Lesson.findById(id) \n        if(!lesson) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_lesson)\n        }\n        const allowedKeys = ['title', 'description', 'video', \n        'document', 'isPaid', 'duration']\n        if(Object.keys(updatedData).length < 1) {\n            res.status(400)\n            throw new Error(strings.course[lang].require_data)\n        }\n        for(let key in updatedData) {\n            if(allowedKeys.includes(key)) {\n                if(key === 'isPaid') {\n                    lesson.isPaid = updatedData.isPaid\n                }else {\n                    if(updatedData[key] ) {\n                        lesson[key] = updatedData[key]\n                    }else {\n                        res.status(400)\n                        throw new Error (`please provide a value for ${key}`)\n                    }\n                }\n            } else {\n                res.status(400)\n                throw new Error (`${key} is Unknown, please choose a verified key`) \n            }\n        }\n        const updatedLesson = await lesson.save()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].lesson_update,\n            lesson: updatedLesson\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const deleteLesson = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params \n    try {\n        const lesson = await Lesson.findById(id) \n        if(!lesson) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_lesson)\n        }\n        await lesson.remove()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].lesson_delete,\n            lesson:lesson._id\n        })\n    } catch (error) {\n        next(error)\n    }\n}", "import Enrollment from '../models/enrollmentModal.js'\nimport Course from '../models/courseModal.js'\nimport Chapter from '../models/chapterModal.js'\nimport Lesson from '../models/lessonModel.js'\nimport strings from '../localization.js'\n\nexport const createEnrollment = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  const { user, payment } = req.body\n\n  const targetUser = user ? user : req.user._id\n\n  const newEnrollment = new Enrollment({\n    user: targetUser,\n    course: id,\n    payment: payment ? parseFloat(payment) : 0,\n  })\n  try {\n    const isEnrolled = await Enrollment.findOne({\n      course: id,\n      user: targetUser,\n    })\n    if (isEnrolled) {\n      res.status(400)\n      throw new Error(strings.course[lang].already_enrolled)\n    }\n    const targetedCourse = await Course.findById(id)\n\n    // find the first chapter\n    const firstChapter = await Chapter.findOne({ course: id, order: 0 })\n    // find the first lesson in first chapter\n    const firstLesson = firstChapter\n      ? await Lesson.findOne({ chapter: firstChapter._id, order: 0 })\n      : undefined\n\n    // assign lesson id if to currentLesson property\n    newEnrollment.currentLesson = firstLesson ? firstLesson._id : undefined\n    newEnrollment.completedLesson = firstLesson\n      ? newEnrollment.completedLesson.concat(firstLesson._id)\n      : []\n    const enroll = await newEnrollment.save()\n\n    if (targetedCourse.isPaid) {\n      res.status(201).json({\n        success: true,\n        code: 201,\n        isCompleted: true,\n        message: strings.course[lang].new_enroll,\n      })\n\n      return\n    }\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: strings.course[lang].new_enroll,\n      enroll: enroll._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getEnrollmentData = async (req, res, next) => {\n  const { lang } = req.headers\n  const { enroll } = req.params\n  try {\n    const enrollment = await Enrollment.findById(enroll).populate(\n      'currentLesson'\n    )\n    if (!enrollment) {\n      res.status(400)\n      throw new Error(strings.course[lang].no_enroll)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      enrollment,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const increaseEnrollmentProgress = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id, enroll, chapter, lesson } = req.params\n  try {\n    const targetedEnroll = await Enrollment.findById(enroll)\n    if (!targetedEnroll) {\n      res.status(400)\n      throw new Error(strings.course[lang].no_course_enroll)\n    }\n    // check if lesson exist in completed lessons array\n    if (!targetedEnroll.completedLesson.includes(lesson)) {\n      // add lesson id to completed lessons array\n      targetedEnroll.completedLesson =\n        targetedEnroll.completedLesson.concat(lesson)\n    }\n\n    // Update Current Lesson\n    targetedEnroll.currentLesson = lesson\n\n    // check if all chapter lessons ids in completedLesson array\n    // and if they are then add chapter id to completedChapter\n    const lessons = await Lesson.find({ chapter })\n    const isAllLessonsCompleted = lessons.every((lesson) =>\n      targetedEnroll.completedLesson.includes(lesson._id)\n    )\n    if (\n      isAllLessonsCompleted &&\n      !targetedEnroll.completedChapters.includes(chapter)\n    ) {\n      targetedEnroll.completedChapters =\n        targetedEnroll.completedChapters.concat(chapter)\n    }\n\n    // check if all course chapters ids in completedChapters array\n    // and fi they are then mark isCourseCompleted as true\n    const chapters = await Chapter.find({ course: id })\n    const isAllChaptersCompleted = chapters.every((chapter) =>\n      targetedEnroll.completedChapters.includes(chapter._id)\n    )\n    if (isAllChaptersCompleted) {\n      targetedEnroll.isCourseCompleted = true\n    }\n\n    // calculate the progress of the student\n    let numberOfLessons = 0\n    for (const chapter of chapters) {\n      const lessonsCount = await Lesson.count({ chapter })\n      numberOfLessons += lessonsCount\n    }\n    const numberOfCompletedLesson = targetedEnroll.completedLesson.length\n    let progress = Math.ceil((numberOfCompletedLesson * 100) / numberOfLessons)\n    if (progress > 100) progress = 100\n    targetedEnroll.progress = progress\n\n    await targetedEnroll.save()\n\n    res.json({\n      success: true,\n      code: 200,\n      progress: targetedEnroll.progress,\n      lesson: targetedEnroll.currentLesson,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const decreaseEnrollmentProgress = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id, enroll, chapter, lesson } = req.params\n  try {\n    const targetedEnroll = await Enrollment.findById(enroll)\n    if (!targetedEnroll) {\n      res.status(400)\n      throw new Error(strings.course[lang].no_course_enroll)\n    }\n\n    // from lesson id from completed lessons array\n    if (targetedEnroll.completedLesson.includes(lesson)) {\n      targetedEnroll.completedLesson = targetedEnroll.completedLesson.filter(\n        (ls) => ls.toString() !== lesson.toString()\n      )\n    }\n\n    // check if chapter in completedChapters array\n    // then remove it\n    if (targetedEnroll.completedChapters.includes(chapter)) {\n      targetedEnroll.completedChapters =\n        targetedEnroll.completedChapters.filter(\n          (ch) => ch.toString() !== chapter.toString()\n        )\n    }\n\n    // check if course marked as completed\n    // then mark it as non completed\n    if (targetedEnroll.isCourseCompleted) {\n      targetedEnroll.isCourseCompleted = false\n    }\n\n    // calculate the progress of the student\n    let numberOfLessons = 0\n    const chapters = await Chapter.find({ course: id })\n    for (const chapter of chapters) {\n      const lessonsCount = await Lesson.count({ chapter })\n      numberOfLessons += lessonsCount\n    }\n    let progress = Math.ceil(\n      targetedEnroll.progress - (1 * 100) / numberOfLessons\n    )\n    targetedEnroll.progress = progress\n\n    await targetedEnroll.save()\n\n    res.json({\n      success: true,\n      code: 200,\n      progress: targetedEnroll.progress,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listCourseEnrollments = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const enrollments = await Enrollment.find({ course: id })\n      .populate('user', 'firstName lastName email phoneNumber')\n      .select('user createdAt')\n\n    res.send({\n      success: true,\n      code: 200,\n      enrollments,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import mongoose from 'mongoose'\n\nconst noteSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        required:true \n    },\n    course:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'Course',\n        required:true \n    },\n    lesson:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'Lesson',\n        required:true \n    },\n    note:{\n        type:String,\n        required:true,\n    },\n    time: {\n        // convert time into second in frontend before store it\n        type:Number,\n        default:0\n    }\n},{timestamps:true})\n\nexport default mongoose.model('Note', noteSchema)", "import Note from \"../models/notesModal.js\"\nimport strings from \"../localization.js\"\n\nexport const createNote = async (req, res, next) => {\n    const {id} = req.params\n    const {lesson} = req.body\n    const {lang} = req.headers\n    const newNote = new Note({\n        ...req.body,\n        course:id,\n        user:req.user._id\n    })\n\n    try {\n        if(!lesson){\n            res.status(400)\n            throw new Error(strings.course[lang].note_choose_lesson)\n        }\n       const note = await newNote.save()\n       const populatedNote = await Note.findById(note._id)\n       .populate('course', 'name').populate('lesson', 'title')\n       res.status(201).json({\n        success:true,\n        code:201,\n        message:strings.course[lang].note_create,\n        note:populatedNote\n    })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const updateNote = async (req, res, next) => {\n    const {id} = req.params\n    const {note} = req.body \n    const {lang} = req.headers\n\n    try {\n        const targetedNote = await Note.findById(id) \n        if(!targetedNote) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_note)\n        }\n        targetedNote.note = note \n        await targetedNote.save()\n        res.json({\n            success:true, \n            code:200,\n            message:strings.course[lang].note_update,\n            note:targetedNote\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const listAllNotes = async (req, res, next) => {\n    const {id} = req.params\n    const {lesson} = req.query \n    const {lang} = req.headers\n    try {\n        let searchFilter = {course:id}\n        if(lesson) searchFilter = {course:id, lesson}\n        const notes = await Note.find({...searchFilter}).sort({createdAt:-1})\n        .populate('course', 'name').populate('lesson', 'title')\n        \n        if(!notes || notes.length < 1) {\n            res.status(404)\n            throw new Error(strings.course[lang].not_notes)\n        }\n\n        res.json({\n            success:true, \n            code:200,\n            notes\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const deleteNote = async (req, res, next) => {\n    const {id} = req.params\n    const {lang} = req.headers\n\n    try {\n        const targetedNote = await Note.findById(id) \n        if(!targetedNote) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_notes)\n        }\n        await targetedNote.remove()\n        res.json({\n            success:true, \n            code:200,\n            message:strings.course[lang].note_delete,\n            note:targetedNote._id\n        })\n    } catch (error) {\n        next(error)\n    }\n}", "import fs from 'fs'\nimport path from 'path'\nimport Announcement from '../models/announcementModel.js'\nimport strings from '../localization.js'\n\nexport const createNewAnnouncement = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params\n    const {announcement} = req.body\n    const newAnnouncement = new Announcement({\n        announcement,\n        course:id,\n        instructor:req.user._id,\n        image:req.fileName\n    })\n    try {\n        const announcement = await newAnnouncement.save()\n        res.status(201).json({\n            success:true,\n            code:201,\n            message:strings.course[lang].ann_create,\n            announcement:announcement._id\n        })\n    } catch (error) {\n        next(error)   \n    }\n}\n\n\nexport const listAllAnnouncement =  async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params\n    const {page, skip} = req.query\n    try {\n        const count = await Announcement.count({course:id})\n        \n        const announcements = await Announcement.find({course:id}).populate({\n            path:'instructor',\n            select:'firstName lastName avatar'\n        }).populate({\n            path:'comments',\n            populate:{\n                path:'user',\n                select:'firstName lastName avatar'\n            }\n        }).limit(parseInt(page) || 5).skip(parseInt(skip) || 0)\n        \n        if(!announcements || announcements.length < 1) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann)\n        }\n        res.json({\n            success:true,\n            code:200,\n            announcements,\n            count\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const getOneAnnouncement = async (req, res, next) => {\n    const {lang} = req.headers\n    const {announcement} = req.params \n    try {\n        const targetedAnnouncement = await Announcement.findById(announcement).populate({\n            path:'instructor',\n            select:'firstName lastName avatar'\n        }).populate({\n            path:'comments',\n            populate:{\n                path:'user',\n                select:'firstName lastName'\n            }\n        })\n        if(!targetedAnnouncement) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann)\n        }\n        res.json({\n            success:true,\n            code:200,\n            announcement:targetedAnnouncement\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const updateAnnouncement = async (req, res, next) => {\n    const {lang} = req.headers\n    const {announcement} = req.body\n    const {id} = req.params\n    try {\n        const targetedAnnouncement = await Announcement.findById(id) \n        if(!targetedAnnouncement) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann)\n        }\n        targetedAnnouncement.announcement = announcement\n        await targetedAnnouncement.save()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].ann_update,\n            announcement: targetedAnnouncement._id\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const updateAnnouncementImage = async (req, res, next) => {\n    const {lang} = req.headers\n    const {announcement} = req.params \n    try {\n        if(!(req.fileName)) {\n            res.status(400)\n            throw new Error(strings.product[lang].image_upload_require)\n        }\n        const targetedAnnouncement = await Announcement.findById(announcement) \n        if(!targetedAnnouncement) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann)\n        }\n        fs.unlink(path.resolve(`server/uploads/${targetedAnnouncement.image}`), async () => {      \n            targetedAnnouncement.image = req.fileName \n            await targetedAnnouncement.save()\n            res.json({\n                success:true, \n                code:200,\n                message:strings.product[lang].image_upload\n            })\n        })\n        \n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const deleteAnnouncement = async (req, res, next) => {\n    const {lang} = req.headers\n    const {announcement} = req.params \n    try {\n        const targetedAnnouncement = await Announcement.findById(announcement) \n        if(!targetedAnnouncement) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann)\n        }\n        await targetedAnnouncement.remove()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].ann_delete,\n            Announcement:targetedAnnouncement._id\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\n// Announcement Comments\n\nexport const addAnnouncementComment = async (req, res, next) => {\n    const {lang} = req.headers\n    const {announcement} = req.params\n    const {comment} = req.body\n    const newComment = { user:req.user._id, comment}\n    try {\n        const targetedAnnouncement  = await Announcement.findById(announcement)\n        if(!targetedAnnouncement) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann_comment)\n        }\n        const isCommentFound = targetedAnnouncement.comments\n        .find(comment => comment.user.toString() === req.user._id.toString())\n        if(isCommentFound) {\n            res.status(400)\n            throw new Error(strings.course[lang].already_ann_comment)\n        }\n        targetedAnnouncement.comments = targetedAnnouncement.comments.concat(newComment)\n        await targetedAnnouncement.save()\n         res.status(201).json({\n             success:true,\n             code:201,\n             comment:newComment,\n             message:strings.course[lang].add_ann_comment,\n         })\n    } catch (error) {\n        next(error)\n    }\n \n }\n\n export const listAllAnnouncementComments = async (req, res, next) => {\n    const {lang} = req.headers \n    const {announcement} = req.params\n     const {page, skip} = req.query\n     try {\n         const targetedAnnouncement = await Announcement.findById(announcement)\n         if(!targetedAnnouncement) {\n             res.status(404)\n             throw new Error(strings.course[lang].no_ann)\n         }\n         if(!(targetedAnnouncement.comments) || targetedAnnouncement.comments.length < 1) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann_comments_add)\n         }\n         const allComments = targetedAnnouncement.comments\n         .slice(parseInt(skip), (parseInt(page) + parseInt(skip))) \n         if(allComments.length < 1) {\n            res.status(404)\n            throw new Error(strings.course[lang].end_ann_comments)\n         }\n         res.json({\n             success:true,\n             code:200,\n             comments:allComments\n         })\n     } catch (error) {\n         next(error)\n     }\n }\n\n export const deleteAnnouncementsComment = async (req, res, next) => {\n    const {lang} = req.headers \n    const {announcement} = req.params \n     try {\n        const targetedAnnouncement = await Announcement.findById(announcement)\n        if(!targetedAnnouncement) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_ann)\n        }\n        const comment = targetedAnnouncement.comments\n        .find(comment => comment.user.toString() === req.user._id.toString()) \n        if(!comment) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_comments)\n        }\n        targetedAnnouncement.comments = targetedAnnouncement.comments\n        .filter(comment => comment.user.toString() !== req.user._id.toString())\n        await targetedAnnouncement.save()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].comment_delete,\n            comment: comment._id\n        })\n     } catch (error) {\n         next(error)\n     }\n }", "import mongoose from 'mongoose'\n\nconst announcementSchema = new mongoose.Schema({\n    course:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'Course',\n        required:true\n    },\n    instructor:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'User',\n        required:true\n    },\n    announcement:{\n        type:String,\n        required:true\n    },\n    image:{\n        type:String\n    },\n    comments: [\n        {\n            user:{\n                type:mongoose.Schema.Types.ObjectId,\n                ref:'User',\n                required:true,\n            },\n            comment:{\n                type:String,\n                required:true\n            }\n        }\n    ]\n}, {timestamps:true})\n\nexport default mongoose.model('Announcement', announcementSchema)", "import express from 'express'\nconst router = new express.Router()\n\nimport {isAuth} from '../middlewares/auth.js'\nimport {\n    addCourseReview,\n    updateCourseReview,\n    deleteOneReview,\n    getOneReview, \n    listAllReviews\n} from '../controllers/reviewController.js'\n\nrouter.post('/add', isAuth, addCourseReview)\nrouter.get('/all', listAllReviews)\nrouter.get('/:id', isAuth, getOneReview)\nrouter.patch('/:id', isAuth, updateCourseReview)\nrouter.delete('/:id', isAuth, deleteOneReview)\n\nexport default router", "import Review from '../models/reviewsModal.js'\nimport strings from '../localization.js'\n\nexport const addCourseReview = async (req, res, next) => {\n    const {lang} = req.headers\n    const {course} = req.body\n    const newReview = new Review({\n        ...req.body,\n        user:req.user._id\n    })\n    try {\n        const isReviewedBefore = await Review.findOne({course, user:req.user._id})\n        if(isReviewedBefore) {\n            res.status(400)\n            throw new Error(strings.course[lang].already_reviewed)\n        }\n        const review  = await newReview.save()\n         res.status(201).json({\n             success:true,\n             code:201,\n             message:strings.course[lang].review_add,\n             review:review._id\n         })\n    } catch (error) {\n        next(error)\n    }\n \n }\n\n export const listAllReviews = async (req, res, next) => {\n    const {lang} = req.headers\n    //  req.query contains {course, user}\n     try {\n         const reviews = await Review.find({...req.query})\n         if(!reviews || reviews.length < 1) {\n             res.status(404)\n             throw new Error(strings.course[lang].no_reviews)\n         }\n         res.json({\n             success:true,\n             code:200,\n             reviews\n         })\n     } catch (error) {\n         next(error)\n     }\n }\n\n export const getOneReview = async (req, res, next) => {\n    const {lang} = req.headers \n    const {id} = req.params \n     try {\n         const review = await Review.findOne({course:id, user:req.user._id})\n         if(!review) {\n             res.status(404)\n             throw new Error(strings.course[lang].no_reviews)\n         }\n         res.json({\n            success:true,\n            code:200,\n            review\n        })\n     } catch (error) {\n         next(error)\n     }\n }\n\n export const updateCourseReview = async (req, res, next) => {\n    const {lang} = req.headers\n    const updatedData = req.body\n    const {id} = req.params\n    try {\n        const review = await Review.findById(id)\n        if(!review) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_reviews)\n        }\n        const allowedKeys = ['comment', 'rating']\n        if(Object.keys(updatedData).length < 1) {\n            res.status(400)\n            throw new Error(strings.user[lang].require_data)\n        }\n        for(let key in updatedData) {\n            if(allowedKeys.includes(key)) {\n                if(updatedData[key]) {\n                    review[key] = updatedData[key]\n                }else {\n                    res.status(400)\n                    throw new Error (`please provide a value for ${key}`)\n                }\n            } else {\n                res.status(400)\n                throw new Error (`${key} is Unknown, please choose a verified key`) \n            }\n        }\n        const updatedReview = await review.save()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].review_update,\n            review: updatedReview,\n        })\n    } catch (error) {\n        next(error)\n    }\n} \n\nexport const deleteOneReview = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params \n    try {\n        const review = await Review.findById(id) \n        if(!review) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_reviews)\n        }\n        await review.remove()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].review_delete,\n            review: review._id,\n        })\n    } catch (error) {\n        next(error)\n    }\n}", "import express from 'express'\nconst router = new express.Router()\n\nimport { isAuth, isAdmin } from '../middlewares/auth.js'\nimport { uploadHandler } from '../middlewares/upload.js'\nimport {\n  addInstructor,\n  getOneInstructor,\n  listAllInstructors,\n  updateInstructorData,\n  deleteInstructor,\n  addInstructorReview,\n  listAllReviews,\n  deleteReview,\n} from '../controllers/instructorController.js'\n\nrouter.post(\n  '/add',\n  uploadHandler.single('avatar'),\n  isAuth,\n  isAdmin,\n  addInstructor\n)\nrouter.get('/:id', isAuth, getOneInstructor)\nrouter.get('/', isAuth, isAdmin, listAllInstructors)\nrouter.patch(\n  '/:id',\n  isAuth,\n  uploadHandler.single('avatar'),\n  updateInstructorData\n)\nrouter.delete('/:id', isAuth, isAdmin, deleteInstructor)\nrouter.get('/:id/reviews', listAllReviews)\nrouter.post('/:id/reviews/add', isAuth, addInstructorReview)\nrouter.delete('/:id/reviews', isAuth, deleteReview)\nexport default router\n", "import Instructor from '../models/instructorModal.js'\nimport strings from '../localization.js'\n\nexport const addInstructor = async (req, res, next) => {\n  const { lang } = req.headers\n  const { info } = req.body\n  const newInstructor = new Instructor(req.body)\n  try {\n    const isFound = await Instructor.findOne({ info })\n    if (isFound) {\n      res.status(400)\n      throw new Error(strings.course[lang].instructor_exist)\n    }\n    if (req.fileName) {\n      newInstructor.avatar = req.fileName\n    }\n    const savedInstructor = await newInstructor.save()\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: strings.course[lang].instructor_add,\n      instructor: savedInstructor._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getOneInstructor = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    let instructor = null\n    if (req.user.isAdmin) {\n      instructor = await Instructor.findById(id).populate('info')\n    } else {\n      instructor = await Instructor.findOne({ info: req.user._id }).populate(\n        'info'\n      )\n    }\n    if (!instructor) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_instructor)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      instructor,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllInstructors = async (req, res, next) => {\n  const { lang } = req.headers\n  const { page, skip } = req.query\n  try {\n    const count = await Instructor.count({})\n    const instructors = await Instructor.find({})\n      .populate('info', 'firstName lastName')\n      .populate('reviews.user', 'firstName lastName')\n      .limit(parseInt(page) || 10)\n      .skip(parseInt(skip) || 0)\n    if (!instructors || instructors.length < 1) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_instructor)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      instructors,\n      count,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateInstructorData = async (req, res, next) => {\n  const { lang } = req.headers\n  const updatedData = req.body\n  const { id } = req.params\n  try {\n    let instructor = null\n    if (req.user.isAdmin) {\n      instructor = await Instructor.findById(id)\n    } else {\n      instructor = await Instructor.findOne({ info: req.user._id })\n    }\n    if (!instructor) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_instructor)\n    }\n    const allowedKeys = ['about', 'role']\n    if (Object.keys(updatedData).length < 1) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_data)\n    }\n    for (let key in updatedData) {\n      if (allowedKeys.includes(key)) {\n        if (updatedData[key]) {\n          instructor[key] = updatedData[key]\n        } else {\n          res.status(400)\n          throw new Error(`please provide a value for ${key}`)\n        }\n      } else {\n        res.status(400)\n        throw new Error(`${key} is Unknown, please choose a verified key`)\n      }\n    }\n    if (req.fileName) instructor.avatar = req.fileName\n    const updatedInstructor = await instructor.save()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.course[lang].instructor_update,\n      instructor: updatedInstructor,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteInstructor = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const instructor = await Instructor.findById(id)\n    if (!instructor) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_instructor)\n    }\n    await instructor.remove()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.course[lang].instructor_delete,\n      instructor: instructor._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\n// Instructor Reviews\n\nexport const addInstructorReview = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  const newReview = {\n    ...req.body,\n    user: req.user._id,\n  }\n  try {\n    const instructor = await Instructor.findById(id)\n    if (!instructor) {\n      res.status(404)\n      throw new Error(strings.course[lang].review_no_instructor)\n    }\n    const isReviewedBefore = instructor.reviews.find(\n      (review) => review.user.toString() === req.user._id.toString()\n    )\n    if (isReviewedBefore) {\n      res.status(400)\n      throw new Error(strings.course[lang].already_review)\n    }\n    instructor.reviews = instructor.reviews.concat(newReview)\n    await instructor.save()\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: strings.course[lang].review_add,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllReviews = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  const { page, skip } = req.query\n  try {\n    const instructor = await Instructor.findById(id)\n    if (!instructor) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_instructor)\n    }\n    if (!instructor.reviews || instructor.reviews.length < 1) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_reviews)\n    }\n    const allReviews = instructor.reviews.slice(\n      parseInt(skip),\n      parseInt(page) + parseInt(skip)\n    )\n    if (allReviews.length < 1) {\n      res.status(404)\n      throw new Error(strings.course[lang].end_reviews)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      reviews: allReviews,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteReview = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const instructor = await Instructor.findById(id)\n    if (!instructor) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_instructor)\n    }\n    const review = instructor.reviews.find(\n      (review) => review.user.toString() === req.user._id.toString()\n    )\n    if (!review) {\n      res.status(404)\n      throw new Error(strings.course[lang].no_reviews)\n    }\n    instructor.reviews = instructor.reviews.filter(\n      (review) => review.user.toString() !== req.user._id.toString()\n    )\n    await instructor.save()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.course[lang].delete_review,\n      review: review._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = new express.Router()\n\nimport {isAuth, isAdmin} from '../middlewares/auth.js'\nimport {uploadHandler} from '../middlewares/upload.js'\nimport {\n    createNewBlog,\n    updateBlog,\n    updateBlogImage,\n    listAllBlogs,\n    getOneBlog,\n    controlBlogVisibility,\n    deleteBlog,\n    listAllComments, \n    addBlogComment,\n    deleteComment\n} from '../controllers/blogController.js'\n\nrouter.post('/new', isAuth, isAdmin, uploadHandler.single('image') ,createNewBlog)\nrouter.get('/:id', getOneBlog)\nrouter.get('/', listAllBlogs)\nrouter.patch('/:id', isAuth, isAdmin, updateBlog)\nrouter.patch('/:id/views', controlBlogVisibility)\nrouter.patch('/image/:id', isAuth, isAdmin,uploadHandler.single('image'), updateBlogImage)\nrouter.delete('/:id', isAuth, isAdmin, deleteBlog)\nrouter.get('/:id/comments', listAllComments)\nrouter.post('/:id/comments/add', isAuth, addBlogComment)\nrouter.delete('/:id/comments/:commentId?', isAuth, deleteComment)\n\nexport default router", "import fs from 'fs'\nimport path from 'path'\nimport Blog from '../models/blogModel.js'\nimport strings from '../localization.js'\n\nexport const createNewBlog = async (req, res, next) => {\n  const { lang } = req.headers\n  const newBlog = new Blog({\n    ...req.body,\n    author: req.user._id,\n    image: req.fileName,\n  })\n  try {\n    const isFound = await Blog.findOne({ title: req.body.title })\n    if (isFound) {\n      res.status(400)\n      throw new Error(strings.blog[lang].blog_exist)\n    }\n    const blog = await newBlog.save()\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: strings.blog[lang].blog_create,\n      blog: blog._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllBlogs = async (req, res, next) => {\n  const { lang } = req.headers\n  const { title, views, page, skip } = req.query\n  let searchFilter = {}\n  try {\n    if (title) {\n      searchFilter = {\n        title: {\n          $regex: title,\n          $options: 'i',\n        },\n      }\n    }\n    if (views) {\n      const viewRange = views.split('-')\n      if (viewRange.length > 1) {\n        const firstRange = parseInt(viewRange[0])\n        const secondRange = parseInt(viewRange[1])\n\n        searchFilter = {\n          ...searchFilter,\n          seen: {\n            $gte: firstRange,\n            $lte: secondRange,\n          },\n        }\n      } else {\n        searchFilter = {\n          ...searchFilter,\n          seen: parseInt(viewRange[0]),\n        }\n      }\n    }\n    const count = await Blog.count({ ...searchFilter })\n\n    const blogs = await Blog.find({ ...searchFilter })\n      .populate('author', 'firstName lastName email phoneNumber')\n      .populate({\n        path: 'comments',\n        populate: {\n          path: 'user',\n          select: 'firstName lastName',\n        },\n      })\n      .limit(parseInt(page) || 10)\n      .skip(parseInt(skip) || 0)\n\n    if (!blogs || blogs.length < 1) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blogs)\n    }\n\n    res.json({\n      success: true,\n      code: 200,\n      blogs,\n      count,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getOneBlog = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const blog = await Blog.findById(id)\n      .populate({\n        path: 'author',\n        select: 'firstName lastName',\n      })\n      .populate({\n        path: 'comments',\n        populate: {\n          path: 'user',\n          select: 'firstName lastName',\n        },\n      })\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blog)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      blog,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateBlog = async (req, res, next) => {\n  const { lang } = req.headers\n  const updatedData = req.body\n  const { id } = req.params\n  try {\n    const blog = await Blog.findById(id)\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blog)\n    }\n    const allowedKeys = ['title', 'body']\n    if (Object.keys(updatedData).length < 1) {\n      res.status(400)\n      throw new Error(strings.user[lang].require_data)\n    }\n    for (let key in updatedData) {\n      if (allowedKeys.includes(key)) {\n        if (updatedData[key]) {\n          blog[key] = updatedData[key]\n        } else {\n          res.status(400)\n          throw new Error(`please provide a value for ${key}`)\n        }\n      } else {\n        res.status(400)\n        throw new Error(`${key} is Unknown, please choose a verified key`)\n      }\n    }\n    const updatedBlog = await blog.save()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.blog[lang].blog_update,\n      blog: updatedBlog,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const controlBlogVisibility = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const blog = await Blog.findById(id)\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blog)\n    }\n    blog.seen = blog.seen + 1\n    await blog.save()\n    res.json({\n      success: true,\n      code: 200,\n      seen: blog.seen,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateBlogImage = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    if (!req.fileName) {\n      res.status(400)\n      throw new Error(strings.product[lang].image_upload_require)\n    }\n    const blog = await Blog.findById(id)\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blog)\n    }\n    fs.unlink(path.resolve(`server/uploads/${blog.image}`), async () => {\n      blog.image = req.fileName\n      await blog.save()\n      res.json({\n        success: true,\n        code: 200,\n        image: req.fileName,\n        message: strings.product[lang].image_upload,\n      })\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteBlog = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const blog = await Blog.findById(id)\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blog)\n    }\n    await blog.remove()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.blog[lang].blog_delete,\n      blog: blog._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\n// Blog Comments\n\nexport const addBlogComment = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  const newComment = {\n    ...req.body,\n    user: req.user._id,\n  }\n  try {\n    const blog = await Blog.findById(id)\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].comment_no_blog)\n    }\n    const isCommentFound = blog.comments.find(\n      (comment) => comment.user.toString() === req.user._id.toString()\n    )\n    if (isCommentFound) {\n      res.status(400)\n      throw new Error(strings.blog[lang].already_comment_blog)\n    }\n    blog.comments = blog.comments.concat(newComment)\n    const savedBlog = await blog.save()\n    const targetedBlog = await Blog.findById(savedBlog._id).populate({\n      path: 'comments',\n      populate: {\n        path: 'user',\n        select: 'firstName lastName',\n      },\n    })\n    const targetedComment = targetedBlog.comments.find(\n      (comment) => comment.user._id.toString() === req.user._id.toString()\n    )\n    res.status(201).json({\n      success: true,\n      code: 201,\n      comment: targetedComment,\n      message: strings.blog[lang].blog_comment_add,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllComments = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  const { page, skip } = req.query\n  try {\n    const blog = await Blog.findById(id)\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blog)\n    }\n    if (!blog.comments || blog.comments.length < 1) {\n      res.status(404)\n      throw new Error(strings.blog[lang].blog_no_comments)\n    }\n    const allComments = blog.comments.slice(\n      parseInt(skip),\n      parseInt(page) + parseInt(skip)\n    )\n    if (allComments.length < 1) {\n      res.status(404)\n      throw new Error(strings.blog[lang].blog_end_comments)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      comments: allComments,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteComment = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id, commentId } = req.params\n  try {\n    const blog = await Blog.findById(id)\n\n    if (!blog) {\n      res.status(404)\n      throw new Error(strings.blog[lang].no_blog)\n    }\n    let comment_id = null\n    if (commentId) {\n      blog.comments = blog.comments.filter(\n        (comment) => comment._id.toString() !== commentId.toString()\n      )\n      comment_id = commentId\n    } else {\n      const comment = blog.comments.find(\n        (comment) => comment.user.toString() === req.user._id.toString()\n      )\n\n      if (!comment) {\n        res.status(404)\n        throw new Error(strings.blog[lang].blog_no_comments)\n      }\n\n      comment_id = comment._id\n\n      blog.comments = blog.comments.filter(\n        (comment) => comment.user.toString() !== req.user._id.toString()\n      )\n    }\n\n    await blog.save()\n\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.blog[lang].blog_comment_delete,\n      comment: comment_id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = new express.Router()\n\nimport {isAuth, isAdmin} from '../middlewares/auth.js'\n\nimport {\n    addItemToWishlist,\n    removeItemFromWishlist,\n    listAllWishlistItem\n} from \"../controllers/wishlistController.js\"\n\nrouter.post('/add', isAuth, addItemToWishlist)\nrouter.delete('/:id', isAuth, removeItemFromWishlist)\nrouter.get('/', isAuth, listAllWishlistItem)\n\nexport default router", "import Wishlist from '../models/wishlistModal.js'\nimport Course from '../models/courseModal.js'\nimport Product from '../models/productModal.js'\nimport strings from '../localization.js'\n\nexport const addItemToWishlist = async (req, res, next) => {\n  const { lang } = req.headers\n  const { item, itemType } = req.body\n  const newItem = new Wishlist({\n    ...req.body,\n    user: req.user._id,\n  })\n  try {\n    const isFound = await Wishlist.findOne({ user: req.user._id, item })\n    if (isFound) {\n      res.status(400)\n      throw new Error(strings.product[lang].already_wishlist)\n    }\n    const createdItem = await newItem.save()\n    if (itemType === 'product') {\n      const product = await Product.findById(createdItem.item)\n      const targetedProduct = {\n        _id: product._id,\n        name: product.name,\n        image: product.image,\n        price: product.price,\n      }\n      res.status(201).json({\n        success: true,\n        code: 201,\n        message: strings.product[lang].wishlist_add,\n        product: targetedProduct,\n      })\n    } else {\n      res.status(201).json({\n        success: true,\n        code: 201,\n        message: strings.product[lang].wishlist_add,\n      })\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const removeItemFromWishlist = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const item = await Wishlist.findOne({ item: id })\n    if (!item) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_item)\n    }\n    await item.remove()\n    res.json({\n      success: true,\n      code: 200,\n      item: item.item,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllWishlistItem = async (req, res, next) => {\n  const { lang } = req.headers\n  const { type } = req.query\n  try {\n    const items = await Wishlist.find({ user: req.user._id, itemType: type })\n    if (!items || items.length < 1) {\n      res.status(404)\n      throw new Error(strings.product[lang].no_item)\n    }\n    let allItems = []\n    if (type === 'course') {\n      allItems = await Promise.all(\n        items.map(async (item) => {\n          const course = await Course.findById(item.item)\n          return {\n            _id: course._id,\n            name: course.name,\n            description: course.description,\n            image: course.image,\n            price: course.price,\n          }\n        })\n      )\n    } else if (type === 'product') {\n      allItems = await Promise.all(\n        items.map(async (item) => {\n          const product = await Product.findById(item.item)\n          return {\n            _id: product._id,\n            name: product.name,\n            image: product.images[0].src,\n            price: product.price,\n          }\n        })\n      )\n    }\n    res.json({\n      success: true,\n      code: 200,\n      items: allItems,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = express.Router()\n\nimport {isAdmin, isAuth} from '../middlewares/auth.js'\n\nimport {\n    bookingCall,\n    toggleCallActiveState,\n    deleteCall,\n    listAllCalls,\n    latestCalls\n} from '../controllers/callController.js'\n\nrouter.post('/book',isAuth, bookingCall)\nrouter.patch('/:id', isAuth, isAdmin, toggleCallActiveState)\nrouter.get('', isAuth, isAdmin, listAllCalls)\nrouter.get('/latest', isAuth, isAdmin, latestCalls)\nrouter.delete('/:id', isAuth, isAdmin, deleteCall)\n\nexport default router", "import mongoose from 'mongoose'\n\nconst callSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'User'\n    },\n    product:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'Product'\n    },\n    date: {\n        type:Date,\n        required:true\n    },\n    phone: {\n        type:String,\n        required:true\n    },\n    method:{\n        type:String,\n        required:true\n    },\n    isDone:{\n        type:Boolean,\n        default:false \n    }\n}, {timestamps:true})\n\nexport default mongoose.model('Call', callSchema)", "import Call from '../models/callsModal.js'\nimport strings from '../localization.js'\n\nexport const bookingCall = async (req, res, next) => {\n  const { lang } = req.headers\n  const { phone } = req.body\n  const newCall = new Call({ ...req.body })\n  try {\n    const isFound = await Call.findOne({\n      phone,\n      user: req.user._id,\n      isDone: false,\n    })\n    if (isFound && !isFound.isDone) {\n      res.status(400)\n      throw new Error(strings.contact[lang].already_booked)\n    }\n    const call = await newCall.save()\n    res.json({\n      success: true,\n      code: 201,\n      message: strings.contact[lang].booked_call,\n      call: call._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const latestCalls = async (req, res, next) => {\n  try {\n    const calls = await Call.find({ isDone: false })\n      .sort({ createdAt: -1 })\n      .limit(5)\n    const count = await Call.count({ isDone: false })\n    const mappedCalls = calls.map((call) => {\n      return {\n        id: call._id,\n        title: `A new booking from ${call.phone}`,\n        content: `${call.phone} ask for call using ${call.method}`,\n        phone: call.phone,\n      }\n    })\n\n    res.send({\n      code: 200,\n      success: true,\n      count,\n      calls: mappedCalls,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllCalls = async (req, res, next) => {\n  const { lang } = req.headers\n  const { page, skip, phone, method, isDone, date } = req.query\n\n  try {\n    let searchFilter = {}\n    if (phone) {\n      searchFilter = {\n        ...searchFilter,\n        phone,\n      }\n    }\n\n    if (method) {\n      searchFilter = {\n        ...searchFilter,\n        method,\n      }\n    }\n\n    if (isDone) {\n      const value = isDone === 'true'\n      searchFilter = {\n        ...searchFilter,\n        isDone: value,\n      }\n    }\n\n    if (date) {\n      const offsetDate = new Date(date)\n      offsetDate.setDate(offsetDate.getDate() + 1)\n      searchFilter = {\n        ...searchFilter,\n        date: {\n          $gte: new Date(date),\n          $lte: new Date(offsetDate),\n        },\n      }\n    }\n\n    const calls = await Call.find(searchFilter)\n      .sort({ createdAt: -1 })\n      .limit(parseInt(page) || 10)\n      .skip(parseInt(skip) || 0)\n      .populate('user', 'firstName lastName phoneNumber email')\n      .populate('product', 'name')\n\n    const count = await Call.count({})\n\n    if (!calls || calls.length < 1) {\n      res.status(404)\n      throw new Error(strings.contact[lang].no_calls_booked)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      count,\n      calls,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const toggleCallActiveState = async (req, res, next) => {\n  const { id } = req.params\n  const { lang } = req.headers\n\n  try {\n    const call = await Call.findById(id)\n    if (!call) {\n      res.status(404)\n      throw new Error(strings.contact[lang].no_call)\n    }\n    call.isDone = !call.isDone\n    const message = call.isDone\n      ? strings.contact[lang].done_call\n      : strings.contact[lang].active_call\n    await call.save()\n    res.json({\n      success: true,\n      code: 200,\n      message,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteCall = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const call = await Call.findById(id)\n    if (!call) {\n      res.status(404)\n      throw new Error(strings.contact[lang].no_call)\n    }\n    await call.remove()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.contact[lang].call_delete,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = express.Router()\n\nimport {isAdmin, isAuth} from '../middlewares/auth.js'\n\nimport {\n    createNewContact,\n    listAllContacts,\n    latestContacts,\n    toggleContactReadState,\n    deleteContact\n} from '../controllers/contactController.js'\n\nrouter.post('/new',createNewContact)\nrouter.patch('/:id', isAuth, isAdmin, toggleContactReadState)\nrouter.get('/', isAuth, isAdmin, listAllContacts)\nrouter.get('/latest', isAuth, isAdmin, latestContacts)\nrouter.delete('/:id', isAuth, isAdmin, deleteContact)\n\nexport default router", "import mongoose from 'mongoose'\n\nconst contactSchema = new mongoose.Schema({\n    user:{\n        type:mongoose.Schema.Types.ObjectId,\n        ref:'User'\n    },\n    name: {\n        type:String,\n        required:true\n    },\n    phone:{\n        type:String,\n        required:true \n    },\n    email:{\n        type:String,\n        required:true\n    },\n    message:{\n        type:String,\n        required:true\n    },\n    isRead:{\n        type:Boolean,\n        default:false\n    }\n\n}, {timestamps:true})\n\nexport default mongoose.model('Contact', contactSchema)", "import Contact from '../models/contactModal.js'\nimport strings from '../localization.js'\n\nexport const createNewContact = async (req, res, next) => {\n  const { lang } = req.headers\n  const newContact = new Contact(req.body)\n  try {\n    const contact = await newContact.save()\n    res.status(201).json({\n      success: true,\n      code: 201,\n      message: strings.contact[lang].contact_sent,\n      contact: contact._id,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllContacts = async (req, res, next) => {\n  const { lang } = req.headers\n  const { page, skip, name, phone, email, isRead } = req.query\n  try {\n    let searchFilter = {}\n    if (name) {\n      searchFilter = {\n        ...searchFilter,\n        name: {\n          $regex: name,\n          $options: 'i',\n        },\n      }\n    }\n\n    if (phone) {\n      searchFilter = {\n        ...searchFilter,\n        phone,\n      }\n    }\n\n    if (email) {\n      searchFilter = {\n        ...searchFilter,\n        email,\n      }\n    }\n\n    if (isRead) {\n      const value = isRead === 'true'\n      searchFilter = {\n        ...searchFilter,\n        isRead: value,\n      }\n    }\n\n    const contacts = await Contact.find(searchFilter)\n      .sort({ createdAt: -1 })\n      .limit(parseInt(page) || 10)\n      .skip(parseInt(skip) || 0)\n      .populate('user', 'firstName lastName')\n\n    const count = await Contact.count()\n\n    if (!contacts || contacts.length < 1) {\n      res.status(404)\n      throw new Error(strings.contact[lang].no_contacts)\n    }\n    res.json({\n      success: true,\n      code: 200,\n      contacts,\n      count,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const latestContacts = async (req, res, next) => {\n  try {\n    const contacts = await Contact.find({ isRead: false })\n      .sort({ createdAt: -1 })\n      .limit(5)\n    const count = await Contact.count({ isRead: false })\n    const mappedCalls = contacts.map((contact) => {\n      return {\n        id: contact._id,\n        title: `A new message from ${contact.email}`,\n        content: contact.message.substring(0, 45) + '....',\n        email: contact.email,\n      }\n    })\n\n    res.send({\n      code: 200,\n      success: true,\n      count,\n      contacts: mappedCalls,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const toggleContactReadState = async (req, res, next) => {\n  const { id } = req.params\n  const { lang } = req.headers\n  try {\n    const contact = await Contact.findById(id)\n    if (!contact) {\n      res.status(404)\n      throw new Error(strings.contact[lang].no_contact)\n    }\n    contact.isRead = !contact.isRead\n    const message = contact.isRead\n      ? strings.contact[lang].read_contact\n      : strings.contact[lang].no_read_contact\n    await contact.save()\n    res.json({\n      success: true,\n      code: 200,\n      message,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteContact = async (req, res, next) => {\n  const { lang } = req.headers\n  const { id } = req.params\n  try {\n    const contact = await Contact.findById(id)\n    if (!contact) {\n      res.status(404)\n      throw new Error(strings.contact[lang].no_contact)\n    }\n    await contact.remove()\n    res.json({\n      success: true,\n      code: 200,\n      message: strings.contact[lang].contact_delete,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = express.Router()\n\nimport {isAdmin, isAuth} from '../middlewares/auth.js'\n\nimport {\n   createNewCoupon,\n   listAllCoupon,\n   acquireCoupon,\n   toggleCouponValidityState,\n   updateCoupon,\n   deleteCoupon\n} from '../controllers/couponController.js'\n\nrouter.post('/new', isAuth, isAdmin, createNewCoupon)\nrouter.patch('/:id', isAuth, isAdmin, updateCoupon)\nrouter.patch('/:id/validity', isAuth, isAdmin, toggleCouponValidityState)\nrouter.get('/acquire', isAuth, acquireCoupon)\nrouter.get('/', isAuth, isAdmin, listAllCoupon)\nrouter.delete('/:id', isAuth, isAdmin, deleteCoupon)\n\nexport default router", "import mongoose from 'mongoose'\n\nconst couponSchema = new mongoose.Schema({\n    code: {\n        type:String,\n        unique:true,\n        required:true \n    },\n    discountPercentage: {\n        type:Number,\n        required:true \n    },\n    isValid:{\n        type:Boolean,\n        default:true\n    },\n    applyLimit:{\n        type:Number,\n        default:0\n    },\n    applyCount:{\n        type:Number,\n        default:0\n    },\n    expiryAt:{\n        type:Date\n    }\n\n},{timestamps:true})\n\nexport default mongoose.model('Coupon', couponSchema)", "import Coupon from '../models/couponModal.js'\nimport strings from '../localization.js'\n\nexport const createNewCoupon = async (req, res, next) => {\n    const {lang} = req.headers\n    const {code} = req.body\n    const newCoupon = new Coupon(req.body)\n\n    try {\n        const isFound = await Coupon.findOne({code})\n        if(isFound) {\n            res.status(400)\n            throw new Error(strings.course[lang].coupon_exist)\n        }\n        const coupon = await newCoupon.save()\n        res.status(201).json({\n            success:true, \n            code:201,\n            coupon,\n            message:strings.course[lang].coupon_create\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const acquireCoupon = async (req, res, next) => {\n    const {lang} = req.headers\n    const {code} = req.query \n    \n    try {\n        const coupon = await Coupon.findOne({code})\n        if(!coupon){\n            res.status(404)\n            throw new Error(strings.course[lang].no_coupon)\n        }\n        if(!(coupon.isValid)){ \n            res.status(400)\n            throw new Error(strings.course[lang].coupon_not_valid)\n        }\n\n        if(coupon.applyLimit > 0 && coupon.expiryAt){\n            const now = new Date().toISOString()\n            if(coupon.applyCount >= coupon.applyLimit\n                || now > coupon.expiryAt.toISOString()) {\n                coupon.isValid = false\n                await coupon.save()\n                res.status(400)\n                throw new Error(strings.course[lang].coupon_expired)\n            }\n            coupon.applyCount += 1\n            if(coupon.applyCount === coupon.applyLimit) coupon.isValid = false\n            await coupon.save()\n            res.json({\n                success:true, \n                code:200,\n                coupon:coupon.code,\n                discount:coupon.discountPercentage\n            })\n        }\n\n        if(coupon.applyLimit > 0 && !(coupon.expiryAt)){\n            if(coupon.applyCount >= coupon.applyLimit) {\n                coupon.isValid = false\n                await coupon.save()\n                res.status(400)\n                throw new Error(strings.course[lang].coupon_expired)\n            }\n            coupon.applyCount += 1\n            if(coupon.applyCount === coupon.applyLimit) coupon.isValid = false\n            await coupon.save()\n            res.json({\n                success:true, \n                code:200,\n                coupon:coupon.code,\n                discount:coupon.discountPercentage\n            })\n        }\n\n        if(coupon.expiryAt && coupon.applyLimit < 1){\n            const now = new Date().toISOString()\n            if(now > coupon.expiryAt.toISOString()) {\n                coupon.isValid = false\n                await coupon.save()\n                res.status(400)\n                throw new Error(strings.course[lang].coupon_expired)\n            }\n            coupon.applyCount += 1\n            await coupon.save()\n            res.json({\n                success:true, \n                code:200,\n                coupon:coupon.code,\n                discount:coupon.discountPercentage\n            })\n        }\n\n    } catch (error) {\n        next(error)\n    }\n}   \n\nexport const listAllCoupon = async (req, res, next) => {\n    const {lang} = req.headers\n    const {page, skip} = req.query\n    try {\n        const coupons = await Coupon.find({...req.body})\n        // .limit(parseInt(page) || 25).skip(parseInt(skip) || 0)\n        const count = await Coupon.count({})\n\n        if(!coupons || coupons.length < 1) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_coupon)\n        }\n        res.json({\n            success:true, \n            code:200,\n            coupons,\n            count\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const updateCoupon = async (req, res, next) => {\n    const {lang} = req.headers\n    const updatedData = req.body\n    const {id} = req.params\n    try {\n        const coupon = await Coupon.findById(id) \n        if(!coupon) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_coupon)\n        }\n        const allowedKeys = ['code', 'discountPercentage','applyLimit','expiryAt']\n        if(Object.keys(updatedData).length < 1) {\n            res.status(400)\n            throw new Error(strings.user[lang].require_data)\n        }\n        for(let key in updatedData) {\n            if(allowedKeys.includes(key)) {\n                if(key === 'expiryAt') {\n                    coupon[key] = updatedData[key]\n                }else if(updatedData[key]) {\n                    coupon[key] = updatedData[key]\n                }else {\n                    res.status(400)\n                    throw new Error (`please provide a value for ${key}`)\n                }\n            } else {\n                res.status(400)\n                throw new Error (`${key} is Unknown, please choose a verified key`) \n            }\n        }\n        await coupon.save()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].coupon_update,\n            coupon: coupon._id\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const toggleCouponValidityState = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params\n    \n    try {\n        const coupon = await Coupon.findById(id)\n        if(!coupon) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_coupon)\n        }\n        coupon.isValid = !(coupon.isValid)\n        const message = coupon.isValid ? strings.course[lang].valid_coupon : strings.course[lang].not_valid_coupon\n        await coupon.save()\n        res.json({\n            success:true,\n            code:200,\n            message\n        })\n    } catch (error) {\n        next(error)\n    }\n}\n\nexport const deleteCoupon = async (req, res, next) => {\n    const {lang} = req.headers\n    const {id} = req.params \n    try {\n        const coupon = await Coupon.findById(id)\n        if(!coupon) {\n            res.status(404)\n            throw new Error(strings.course[lang].no_coupon)\n        }\n        await coupon.remove()\n        res.json({\n            success:true,\n            code:200,\n            message:strings.course[lang].coupon_delete\n        })\n    } catch (error) {\n        next(error)\n    }\n}", "import express from 'express'\n\nconst router = express.Router() \n\nimport {\n    isAuth,\n    isAdmin\n} from '../middlewares/auth.js'\n\nimport {ChunkUploadHandler} from '../middlewares/upload.js'\n\nimport {\n    authenticateMember,\n    getAccessToken,\n    uploadFile,\n    getResumableURI,\n    downloadFile,\n    deleteFilePermission,\n    deleteFile,\n    resumePreviousUpload,\n    searchDriveFiles\n} from '../controllers/driveControllers.js'\n\nrouter.post('/authenticate',isAuth, isAdmin, authenticateMember)\nrouter.post('/accessToken', isAuth, isAdmin, getAccessToken)\nrouter.post('/upload', isAuth, isAdmin, ChunkUploadHandler.single('blob'), getResumableURI, uploadFile)\nrouter.patch('/resume', isAuth,isAdmin, resumePreviousUpload)\nrouter.delete('/delete/:id', isAuth, isAdmin, deleteFile)\nrouter.get('/download/:id', isAuth, downloadFile)\nrouter.delete('/permission/:id', isAuth, deleteFilePermission)\nrouter.get('/search', isAuth, searchDriveFiles)\n\n\nexport default router", "// @ts-nocheck\nimport fs from 'fs'\nimport path from 'path'\nimport { fileURLToPath } from 'url'\nimport { DIRNAME } from '../constants.js'\nimport { google } from 'googleapis'\nimport fetch from 'node-fetch'\nimport Course from '../models/courseModal.js'\nimport Product from '../models/productModal.js'\n\nconst SCOPES = [\n  'https://www.googleapis.com/auth/drive',\n  'https://www.googleapis.com/auth/drive.file',\n  'https://www.googleapis.com/auth/drive.metadata',\n  'https://www.googleapis.com/auth/drive.appdata',\n]\n\nconst GOOGLE_COURSES_FOLDER = '12JHc6nWos-HuOmHvPollweyZuVv6b-E7'\nconst GOOGLE_PRODUCTS_FOLDER = '1zCNLfYRxhrahRi4v0evO81QSg32QCScp'\n\nconst getOauthClient = async () => {\n  const credentialsPath = path.join(DIRNAME, 'src/gcr.json')\n  const credentials = JSON.parse(fs.readFileSync(credentialsPath, 'utf8')).web\n\n  const { client_id, client_secret, redirect_uris } = credentials\n\n  const oAuth2Client = new google.auth.OAuth2(\n    client_id,\n    client_secret,\n    redirect_uris\n  )\n\n  return oAuth2Client\n}\n\nconst getAuthURL = async () => {\n  const auth = await getOauthClient()\n  return auth.generateAuthUrl({\n    access_type: 'offline',\n    scope: SCOPES,\n  })\n}\n\nconst generateAccessToken = async (code) => {\n  const auth = await getOauthClient()\n  const token = await auth.getToken(code)\n  auth.setCredentials(token)\n  fs.writeFileSync(path.join(DIRNAME, 'src/gact.json'), JSON.stringify(token))\n}\n\nconst credential = (_) => {\n  const accessToken = JSON.parse(\n    fs.readFileSync(path.join(DIRNAME, 'src/gact.json'), 'utf8')\n  ).tokens\n  return accessToken\n}\n\nconst listDriveFiles = async (name, folder) => {\n  let query = `'me' in owners and mimeType != 'application/vnd.google-apps.folder'`\n  if (name) {\n    query = `${query} and name contains '${name}'`\n  }\n  if (folder) {\n    query =\n      folder === 'courses'\n        ? `${query} and '${GOOGLE_COURSES_FOLDER}' in parents`\n        : `${query} and '${GOOGLE_PRODUCTS_FOLDER}' in parents`\n  }\n  const auth = await getOauthClient()\n  auth.setCredentials(credential())\n  const drive = google.drive({ version: 'v3', auth })\n  const response = await drive.files.list({\n    // pageSize:25,\n    q: query,\n    fields: 'nextPageToken, files(id,name)',\n  })\n  return response.data.files\n}\n\n// files(id, name, originalFilename, iconLink, hasThumbnail, fileExtension)\nconst downloadDriveFile = async (id) => {\n  const auth = await getOauthClient()\n  auth.setCredentials(credential())\n  const drive = google.drive({ version: 'v3', auth })\n  try {\n    const file = await drive.files.get({\n      fileId: id,\n      fields: 'id,webContentLink',\n    })\n    const response = await drive.permissions.list({\n      fileId: id,\n      fields: 'permissions',\n    })\n    const permission = response.data.permissions[0]\n    if (permission.role !== 'reader') {\n      await drive.permissions.create({\n        fileId: id,\n        requestBody: {\n          role: 'reader',\n          type: 'anyone',\n        },\n      })\n    }\n    return { success: true, file: file.data }\n  } catch (error) {\n    const err = error.response.data.error.message\n    return { success: false, error: err }\n  }\n}\n\nconst deleteDriveFilePermission = async (id) => {\n  const auth = await getOauthClient()\n  auth.setCredentials(credential())\n  const drive = google.drive({ version: 'v3', auth })\n  try {\n    const response = await drive.permissions.list({\n      fileId: id,\n      fields: 'permissions',\n    })\n    const permission = response.data.permissions[0]\n    await drive.permissions.delete({ permissionId: permission.id, fileId: id })\n\n    return { response: true }\n  } catch (error) {\n    const err = error.response.data.error.message\n    return { response: false, error: err }\n  }\n}\n\nconst deleteDriveFile = async (id) => {\n  const auth = await getOauthClient()\n  auth.setCredentials(credential())\n  const drive = google.drive({ version: 'v3', auth })\n  await drive.files.delete({ fileId: id })\n}\n\nconst getGoogleAccessTokenByRefreshToken = async (_) => {\n  const refresh_token = JSON.parse(\n    fs.readFileSync(path.join(DIRNAME, 'src/gact.json'), 'utf8')\n  ).tokens.refresh_token\n  const { client_secret, client_id } = JSON.parse(\n    fs.readFileSync(path.join(DIRNAME, 'src/gcr.json'), 'utf8')\n  ).web\n\n  const accessTokenUrl = 'https://www.googleapis.com/oauth2/v4/token'\n  const accessTokenBody = {\n    refresh_token,\n    client_id,\n    client_secret,\n    grant_type: 'refresh_token',\n  }\n  const accessTokenOption = {\n    method: 'POST',\n    body: JSON.stringify(accessTokenBody),\n  }\n  return (await (await fetch(accessTokenUrl, accessTokenOption)).json())\n    .access_token\n}\n\nexport async function getResumableURI(req, res, next) {\n  const { id, type, part } = req.body\n\n  try {\n    if (type === 'course') {\n      const course = await Course.findById(id)\n      if (!course) {\n        res.status(404)\n        throw new Error(\"The course id isn't valid please choose a valid one\")\n      }\n    }\n\n    if (type === 'product') {\n      const product = await Product.findById(id)\n      if (!product) {\n        res.status(404)\n        throw new Error(\"The product id isn't valid please choose a valid one\")\n      }\n    }\n\n    if (!part) {\n      res.status(404)\n      throw new Error('Please Specify the Part for the Asset')\n    }\n\n    const parents =\n      type === 'course'\n        ? [GOOGLE_COURSES_FOLDER]\n        : type === 'product' && [GOOGLE_PRODUCTS_FOLDER]\n\n    const uris = JSON.parse(\n      fs.readFileSync(path.join(DIRNAME, 'src/resumable_uri.json'), 'utf8')\n    )\n    const isResumableURI = uris.find((ur) => ur._id === id && ur.part === part)\n\n    if (isResumableURI) {\n      req.resumeURI = isResumableURI.uri\n      next()\n      return\n    }\n\n    const file = req.file\n    const access_token = await getGoogleAccessTokenByRefreshToken()\n\n    const body = JSON.stringify({\n      name: file.originalname,\n      mimeType: file.mimetype,\n      parents,\n    })\n\n    const url =\n      'https://www.googleapis.com/upload/drive/v3/files?uploadType=resumable'\n    const option = {\n      method: 'post',\n      body,\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n    }\n    const response = await fetch(url, option)\n\n    const resumableURI = response.headers.get('location')\n\n    if (resumableURI) {\n      const updatedUris = [...uris, { _id: id, part, uri: resumableURI }]\n      fs.writeFileSync(\n        path.join(DIRNAME, 'src/resumable_uri.json'),\n        JSON.stringify(updatedUris)\n      )\n      req.resumeURI = resumableURI\n      next()\n    } else {\n      res.status(500)\n      throw new Error('something went wrong please upload file again')\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getAccessToken = async (req, res, next) => {\n  const { code } = req.query\n  try {\n    if (!fs.existsSync(path.join(DIRNAME, 'src/gact.json'))) {\n      await generateAccessToken(code)\n    }\n    const files = await listDriveFiles()\n\n    res.send({\n      code: 200,\n      success: true,\n      files,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const authenticateMember = async (req, res, next) => {\n  try {\n    if (fs.existsSync(path.join(DIRNAME, 'src/gact.json'))) {\n      const files = await listDriveFiles()\n      console.log('Files: ', files)\n      res.send({\n        success: true,\n        code: 200,\n        files,\n      })\n\n      return\n    }\n    const url = await getAuthURL()\n    res.send({\n      code: 200,\n      success: true,\n      url,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const searchDriveFiles = async (req, res, next) => {\n  const { name, folder } = req.query\n  try {\n    if (fs.existsSync(path.join(DIRNAME, 'src/gact.json'))) {\n      const files = await listDriveFiles(name, folder)\n      res.send({\n        success: true,\n        code: 200,\n        files,\n      })\n\n      return\n    } else {\n      res.status(400)\n      throw new Error('Please Access Google Drive First')\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const uploadFile = async (req, res, next) => {\n  const { start, end, length, id, type, part } = req.body\n\n  try {\n    if (req.file) {\n      const file = req.file\n      const googleDriveUploadURL = req.resumeURI\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Length': file.size,\n          'Content-Range': `bytes ${start}-${end - 1}/${length}`,\n        },\n        body: file.buffer, // contents of the chunk\n      }\n      const response = await fetch(googleDriveUploadURL, options)\n      const errors = [500, 502, 503, 504]\n      if (errors.includes(response.status)) {\n        res.status(response.status)\n        throw new Error(\n          'service unavailable right now, please try again after while'\n        )\n      } else {\n        if (response.status === 200 || response.status === 201) {\n          // const resumeFile = await fetch(req.resumeURI, {method:'PUT', headers:{'Content-Range':'*/*'}})\n          // const formatResponse = response[Object.getOwnPropertySymbols(response)[1]]\n          const metadata = await response.json()\n\n          if (type === 'course') {\n            const course = await Course.findById(id)\n            course.driveFile = course.driveFile.concat({\n              link: metadata.id,\n              part: parseInt(part),\n            })\n            await course.save()\n          } else if (type === 'product') {\n            const product = await Product.findById(id)\n            product.driveFile = product.driveFile.concat({\n              link: metadata.id,\n              part: parseInt(part),\n            })\n            await product.save()\n          }\n\n          const uris = JSON.parse(\n            fs.readFileSync(\n              path.join(DIRNAME, 'src/resumable_uri.json'),\n              'utf-8'\n            )\n          )\n          const idx = uris.findIndex((ur) => ur._id === id && ur.part === part)\n          if (idx !== -1) uris.splice(idx, 1)\n          fs.writeFileSync(\n            path.join(DIRNAME, 'src/resumable_uri.json'),\n            JSON.stringify(uris)\n          )\n\n          res.status(201).send({\n            code: 201,\n            success: true,\n            message: 'File has Uploaded Successfully',\n          })\n        } else {\n          res.status(200).send({\n            success: true,\n            uploaded: length - end,\n            message: null,\n          })\n        }\n      }\n    } else {\n      res.status(400)\n      throw new Error('Please Select File to upload?!')\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const downloadFile = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const response = await downloadDriveFile(id, res)\n\n    if (!response.success) {\n      throw new Error(response.error)\n    }\n\n    if (response.success) {\n      res.send({\n        success: true,\n        code: 200,\n        file: response.file,\n        key: process.env.GOOGLE_API_KEY,\n      })\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteFilePermission = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const response = await deleteDriveFilePermission(id, res)\n\n    response && res.sendStatus(200)\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteFile = async (req, res, next) => {\n  const { id } = req.params\n  try {\n    await deleteDriveFile(id)\n    res.send({\n      success: true,\n      code: 200,\n      message: 'The File has deleted successfully',\n    })\n  } catch (error) {\n    const deleteError = error.response.data.error\n    next({ message: deleteError.message })\n  }\n}\n\nexport const resumePreviousUpload = async (req, res, next) => {\n  const { type, id, size, part } = req.body\n\n  try {\n    if (type === 'course') {\n      const course = await Course.findById(id)\n      if (!course) {\n        res.status(404)\n        throw new Error(\"The course id isn't valid please choose a valid one\")\n      }\n    }\n\n    if (type === 'product') {\n      const product = await Product.findById(id)\n      if (!product) {\n        res.status(404)\n        throw new Error(\"The product id isn't valid please choose a valid one\")\n      }\n    }\n\n    if (!part) {\n      res.status(404)\n      throw new Error('Please Specify the Part for the Asset')\n    }\n\n    const uris = JSON.parse(\n      fs.readFileSync(path.join(DIRNAME, 'src/resumable_uri.json'), 'utf-8')\n    )\n    const isResumableURI = uris.find((ur) => ur._id === id && ur.part === part)\n\n    if (!isResumableURI) {\n      res.status(404)\n      throw new Error(\n        \"The upload link isn't found, maybe the download completed or you didn't start at all\"\n      )\n    }\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Range': `bytes */${size}`,\n      },\n    }\n\n    const response = await fetch(isResumableURI.uri, options)\n\n    if (response.status === 404) {\n      res.status(404)\n      throw new Error('The Upload Link has Expired, Please Upload File Again?!')\n    }\n\n    if (response.status === 200 || response.status === 201) {\n      res.status(200).send({\n        code: 200,\n        message: 'The File Has Uploaded Completely, No Need to Resume',\n      })\n      // remove the resumable link if exist\n      const uris = JSON.parse(\n        fs.readFileSync(path.join(DIRNAME, 'src/resumable_uri.json'), 'utf-8')\n      )\n      const idx = uris.findIndex((ur) => ur._id === id && ur.part === part)\n      if (idx !== -1) uris.splice(idx, 1)\n      fs.writeFileSync(\n        path.join(DIRNAME, 'src/resumable_uri.json'),\n        JSON.stringify(uris)\n      )\n      return\n    }\n\n    if (response.status === 308) {\n      const range = response.headers.get('range')\n      res.status(200).send({\n        code: 200,\n        range,\n        message: 'The File Need to Resume',\n      })\n      return\n    }\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = new express.Router()\n\nimport {isAuth, isAdmin} from '../middlewares/auth.js'\n\nimport {\n    mainDashboardInfo,\n    latestRegisteredUsers,\n    latestEnrollments,\n    latestListedOrders,\n    latestContactsAndCalls\n} from '../controllers/Dashboard.js'\n\nrouter.get('/info', isAuth, isAdmin, mainDashboardInfo)\nrouter.get('/users', isAuth, isAdmin, latestRegisteredUsers)\nrouter.get('/enrollments', isAuth, isAdmin, latestEnrollments)\nrouter.get('/orders', isAuth, isAdmin, latestListedOrders)\nrouter.get('/contacts', isAuth, isAdmin, latestContactsAndCalls)\n\n\nexport default router", "import User from '../models/userModal.js'\nimport Course from '../models/courseModal.js'\nimport Product from '../models/productModal.js'\nimport Order from '../models/orderModal.js'\nimport Enrollment from '../models/enrollmentModal.js'\nimport Blog from '../models/blogModel.js'\nimport Contact from '../models/contactModal.js'\nimport Calls from '../models/callsModal.js'\n\nexport const mainDashboardInfo = async (req, res, next) => {\n  try {\n    const users = await User.count({})\n    const courses = await Course.count({})\n    const products = await Product.count({})\n    const blogs = await Blog.count({})\n    const orders = await Order.find({})\n    const ordersCount = await Order.count({})\n    const enrollments = await Enrollment.find({})\n    const enrollmentsCount = await Enrollment.count({})\n\n    const totalOrderSales = orders.reduce(\n      (acc, item) => item.totalPrice + acc,\n      0\n    )\n    const totalEnrollmentSales = enrollments.reduce(\n      (acc, item) => item.payment + acc,\n      0\n    )\n\n    res.send({\n      success: true,\n      code: 200,\n      info: {\n        users,\n        courses,\n        products,\n        blogs,\n        orders: { count: ordersCount, sales: totalOrderSales },\n        enrollments: { count: enrollmentsCount, sales: totalEnrollmentSales },\n      },\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const latestRegisteredUsers = async (req, res, next) => {\n  try {\n    const users = await User.find(\n      {},\n      {\n        firstName: 1,\n        lastName: 1,\n        createdAt: 1,\n      }\n    )\n      .sort({ createdAt: -1 })\n      .limit(10)\n\n    res.send({\n      success: true,\n      code: 200,\n      users,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const latestContactsAndCalls = async (req, res, next) => {\n  try {\n    const contacts = await Contact.find(\n      { isRead: false },\n      {\n        name: 1,\n        message: 1,\n        createdAt: 1,\n      }\n    )\n      .sort({ createdAt: -1 })\n      .limit(10)\n\n    const calls = await Calls.find(\n      { isDone: false },\n      {\n        phone: 1,\n        method: 1,\n        createdAt: 1,\n      }\n    )\n      .sort({ createdAt: -1 })\n      .limit(10)\n\n    const mappedContacts = contacts.map((contact) => {\n      return {\n        _id: contact._id,\n        title: `New Contact from ${contact.name}`,\n        createdAt: contact.createdAt,\n      }\n    })\n\n    const mappedCalls = calls.map((call) => {\n      return {\n        _id: call._id,\n        title: `New Booking from ${call.phone}`,\n        createdAt: call.createdAt,\n      }\n    })\n\n    res.send({\n      success: true,\n      code: 200,\n      info: [...mappedCalls, ...mappedContacts],\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const latestListedOrders = async (req, res, next) => {\n  try {\n    const today = new Date()\n    const lastWeek = new Date(new Date().setDate(new Date().getDate() - 7))\n\n    const weekDayCount = {\n      saturday: 0,\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n    }\n\n    const orders = await Order.aggregate([\n      {\n        $match: {\n          createdAt: {\n            $gte: lastWeek,\n            $lte: today,\n          },\n        },\n      },\n      {\n        $project: {\n          _id: 0,\n          day: { $dayOfWeek: '$createdAt' },\n        },\n      },\n    ])\n\n    orders.forEach(({ day }) => {\n      if (day === 1) weekDayCount['sunday'] = +weekDayCount['sunday'] + 1\n      if (day === 2) weekDayCount['monday'] = +weekDayCount['monday'] + 1\n      if (day === 3) weekDayCount['tuesday'] = +weekDayCount['tuesday'] + 1\n      if (day === 4) weekDayCount['wednesday'] = +weekDayCount['wednesday'] + 1\n      if (day === 5) weekDayCount['thursday'] = +weekDayCount['thursday'] + 1\n      if (day === 6) weekDayCount['friday'] = +weekDayCount['friday'] + 1\n      if (day === 7) weekDayCount['saturday'] = +weekDayCount['saturday'] + 1\n    })\n\n    res.send({\n      success: true,\n      code: 200,\n      orders: Object.values(weekDayCount),\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const latestEnrollments = async (req, res, next) => {\n  try {\n    const today = new Date()\n    const lastWeek = new Date(new Date().setDate(new Date().getDate() - 7))\n\n    const weekDayCount = {\n      saturday: 0,\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n    }\n\n    const enrollments = await Enrollment.aggregate([\n      {\n        $match: {\n          createdAt: {\n            $gte: lastWeek,\n            $lte: today,\n          },\n        },\n      },\n      {\n        $project: {\n          _id: 0,\n          day: { $dayOfWeek: '$createdAt' },\n        },\n      },\n    ])\n\n    enrollments.forEach(({ day }) => {\n      if (day === 1) weekDayCount['sunday'] = +weekDayCount['sunday'] + 1\n      if (day === 2) weekDayCount['monday'] = +weekDayCount['monday'] + 1\n      if (day === 3) weekDayCount['tuesday'] = +weekDayCount['tuesday'] + 1\n      if (day === 4) weekDayCount['wednesday'] = +weekDayCount['wednesday'] + 1\n      if (day === 5) weekDayCount['thursday'] = +weekDayCount['thursday'] + 1\n      if (day === 6) weekDayCount['friday'] = +weekDayCount['friday'] + 1\n      if (day === 7) weekDayCount['saturday'] = +weekDayCount['saturday'] + 1\n    })\n\n    res.send({\n      success: true,\n      code: 200,\n      enrollments: Object.values(weekDayCount),\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = new express.Router()\n\nimport {isAuth, isAdmin} from '../middlewares/auth.js'\nimport {uploadSliderImageHandler} from '../middlewares/upload.js'\nimport {\n    createSlider,\n    deleteSlider,\n    listSliders\n} from '../controllers/sliderController.js'\n\nrouter.post('/add', isAuth, isAdmin, uploadSliderImageHandler.single('slider'), createSlider)\nrouter.get('/', listSliders)\nrouter.delete('/:id', isAuth, isAdmin, deleteSlider)\n\n\nexport default router", "import mongoose from 'mongoose'\n\nconst sliderSchema = new mongoose.Schema(\n  {\n    image: {\n      type: String,\n      required: true,\n    },\n    header: {\n      en: {\n        type: String,\n      },\n      ar: {\n        type: String,\n      },\n    },\n    subHeader: {\n      en: String,\n      ar: String,\n    },\n    target: {\n      itemId: {\n        type: mongoose.Schema.Types.ObjectId,\n        refPath: 'onModal',\n      },\n      type: {\n        type: String,\n      },\n    },\n    onModal: {\n      type: String,\n      required: true,\n      enum: ['Course', 'Product', 'Blog'],\n    },\n  },\n  { timestamps: true }\n)\n\nsliderSchema.post('save', (doc, next) => {\n  doc\n    .populate({\n      path: 'target',\n      populate: {\n        path: 'itemId',\n        select: 'name title',\n      },\n    })\n    .then((_) => next())\n})\n\nexport default mongoose.model('Slider', sliderSchema)\n", "import Slider from '../models/sliderModal.js'\nimport { DIRNAME } from '../constants.js'\nimport fs from 'fs'\nimport path from 'path'\n\nexport const createSlider = async (req, res, next) => {\n  const { target } = req.body\n  const sliderTarget = JSON.parse(target)\n  const header = JSON.parse(req.body.header)\n  const subHeader = JSON.parse(req.body.subHeader)\n  const newSlider = new Slider({ header, subHeader, target: sliderTarget })\n\n  try {\n    switch (sliderTarget.type) {\n      case 'product':\n        newSlider.onModal = 'Product'\n        break\n      case 'course':\n        newSlider.onModal = 'Course'\n        break\n      case 'blog':\n        newSlider.onModal = 'Blog'\n        break\n      default:\n        break\n    }\n\n    if (req.file) {\n      newSlider.image = req.file.filename\n    }\n\n    const slider = await newSlider.save()\n\n    res.status(201).json({\n      code: 200,\n      success: true,\n      message: 'Slider created successfully',\n      slider,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteSlider = async (req, res, next) => {\n  try {\n    const slider = await Slider.findById(req.params.id)\n    if (!slider) {\n      throw new Error('Slider not found')\n    }\n\n    fs.unlinkSync(path.resolve(DIRNAME, `src/uploads/${slider.image}`))\n\n    await slider.remove()\n\n    res.status(200).json({\n      code: 200,\n      success: true,\n      message: 'Slider deleted successfully',\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listSliders = async (req, res, next) => {\n  try {\n    const sliders = await Slider.find().populate({\n      path: 'target',\n      populate: {\n        path: 'itemId',\n        select: 'name title',\n      },\n    })\n\n    res.status(200).json({\n      code: 200,\n      success: true,\n      sliders,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = express.Router()\n\nimport {isAdmin, isAuth} from '../middlewares/auth.js'\n\nimport {\n    //incomingEmails,\n    outgoingEmails,\n    getEmailData,\n    listAllEmails,\n    deleteEmail,\n    updateEmail\n} from '../controllers/supportControllers.js'\n\n//router.post('/incoming',incomingEmails)\nrouter.post('/outgoing', isAuth, isAdmin, outgoingEmails)\nrouter.get('/:id', isAuth, isAdmin, getEmailData)\nrouter.get('/', isAuth, isAdmin, listAllEmails)\nrouter.delete('/:id', isAuth, isAdmin, deleteEmail)\nrouter.patch('/:id', isAuth, isAdmin, updateEmail)\n\nexport default router", "// @ts-nocheck\nimport fs from 'fs'\nimport path from 'path'\nimport Support from '../models/supportModel.js'\nimport User from '../models/userModal.js'\nimport template from '../emails/template.js'\nimport sendEmail from '../emails/send.js'\nimport { DIRNAME } from '../constants.js'\n\nexport const incomingEmails = async (req, res, next) => {\n  if (req.body['X-Mailgun-Incoming'] !== 'Yes') {\n    if (req.files) {\n      req.files.forEach((file) => {\n        fs.unlinkSync(path.resolve(DIRNAME, `src/uploads/${file.filename}`))\n      })\n    }\n    return res.status(400).json('Invalid request')\n  }\n\n  const from = req.body.from.split('<')[0].trim()\n  const sender = req.body.sender\n  const recipient = req.body.recipient\n  const subject = req.body.subject\n  const html = req.body['stripped-html']\n\n  const incomingEmail = new Support({\n    from,\n    sender,\n    recipient,\n    subject,\n    html,\n  })\n\n  if (req.files) {\n    const attachments = req.files.map((file) => {\n      return {\n        path: file.filename,\n        mimetype: file.mimetype,\n        originalName: file.originalname,\n      }\n    })\n\n    incomingEmail.attachments = attachments\n  }\n\n  try {\n    await incomingEmail.save()\n    res.sendStatus(200)\n  } catch (error) {\n    res.status(500)\n    next(new Error('something went wrong'))\n  }\n}\n\nexport const outgoingEmails = async (req, res, next) => {\n  const sender = req.body.sender\n  const recipient = req.body.recipient\n  const subject = req.body.subject\n  const html = req.body.html\n\n  try {\n    const user = await User.findOne({ email: recipient })\n\n    const outputHTML = template.support({\n      name: user ? `${user.firstName} ${user.lastName}` : null,\n      html,\n    })\n\n    const data = {\n      from: `Elgendy Autotronics Center <${sender}>`,\n      to: [recipient],\n      subject,\n      html: outputHTML,\n    }\n\n    await sendEmail(data)\n\n    const outGoingEmail = new Support({\n      from: `Elgendy Autotronics Center`,\n      sender,\n      recipient,\n      subject,\n      isRead: true,\n      html: outputHTML,\n    })\n\n    const savedEmail = await outGoingEmail.save()\n    res.send({\n      code: 200,\n      success: true,\n      email: savedEmail,\n      message: 'E-mail sent successfully',\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllEmails = async (req, res, next) => {\n  const { limit, isStarred, isArchived, isSent, keyword } = req.query\n  try {\n    let matchFilter = {\n      isArchived: false,\n      $and: [\n        { sender: { $ne: 'support@gendyecu.com' } },\n        { sender: { $ne: 'noreplay@gendyecu.com' } },\n      ],\n    }\n\n    if (isSent) {\n      matchFilter = {\n        isArchived: false,\n        $or: [\n          { sender: { $eq: 'support@gendyecu.com' } },\n          { sender: { $eq: 'noreplay@gendyecu.com' } },\n        ],\n      }\n    }\n\n    if (isStarred) {\n      const value = isStarred === 'true' ? true : false\n      matchFilter = {\n        isStarred: value,\n        isArchived: false,\n      }\n    }\n    if (isArchived) {\n      const value = isArchived === 'true' ? true : false\n      matchFilter = {\n        isArchived: value,\n      }\n    }\n\n    if (keyword) {\n      if (isSent) {\n        matchFilter = {\n          ...matchFilter,\n          $or: [\n            {\n              subject: {\n                $regex: keyword,\n                $options: 'i',\n              },\n              $or: [\n                { sender: { $eq: 'support@gendyecu.com' } },\n                { sender: { $eq: 'noreplay@gendyecu.com' } },\n              ],\n            },\n            {\n              recipient: {\n                $regex: keyword,\n                $options: 'i',\n              },\n              $or: [\n                { sender: { $eq: 'support@gendyecu.com' } },\n                { sender: { $eq: 'noreplay@gendyecu.com' } },\n              ],\n            },\n          ],\n        }\n      } else {\n        matchFilter = {\n          ...matchFilter,\n          $or: [\n            {\n              subject: {\n                $regex: keyword,\n                $options: 'i',\n              },\n            },\n            {\n              sender: {\n                $regex: keyword,\n                $options: 'i',\n              },\n            },\n          ],\n        }\n      }\n    }\n\n    const supportEmails = await Support.find(matchFilter)\n      .limit(limit || 15)\n      .sort({ createdAt: -1 })\n    const countNonRead = await Support.count({\n      isRead: false,\n      isArchived: false,\n      $and: [\n        { sender: { $ne: 'support@gendyecu.com' } },\n        { sender: { $ne: 'noreplay@gendyecu.com' } },\n      ],\n    })\n\n    res.send({\n      code: 200,\n      success: true,\n      emails: supportEmails,\n      inbox: countNonRead,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getEmailData = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const email = await Support.findById(id)\n    if (!email) {\n      res.status(404)\n      throw new Error('Email not found')\n    }\n    res.send({\n      code: 200,\n      success: true,\n      email,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteEmail = async (req, res, next) => {\n  const { id } = req.params\n\n  try {\n    const email = await Support.findById(id)\n    if (!email) {\n      res.status(404)\n      throw new Error('Email not found')\n    }\n\n    await email.remove()\n    res.send({\n      code: 200,\n      success: true,\n      message: 'Email deleted successfully',\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateEmail = async (req, res, next) => {\n  const { id } = req.params\n  const { isStarred, isArchived, isRead } = req.body\n  try {\n    const email = await Support.findById(id)\n    if (!email) {\n      res.status(404)\n      throw new Error('Email not found')\n    }\n\n    if (isStarred) {\n      const value = isStarred === 'true' ? true : false\n      email.isStarred = value\n    }\n    if (isArchived) {\n      const value = isArchived === 'true' ? true : false\n      email.isArchived = value\n    }\n\n    if (isRead) {\n      email.isRead = isRead\n    }\n\n    const updatedEmail = await email.save()\n    res.send({\n      code: 200,\n      success: true,\n      email: updatedEmail,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import mongoose from 'mongoose'\n\nconst supportSchema = new mongoose.Schema(\n  {\n    from: {\n      type: String,\n      required: true,\n    },\n    sender: {\n      type: String,\n      required: true,\n    },\n    recipient: {\n      type: String,\n      required: true,\n    },\n    subject: {\n      type: String,\n      required: true,\n    },\n    html: {\n      type: String,\n      required: true,\n    },\n    attachments: [\n      {\n        path: String,\n        mimetype: String,\n        originalName: String,\n      },\n    ],\n    isStarred: {\n      type: Boolean,\n      default: false,\n    },\n    isRead: {\n      type: Boolean,\n      default: false,\n    },\n    isArchived: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  { timestamps: true }\n)\n\nexport default mongoose.model('Support', supportSchema)\n", "import express from 'express'\nconst router = new express.Router()\n\nimport { isAuth, isAdmin } from '../middlewares/auth.js'\nimport { uploadHandler } from '../middlewares/upload.js'\n\nimport {\n  getAdminInfo,\n  updateAdminInfo,\n  updateAdminImage,\n  getAdminProfilePhoto,\n} from '../controllers/adminController.js'\n\nimport { updatePassword } from '../controllers/userController.js'\n\nrouter.get('/info', isAuth, isAdmin, getAdminInfo)\nrouter.get('/avatar', isAuth, isAdmin, getAdminProfilePhoto)\nrouter.patch('/info', isAuth, isAdmin, updateAdminInfo)\nrouter.patch(\n  '/image',\n  isAuth,\n  isAdmin,\n  uploadHandler.single('image'),\n  updateAdminImage\n)\nrouter.patch('/password', isAuth, isAdmin, updatePassword)\n\nexport default router\n", "import User from '../models/userModal.js'\nimport Instructor from '../models/instructorModal.js'\n\nexport const getAdminInfo = async (req, res, next) => {\n  try {\n    const user = await User.findById(req.user._id)\n    const instructor = await Instructor.findOne({ info: req.user._id })\n\n    const info = {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      about: instructor?.about ?? '',\n      image: instructor?.avatar ?? '',\n      role: instructor?.role ?? '',\n      reviews: instructor?.reviews ?? '',\n    }\n    res.send({\n      info,\n      code: 200,\n      success: true,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateAdminInfo = async (req, res, next) => {\n  const { firstName, lastName, email, phoneNumber, role, about } = req.body\n  try {\n    if (about) {\n      const instructor = await Instructor.findOne({ info: req.user._id })\n      instructor.about = about\n      await instructor.save()\n      res.send({\n        info: { about },\n        message: 'About has Successfully Updated',\n        code: 200,\n        success: true,\n      })\n      return\n    }\n    const user = await User.findByIdAndUpdate(\n      req.user._id,\n      { firstName, lastName, email, phoneNumber },\n      { new: true }\n    )\n    const instructor = await Instructor.findOneAndUpdate(\n      { info: req.user._id },\n      { role },\n      { new: true }\n    )\n\n    const info = {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      role: instructor.role,\n    }\n\n    res.send({\n      info,\n      message: 'Info has Successfully Updated',\n      code: 200,\n      success: true,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateAdminImage = async (req, res, next) => {\n  try {\n    await Instructor.findOneAndUpdate(\n      { info: req.user._id },\n      { avatar: req.file.filename }\n    )\n    res.send({\n      image: req.file.filename,\n      code: 200,\n      success: true,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const getAdminProfilePhoto = async (req, res, next) => {\n  try {\n    const admin = await User.findById(req.user._id)\n    const instructor = await Instructor.findOne({ info: admin._id })\n\n    res.send({\n      code: 200,\n      success: true,\n      avatar: instructor.avatar,\n    })\n  } catch (error) {}\n}\n", "import express from 'express'\nconst router = express.Router()\n\nimport { isAdmin, isAuth } from '../middlewares/auth.js'\n\nimport { uploadHandler } from '../middlewares/upload.js'\n\nimport {\n  createItem,\n  listAllItems,\n  updateItem,\n  deleteItem,\n  listAllPages,\n} from '../controllers/menuController.js'\n\nrouter.post('/new', isAuth, isAdmin, uploadHandler.single('image'), createItem)\nrouter.patch(\n  '/:id/:parent?',\n  isAuth,\n  isAdmin,\n  uploadHandler.single('image'),\n  updateItem\n)\nrouter.get('/', listAllItems)\nrouter.get('/pages', isAuth, isAdmin, listAllPages)\nrouter.delete('/:id/:parent?', isAuth, isAdmin, deleteItem)\n\nexport default router\n", "import fs from 'fs'\nimport path from 'path'\nimport { fileURLToPath } from 'url'\nimport Menu from '../models/MenuModel.js'\nimport { DIRNAME } from '../constants.js'\n\nexport const createItem = async (req, res, next) => {\n  const { title, order, parent } = req.body\n\n  try {\n    if (parent) {\n      const parentItem = await Menu.findById(parent)\n\n      const isItemFound = parentItem.subItems.find(\n        (item) => item.title['en'] === title['en']\n      )\n      if (isItemFound) {\n        res.status(400)\n        throw new Error('Menu item already exists')\n      }\n\n      const sameOrderItem = parentItem.subItems.find(\n        (item) => item.order === parseInt(order)\n      )\n      if (sameOrderItem) {\n        const sameOrderItems = parentItem.subItems.filter(\n          (item) => item.order >= parseInt(order)\n        )\n\n        sameOrderItems.forEach((item) => {\n          item.order += 1\n        })\n      }\n\n      const parsedTitle = JSON.parse(title)\n\n      const data = { title: parsedTitle, order }\n\n      if (req.fileName) {\n        data.image = req.fileName\n      }\n\n      parentItem.subItems.push(data)\n      const savedItem = await parentItem.save()\n      const targetItem = savedItem.subItems.find(\n        (item) =>\n          item.title['en'] === parsedTitle['en'] &&\n          item.order === parseInt(order)\n      )\n\n      res.status(201).send({\n        item: targetItem,\n        message: 'Item added successfully',\n        success: true,\n      })\n      return\n    }\n\n    const isFound = await Menu.findOne({ 'title.en': title['en'] })\n    if (isFound) {\n      res.status(400)\n      throw new Error('Menu item already exists')\n    }\n\n    const items = await Menu.find()\n\n    const sameOrderItem = items.find((item) => item.order === parseInt(order))\n    if (sameOrderItem) {\n      const sameOrderItems = items.filter(\n        (item) => item.order >= parseInt(order)\n      )\n\n      for (const item of sameOrderItems) {\n        item.order += 1\n        await item.save()\n      }\n    }\n\n    const data = { title: JSON.parse(title), order }\n    if (req.fileName) data.image = req.fileName\n    const item = await Menu.create(data)\n\n    res.status(201).send({\n      item,\n      message: 'Item added successfully',\n      success: true,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateItem = async (req, res, next) => {\n  const { title, order } = req.body\n  const { id, parent } = req.params\n\n  try {\n    if (parent) {\n      const parentItem = await Menu.findById(parent)\n\n      const sameOrderItem = parentItem.subItems.find(\n        (item) => item.order === parseInt(order)\n      )\n      const item = parentItem.subItems.find(\n        (item) => item._id.toString() === id\n      )\n      if (sameOrderItem) {\n        sameOrderItem.order = item.order\n      }\n      item.title = JSON.parse(title)\n      item.order = order\n\n      if (req.fileName) {\n        item.image &&\n          fs.unlinkSync(path.join(DIRNAME, 'src/uploads/', item.image))\n        item.image = req.fileName\n      }\n\n      await parentItem.save()\n\n      res.status(201).send({\n        item,\n        message: 'Item updated successfully',\n        success: true,\n      })\n      return\n    }\n\n    const items = await Menu.find()\n    const item = await Menu.findById(id)\n\n    const sameOrderItem = items.find((item) => item.order === parseInt(order))\n    if (sameOrderItem) {\n      sameOrderItem.order = item.order\n      await sameOrderItem.save()\n    }\n\n    item.title = JSON.parse(title)\n    item.order = order\n\n    if (req.fileName) {\n      item.image &&\n        fs.unlinkSync(path.join(DIRNAME, 'src/uploads/', item.image))\n      item.image = req.fileName\n    }\n\n    await item.save()\n\n    res.send({\n      item,\n      message: 'Item updated successfully',\n      success: true,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteItem = async (req, res, next) => {\n  const { order } = req.query\n  const { id, parent } = req.params\n\n  try {\n    if (parent) {\n      const parentItem = await Menu.findById(parent)\n\n      const items = parentItem.subItems.filter(\n        (item) => item._id.toString() !== id\n      )\n\n      items.forEach((item) => {\n        if (item.order > parseInt(order)) {\n          item.order -= 1\n        }\n      })\n\n      parentItem.subItems = items\n      await parentItem.save()\n      res.send({\n        message: 'Item deleted successfully',\n        success: true,\n      })\n      return\n    }\n\n    const items = await Menu.find()\n\n    for (const item of items) {\n      if (item.order > parseInt(order)) {\n        item.order -= 1\n        await item.save()\n      }\n    }\n    const item = await Menu.findById(id)\n    await item.remove()\n    res.send({\n      message: 'Item deleted successfully',\n      success: true,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllItems = async (req, res, next) => {\n  try {\n    const items = await Menu.find().sort({ order: 1 })\n    res.send({\n      items,\n      success: true,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllPages = async (req, res, next) => {\n  try {\n    const items = await Menu.find()\n    const pages = []\n\n    for (const item of items) {\n      if (item.subItems.length) {\n        item.subItems.forEach((subItem) => pages.push(subItem.title['en']))\n      } else {\n        pages.push(item.title['en'])\n      }\n    }\n\n    res.send({\n      code: 200,\n      success: true,\n      pages,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import mongoose from 'mongoose'\n\nconst subItemsSchema = new mongoose.Schema(\n  {\n    title: {\n      en: String,\n      ar: String,\n    },\n    image: String,\n    order: Number,\n  },\n  { timestamps: true }\n)\n\nconst menuSchema = new mongoose.Schema(\n  {\n    title: {\n      en: String,\n      ar: String,\n    },\n    order: Number,\n    image: String,\n    subItems: [subItemsSchema],\n  },\n  { timestamps: true }\n)\n\nexport default mongoose.model('Menu', menuSchema)\n", "import express from 'express'\nconst router = express.Router()\n\nimport { isAuth, isAdmin } from '../middlewares/auth.js'\n\nimport { uploadHandler } from '../middlewares/upload.js'\n\nimport {\n  createMedia,\n  listAllMedia,\n  updateMedia,\n  deleteMedia,\n} from '../controllers/mediaController.js'\n\nrouter.post('/', isAuth, isAdmin, uploadHandler.single('media'), createMedia)\nrouter.get('/', listAllMedia)\nrouter.put('/:id', isAuth, isAdmin, uploadHandler.single('media'), updateMedia)\nrouter.delete('/:id', isAuth, isAdmin, deleteMedia)\n\nexport default router\n", "import mongoose from 'mongoose'\n\nconst mediaSchema = new mongoose.Schema(\n  {\n    path: {\n      type: String,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    title: String,\n    thumbnail: String,\n  },\n  { timestamps: true }\n)\n\nexport default mongoose.model('Media', mediaSchema)\n", "import Media from '../models/MediaModel.js'\n\nexport const createMedia = async (req, res, next) => {\n  const { type, url } = req.body\n  const newMedia = new Media({\n    path: type === 'image' ? req.fileName : url,\n    type,\n    title: req.body.title,\n    thumbnail: type === 'video' ? req.fileName : null,\n  })\n  try {\n    const savedMedia = await newMedia.save()\n\n    res.status(201).json({\n      success: true,\n      message: 'Media created successfully',\n      media: savedMedia,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const listAllMedia = async (req, res, next) => {\n  const { type, skip } = req.query\n  try {\n    const media = await Media.find({ type })\n      .sort({ createdAt: -1 })\n      .limit(15)\n      .skip(parseInt(skip))\n    const count = await Media.countDocuments({ type })\n\n    res.status(200).json({\n      code: 200,\n      success: true,\n      media,\n      count,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const updateMedia = async (req, res, next) => {\n  const { id } = req.params\n  const { type, url, title } = req.body\n  try {\n    const media = await Media.findById(id)\n    if (!media) {\n      res.status(404)\n      throw new Error('Media not found')\n    }\n    media.path = url\n    media.type = type\n    media.title = title\n    req.fileName && (media.thumbnail = req.fileName)\n    await media.save()\n    res.status(200).json({\n      message: 'Media updated successfully',\n      media,\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const deleteMedia = async (req, res, next) => {\n  const { id } = req.params\n  try {\n    const media = await Media.findById(id)\n    if (!media) {\n      res.status(404)\n      throw new Error('Media not found')\n    }\n    await media.remove()\n    res.status(200).json({\n      message: 'Media deleted successfully',\n    })\n  } catch (error) {\n    next(error)\n  }\n}\n", "import express from 'express'\nconst router = express.Router()\n\nimport {\n  sendClientId,\n  createOrder,\n} from '../controllers/purchasingController.js'\n\nimport { isAuth } from '../middlewares/auth.js'\n\nrouter.get('/clientId', isAuth, sendClientId)\nrouter.post('/order/:type', isAuth, createOrder)\n\nexport default router\n", "import Course from '../models/courseModal.js'\nimport Product from '../models/productModal.js'\nimport Coupon from '../models/couponModal.js'\nimport paypal from '@paypal/checkout-server-sdk'\n\nconst Environment =\n  process.env.NODE_ENV === 'production'\n    ? paypal.core.LiveEnvironment\n    : paypal.core.SandboxEnvironment\nconst paypalClient = new paypal.core.PayPalHttpClient(\n  new Environment(\n    process.env.PAYPAL_CLIENT_ID,\n    process.env.PAYPAL_CLIENT_SECRET\n  )\n)\nexport const sendClientId = async (req, res) => {\n  const clientId = process.env.PAYPAL_CLIENT_ID\n  if (!clientId)\n    return res.status(404).send({ message: 'Paypal client id not found' })\n  res.send({ paypalClientId: process.env.PAYPAL_CLIENT_ID, success: true })\n}\n\n// client will send the\n// course id and coupon code,\n// items array of objects with _id and quantity of products,\n// type=product or course\nexport const createOrder = async (req, res, next) => {\n  const { type } = req.params\n  const { items, courseId, coupon } = req.body\n  let total = 0\n  let purchasedItems = []\n  let breakdown = {}\n  // create order for product\n  if (type === 'product') {\n    // call db to get price for every product and calculate total\n    const products = await Product.find({\n      _id: { $in: items.map((item) => item.product) },\n    })\n    // calculate total\n    total = products.reduce((acc, product) => {\n      const item = items.find((item) => item.product === product._id.toString())\n      return acc + product.price * item.quantity\n    }, 0)\n    // create purchased items\n    purchasedItems = items.map((item) => {\n      const product = products.find(\n        (prod) => prod._id.toString() === item.product\n      )\n      return {\n        name: product.name,\n        unit_amount: {\n          currency_code: 'USD',\n          value: product.price.toFixed(2),\n        },\n        quantity: item.quantity,\n      }\n    })\n    // create breakdown\n    breakdown = {\n      item_total: {\n        currency_code: 'USD',\n        value: total,\n      },\n    }\n    // create order for course\n  } else if (type === 'course') {\n    // call db to get price for the course and calculate total\n    const course = await Course.findById(courseId)\n    let couponDiscount = 0\n    // check if coupon is valid\n    if (coupon) {\n      const isFound = await Coupon.findOne({ code: coupon })\n      if (isFound) {\n        couponDiscount = isFound.discountPercentage\n      }\n    }\n    const courseDiscountAmount = (course.price * course.discount) / 100\n    // calculate total\n    total = parseFloat((course.price - courseDiscountAmount).toFixed(2))\n    const couponDiscountAmount = (total * couponDiscount) / 100\n\n    total = parseFloat((total - couponDiscountAmount).toFixed(2))\n\n    const overallDiscount = courseDiscountAmount + couponDiscountAmount\n\n    // create purchased items\n    purchasedItems = [\n      {\n        name: course.name,\n        unit_amount: {\n          currency_code: 'USD',\n          value: course.price.toFixed(2),\n        },\n        quantity: 1,\n      },\n    ]\n    // create breakdown\n    breakdown = {\n      item_total: {\n        currency_code: 'USD',\n        value: course.price.toFixed(2),\n      },\n      discount: {\n        currency_code: 'USD',\n        value: overallDiscount.toFixed(2),\n      },\n    }\n  }\n\n  //construct the request to send to paypal to create order\n  const request = new paypal.orders.OrdersCreateRequest()\n  //representation of the order for paypal window to popup properly\n  request.prefer('return=representation')\n  //construct request body\n  request.requestBody({\n    intent: 'CAPTURE',\n    purchase_units: [\n      {\n        amount: {\n          currency_code: 'USD',\n          value: total,\n          breakdown: breakdown,\n        },\n        items: purchasedItems,\n      },\n    ],\n  })\n  try {\n    const order = await paypalClient.execute(request)\n    res.send({ order: { id: order.result.id, total }, success: true })\n  } catch (error) {\n    next(error)\n  }\n}\n", "export const notFound = async(req, res, next) => {\n    const error = new Error(`${req.originalUrl} not found`)\n    res.status(404)\n    next(error)\n}\n\nexport const errorHandler = async(err, req, res, next) => {\n    let error = null;\n    for(let key in  err.errors) {\n        if(key === 'password') {\n            error = err.errors[key].message\n        }else {\n            error = `${err.errors[key].value} is invalid please write a valid ${err.errors[key].path}`\n        }\n    }\n    const statusCode = res.statusCode === 200 ? 500 : res.statusCode\n    let errorObject = {}\n    if(process.env.NODE_ENV === 'development') {\n        errorObject = {\n            success:false,\n            message:error ? error :err.message ,\n            error:statusCode,\n            stack:err.stack\n        }\n    }else {\n        errorObject = {\n            success:false,\n            message:error ? error :err.message ,\n            error:statusCode,\n        }\n    }\n    res.status(statusCode).send(errorObject)\n}"],
  "mappings": "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",
  "names": ["import_express", "import_cors", "import_dotenv", "import_cookie_parser", "import_helmet", "import_morgan", "import_compression", "import_path", "import_mongoose", "import_bcrypt", "import_jsonwebtoken", "strings", "localization_default", "userSchema", "mongoose", "user", "checkShippingAddress", "address", "key", "email", "password", "res", "lang", "User", "localization_default", "bcrypt", "days", "jwt", "next", "userModal_default", "import_jsonwebtoken", "isAuth", "req", "res", "next", "lang", "token", "decode", "jwt", "err", "localization_default", "user", "userModal_default", "error", "isAdmin", "checkApiKey", "import_mongoose", "import_chalk", "databaseConnection", "_", "conn", "mongoose", "chalk", "error", "dbConnection_default", "import_express", "import_mongoose", "courseSchema", "mongoose", "courseModal_default", "import_mongoose", "productSchema", "mongoose", "productModal_default", "import_mongoose", "reviewSchema", "mongoose", "instructorSchema", "doc", "next", "info", "_", "instructorModal_default", "import_mongoose", "commentSchema", "mongoose", "blogSchema", "blogModel_default", "import_mongoose", "enrollmentSchema", "mongoose", "enrollmentModal_default", "import_mongoose", "orderSchema", "mongoose", "orderModal_default", "import_randomstring", "import_resend", "template", "info", "item", "template_default", "import_dotenv", "import_path", "DIRNAME", "dotenv", "path", "DIRNAME", "resend", "sendEmail", "data", "type", "html", "template_default", "sendData", "error", "send_default", "import_jsonwebtoken", "import_bcrypt", "import_google_auth_library", "import_node_fetch", "import_crypto", "CLIENT_ID", "createNewUser", "req", "res", "next", "email", "newUser", "userModal_default", "lang", "localization_default", "user", "sendAuthLinkToUser", "error", "userAuthentication", "password", "token", "expireAt", "adminLogin", "adminLogout", "userLogout", "updateUserData", "updatedData", "allowedKeys", "key", "address", "updatePassword", "oldPass", "newPass", "bcrypt", "getUserData", "getUserDataById", "id", "listAllUsers", "name", "page", "skip", "searchFilter", "count", "users", "googleSignIn", "googleToken", "userObj", "verifyGoogleToken", "isExist", "facebookSignIn", "fetchedUser", "verifyFacebookToken", "generatedToken", "deleteUserAccount", "instructor", "instructorModal_default", "courses", "courseModal_default", "course", "deleteUserById", "sendEmailActivationLink", "sendRestPasswordLink", "verifyAuthLink", "type", "decode", "jwt", "err", "getCourseAndProductDownloadLink", "enrollments", "enrollmentModal_default", "orders", "orderModal_default", "courseLinks", "enrollment", "productLinks", "order", "item", "crypto", "generalSearchHandler", "keyword", "result", "products", "productModal_default", "product", "blogs", "blogModel_default", "blog", "resetCode", "randomstring", "cryptResetCode", "info", "emailData", "send_default", "fetch", "payload", "day", "today", "router", "express", "createNewUser", "userAuthentication", "googleSignIn", "facebookSignIn", "adminLogin", "isAuth", "userLogout", "isAdmin", "adminLogout", "updateUserData", "updatePassword", "deleteUserAccount", "deleteUserById", "generalSearchHandler", "getUserData", "getCourseAndProductDownloadLink", "getUserDataById", "listAllUsers", "sendEmailActivationLink", "sendRestPasswordLink", "verifyAuthLink", "userRouter_default", "import_express", "import_multer", "import_path", "uploadsDirectory", "path", "DIRNAME", "storage", "multer", "req", "file", "cb", "fileName", "uploadHandler", "localization_default", "uploadSliderImageHandler", "ChunkUploadHandler", "import_fs", "import_path", "import_mongoose", "wishlistSchema", "mongoose", "wishlistModal_default", "import_uuid", "mappingProducts", "products", "allProducts", "types", "product", "key", "productsOfType", "uuidv4", "mappingProducts_default", "createNewProduct", "req", "res", "next", "lang", "options", "newProduct", "productModal_default", "file", "localization_default", "product", "error", "listAllProduct", "name", "type", "price", "quantity", "page", "skip", "isPublic", "isMainPage", "searchFilter", "priceRange", "firstRange", "secondRange", "quantityRange", "count", "products", "mappedProducts", "mappingProducts_default", "getOneProduct", "id", "isFav", "wishlistModal_default", "targetedProduct", "updateProduct", "updatedData", "allowedKeys", "key", "updateProductImage", "savedImage", "image", "deleteProductImage", "imageId", "fs", "path", "deleteProductLink", "link", "lk", "deleteProduct", "toggleProductListing", "updatedProduct", "import_mongoose", "cartSchema", "mongoose", "cartModel_default", "addItemToCart", "req", "res", "next", "lang", "newCartItem", "cartModel_default", "item", "populatedItem", "localization_default", "error", "removeItemFromCart", "id", "listCartItems", "items", "deleteAllCartItems", "router", "express", "isAuth", "listCartItems", "addItemToCart", "removeItemFromCart", "deleteAllCartItems", "isAdmin", "uploadHandler", "createNewProduct", "getOneProduct", "listAllProduct", "updateProduct", "toggleProductListing", "updateProductImage", "deleteProductImage", "deleteProduct", "deleteProductLink", "productRouter_default", "import_express", "import_types", "createOrder", "req", "res", "next", "order", "orderModal_default", "newOrder", "populatedOrder", "error", "getOrderById", "lang", "localization_default", "getAllUserOrders", "orders", "getAllOrders", "firstName", "_id", "createdAt", "totalPrice", "skip", "searchFilter", "date", "priceRange", "firstRange", "secondRange", "aggregateOption", "documentCount", "count", "updateOrder", "updatedData", "allowedKeys", "key", "router", "express", "isAuth", "createOrder", "isAdmin", "getAllOrders", "getOrderById", "getAllUserOrders", "updateOrder", "orderRouter_default", "import_express", "import_fs", "import_path", "import_mongoose", "chapterSchema", "mongoose", "chapterModal_default", "import_mongoose", "lessonSchema", "mongoose", "lessonModel_default", "import_mongoose", "reviewSchema", "mongoose", "reviewsModal_default", "createNewCourse", "req", "res", "next", "lang", "course", "chapters", "lessons", "savedCourse", "courseModal_default", "chapterModal_default", "lessonModel_default", "localization_default", "error", "getTheCourseData", "id", "type", "instructor", "instructorModal_default", "instructorData", "calculateInstructorData", "allChapters", "getChaptersAndLessons", "courseDuration", "chapter", "reviews", "reviewsModal_default", "reviewsData", "calculateReviewData", "enrollments", "enrollmentModal_default", "enrollment", "isFav", "wishlistModal_default", "listAllCourses", "name", "price", "rating", "students", "isPaid", "page", "skip", "isPublished", "isPublic", "searchFilter", "priceRange", "firstRange", "secondRange", "studentRange", "aggregationOptions", "courses", "courseCount", "count", "listPurchasedCourses", "updateCourseData", "updatedData", "allowedKeys", "key", "updatedCourse", "updateCourseImage", "fs", "path", "deleteCourse", "toggleCoursePublish", "deleteLink", "link", "lk", "allCourses", "studentsNumber", "overAllReviews", "allRating", "review", "averageNumericRating", "allReviews", "duration", "lesson", "allLessons", "numberOfReview", "overAllRating", "numberOfRating1", "numberOfRating2", "numberOfRating3", "numberOfRating4", "numberOfRating5", "r", "rating1Percentage", "rating2Percentage", "rating3Percentage", "rating4Percentage", "rating5Percentage", "createNewChapter", "req", "res", "next", "lang", "id", "title", "newChapter", "chapterModal_default", "localization_default", "chapter", "error", "getOneChapter", "getChapter", "lessons", "lessonModel_default", "listAllChapter", "allChapters", "chapters", "updateChapter", "updatedData", "allowedKeys", "key", "updatedChapter", "deleteOneChapter", "createNewLesson", "req", "res", "next", "lang", "id", "title", "newLesson", "lessonModel_default", "localization_default", "lesson", "error", "updateLesson", "updatedData", "allowedKeys", "key", "updatedLesson", "deleteLesson", "createEnrollment", "req", "res", "next", "lang", "id", "user", "payment", "targetUser", "newEnrollment", "enrollmentModal_default", "localization_default", "targetedCourse", "courseModal_default", "firstChapter", "chapterModal_default", "firstLesson", "lessonModel_default", "enroll", "error", "getEnrollmentData", "enrollment", "increaseEnrollmentProgress", "chapter", "lesson", "targetedEnroll", "chapters", "numberOfLessons", "lessonsCount", "numberOfCompletedLesson", "progress", "decreaseEnrollmentProgress", "ls", "ch", "listCourseEnrollments", "enrollments", "import_mongoose", "noteSchema", "mongoose", "notesModal_default", "createNote", "req", "res", "next", "id", "lesson", "lang", "newNote", "notesModal_default", "localization_default", "note", "populatedNote", "error", "updateNote", "targetedNote", "listAllNotes", "searchFilter", "notes", "deleteNote", "import_fs", "import_path", "import_mongoose", "announcementSchema", "mongoose", "announcementModel_default", "createNewAnnouncement", "req", "res", "next", "lang", "id", "announcement", "newAnnouncement", "announcementModel_default", "localization_default", "error", "listAllAnnouncement", "page", "skip", "count", "announcements", "getOneAnnouncement", "targetedAnnouncement", "updateAnnouncement", "updateAnnouncementImage", "fs", "path", "deleteAnnouncement", "addAnnouncementComment", "comment", "newComment", "listAllAnnouncementComments", "allComments", "deleteAnnouncementsComment", "router", "express", "isAuth", "isAdmin", "uploadHandler", "createNewCourse", "deleteCourse", "updateCourseData", "toggleCoursePublish", "updateCourseImage", "listPurchasedCourses", "listAllCourses", "getTheCourseData", "deleteLink", "createNewChapter", "updateChapter", "getOneChapter", "listAllChapter", "deleteOneChapter", "createNewLesson", "updateLesson", "deleteLesson", "createEnrollment", "getEnrollmentData", "listCourseEnrollments", "increaseEnrollmentProgress", "decreaseEnrollmentProgress", "createNote", "listAllNotes", "updateNote", "deleteNote", "createNewAnnouncement", "getOneAnnouncement", "listAllAnnouncement", "updateAnnouncement", "updateAnnouncementImage", "deleteAnnouncement", "addAnnouncementComment", "listAllAnnouncementComments", "deleteAnnouncementsComment", "courseRouter_default", "import_express", "addCourseReview", "req", "res", "next", "lang", "course", "newReview", "reviewsModal_default", "localization_default", "review", "error", "listAllReviews", "reviews", "getOneReview", "id", "updateCourseReview", "updatedData", "allowedKeys", "key", "updatedReview", "deleteOneReview", "router", "express", "isAuth", "addCourseReview", "listAllReviews", "getOneReview", "updateCourseReview", "deleteOneReview", "reviewRouter_default", "import_express", "addInstructor", "req", "res", "next", "lang", "info", "newInstructor", "instructorModal_default", "localization_default", "savedInstructor", "error", "getOneInstructor", "id", "instructor", "listAllInstructors", "page", "skip", "count", "instructors", "updateInstructorData", "updatedData", "allowedKeys", "key", "updatedInstructor", "deleteInstructor", "addInstructorReview", "newReview", "review", "listAllReviews", "allReviews", "deleteReview", "router", "express", "uploadHandler", "isAuth", "isAdmin", "addInstructor", "getOneInstructor", "listAllInstructors", "updateInstructorData", "deleteInstructor", "listAllReviews", "addInstructorReview", "deleteReview", "instructorRouter_default", "import_express", "import_fs", "import_path", "createNewBlog", "req", "res", "next", "lang", "newBlog", "blogModel_default", "localization_default", "blog", "error", "listAllBlogs", "title", "views", "page", "skip", "searchFilter", "viewRange", "firstRange", "secondRange", "count", "blogs", "getOneBlog", "id", "updateBlog", "updatedData", "allowedKeys", "key", "updatedBlog", "controlBlogVisibility", "updateBlogImage", "fs", "path", "deleteBlog", "addBlogComment", "newComment", "comment", "savedBlog", "targetedComment", "listAllComments", "allComments", "deleteComment", "commentId", "comment_id", "router", "express", "isAuth", "isAdmin", "uploadHandler", "createNewBlog", "getOneBlog", "listAllBlogs", "updateBlog", "controlBlogVisibility", "updateBlogImage", "deleteBlog", "listAllComments", "addBlogComment", "deleteComment", "blogRouter_default", "import_express", "addItemToWishlist", "req", "res", "next", "lang", "item", "itemType", "newItem", "wishlistModal_default", "localization_default", "createdItem", "product", "productModal_default", "targetedProduct", "error", "removeItemFromWishlist", "id", "listAllWishlistItem", "type", "items", "allItems", "course", "courseModal_default", "router", "express", "isAuth", "addItemToWishlist", "removeItemFromWishlist", "listAllWishlistItem", "wishlistRouter_default", "import_express", "import_mongoose", "callSchema", "mongoose", "callsModal_default", "bookingCall", "req", "res", "next", "lang", "phone", "newCall", "callsModal_default", "isFound", "localization_default", "call", "error", "latestCalls", "calls", "count", "mappedCalls", "listAllCalls", "page", "skip", "method", "isDone", "date", "searchFilter", "offsetDate", "toggleCallActiveState", "id", "message", "deleteCall", "router", "express", "isAuth", "bookingCall", "isAdmin", "toggleCallActiveState", "listAllCalls", "latestCalls", "deleteCall", "callRouter_default", "import_express", "import_mongoose", "contactSchema", "mongoose", "contactModal_default", "createNewContact", "req", "res", "next", "lang", "newContact", "contactModal_default", "contact", "localization_default", "error", "listAllContacts", "page", "skip", "name", "phone", "email", "isRead", "searchFilter", "contacts", "count", "latestContacts", "mappedCalls", "toggleContactReadState", "id", "message", "deleteContact", "router", "express", "createNewContact", "isAuth", "isAdmin", "toggleContactReadState", "listAllContacts", "latestContacts", "deleteContact", "contactRouter_default", "import_express", "import_mongoose", "couponSchema", "mongoose", "couponModal_default", "createNewCoupon", "req", "res", "next", "lang", "code", "newCoupon", "couponModal_default", "localization_default", "coupon", "error", "acquireCoupon", "now", "listAllCoupon", "page", "skip", "coupons", "count", "updateCoupon", "updatedData", "id", "allowedKeys", "key", "toggleCouponValidityState", "message", "deleteCoupon", "router", "express", "isAuth", "isAdmin", "createNewCoupon", "updateCoupon", "toggleCouponValidityState", "acquireCoupon", "listAllCoupon", "deleteCoupon", "couponRouter_default", "import_express", "import_fs", "import_path", "import_googleapis", "import_node_fetch", "SCOPES", "GOOGLE_COURSES_FOLDER", "GOOGLE_PRODUCTS_FOLDER", "getOauthClient", "credentialsPath", "path", "DIRNAME", "credentials", "fs", "client_id", "client_secret", "redirect_uris", "getAuthURL", "generateAccessToken", "code", "auth", "token", "credential", "_", "listDriveFiles", "name", "folder", "query", "downloadDriveFile", "id", "drive", "file", "error", "deleteDriveFilePermission", "permission", "deleteDriveFile", "getGoogleAccessTokenByRefreshToken", "refresh_token", "accessTokenUrl", "accessTokenOption", "fetch", "getResumableURI", "req", "res", "next", "type", "part", "courseModal_default", "productModal_default", "parents", "uris", "isResumableURI", "ur", "access_token", "body", "url", "option", "resumableURI", "updatedUris", "getAccessToken", "files", "authenticateMember", "searchDriveFiles", "uploadFile", "start", "end", "length", "googleDriveUploadURL", "options", "response", "metadata", "course", "product", "idx", "downloadFile", "deleteFilePermission", "deleteFile", "deleteError", "resumePreviousUpload", "size", "range", "router", "express", "isAuth", "isAdmin", "authenticateMember", "getAccessToken", "ChunkUploadHandler", "getResumableURI", "uploadFile", "resumePreviousUpload", "deleteFile", "downloadFile", "deleteFilePermission", "searchDriveFiles", "driveRouter_default", "import_express", "mainDashboardInfo", "req", "res", "next", "users", "userModal_default", "courses", "courseModal_default", "products", "productModal_default", "blogs", "blogModel_default", "orders", "orderModal_default", "ordersCount", "enrollments", "enrollmentModal_default", "enrollmentsCount", "totalOrderSales", "acc", "item", "totalEnrollmentSales", "error", "latestRegisteredUsers", "latestContactsAndCalls", "contacts", "contactModal_default", "calls", "callsModal_default", "mappedContacts", "contact", "mappedCalls", "call", "latestListedOrders", "today", "lastWeek", "weekDayCount", "day", "latestEnrollments", "router", "express", "isAuth", "isAdmin", "mainDashboardInfo", "latestRegisteredUsers", "latestEnrollments", "latestListedOrders", "latestContactsAndCalls", "Dashboard_default", "import_express", "import_mongoose", "sliderSchema", "mongoose", "doc", "next", "_", "sliderModal_default", "import_fs", "import_path", "createSlider", "req", "res", "next", "target", "sliderTarget", "header", "subHeader", "newSlider", "sliderModal_default", "slider", "error", "deleteSlider", "fs", "path", "DIRNAME", "listSliders", "sliders", "router", "express", "isAuth", "isAdmin", "uploadSliderImageHandler", "createSlider", "listSliders", "deleteSlider", "sliderRouter_default", "import_express", "import_fs", "import_path", "import_mongoose", "supportSchema", "mongoose", "supportModel_default", "incomingEmails", "req", "res", "next", "file", "fs", "path", "DIRNAME", "from", "sender", "recipient", "subject", "html", "incomingEmail", "supportModel_default", "attachments", "outgoingEmails", "user", "userModal_default", "outputHTML", "template_default", "data", "send_default", "savedEmail", "error", "listAllEmails", "limit", "isStarred", "isArchived", "isSent", "keyword", "matchFilter", "supportEmails", "countNonRead", "getEmailData", "id", "email", "deleteEmail", "updateEmail", "isRead", "value", "updatedEmail", "router", "express", "isAuth", "isAdmin", "outgoingEmails", "getEmailData", "listAllEmails", "deleteEmail", "updateEmail", "supportRouter_default", "import_express", "getAdminInfo", "req", "res", "next", "user", "userModal_default", "instructor", "instructorModal_default", "info", "error", "updateAdminInfo", "firstName", "lastName", "email", "phoneNumber", "role", "about", "updateAdminImage", "getAdminProfilePhoto", "admin", "router", "express", "isAuth", "isAdmin", "getAdminInfo", "getAdminProfilePhoto", "updateAdminInfo", "uploadHandler", "updateAdminImage", "updatePassword", "adminRouter_default", "import_express", "import_fs", "import_path", "import_mongoose", "subItemsSchema", "mongoose", "menuSchema", "MenuModel_default", "createItem", "req", "res", "next", "title", "order", "parent", "parentItem", "MenuModel_default", "item", "parsedTitle", "data", "targetItem", "items", "sameOrderItems", "error", "updateItem", "id", "sameOrderItem", "fs", "path", "DIRNAME", "deleteItem", "listAllItems", "listAllPages", "pages", "subItem", "router", "express", "isAuth", "isAdmin", "uploadHandler", "createItem", "updateItem", "listAllItems", "listAllPages", "deleteItem", "menuRouter_default", "import_express", "import_mongoose", "mediaSchema", "mongoose", "MediaModel_default", "createMedia", "req", "res", "next", "type", "url", "newMedia", "MediaModel_default", "savedMedia", "error", "listAllMedia", "skip", "media", "count", "updateMedia", "id", "title", "deleteMedia", "router", "express", "isAuth", "isAdmin", "uploadHandler", "createMedia", "listAllMedia", "updateMedia", "deleteMedia", "mediaRouter_default", "import_express", "import_checkout_server_sdk", "Environment", "paypal", "paypalClient", "sendClientId", "req", "res", "createOrder", "next", "type", "items", "courseId", "coupon", "total", "purchasedItems", "breakdown", "products", "productModal_default", "item", "acc", "product", "prod", "course", "courseModal_default", "couponDiscount", "isFound", "couponModal_default", "courseDiscountAmount", "couponDiscountAmount", "overallDiscount", "request", "order", "error", "router", "express", "isAuth", "sendClientId", "createOrder", "purchaseRouter_default", "notFound", "req", "res", "next", "error", "errorHandler", "err", "key", "statusCode", "errorObject", "dbConnection_default", "dotenv", "path", "DIRNAME", "app", "express", "cors", "helmet", "morgan", "cookieParser", "compression", "req", "res", "next", "uploadHandler", "incomingEmails", "checkApiKey", "userRouter_default", "productRouter_default", "orderRouter_default", "courseRouter_default", "reviewRouter_default", "instructorRouter_default", "blogRouter_default", "wishlistRouter_default", "callRouter_default", "contactRouter_default", "couponRouter_default", "driveRouter_default", "Dashboard_default", "sliderRouter_default", "supportRouter_default", "adminRouter_default", "menuRouter_default", "mediaRouter_default", "purchaseRouter_default", "notFound", "errorHandler", "port"]
}
